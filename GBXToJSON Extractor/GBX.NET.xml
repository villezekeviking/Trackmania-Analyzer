<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GBX.NET</name>
    </assembly>
    <members>
        <member name="T:GBX.NET.Attributes.AppliedWithChunkAttribute`1">
            <summary>
            Tells which chunk is used to write a certain node member.
            </summary>
            <typeparam name="T">Type of the chunk.</typeparam>
        </member>
        <member name="M:GBX.NET.Attributes.AppliedWithChunkAttribute`1.#ctor(System.Int32)">
            <summary>
            Creates the <see cref="T:GBX.NET.Attributes.AppliedWithChunkAttribute`1"/>.
            </summary>
            <param name="sinceVersion">Since which version this member is written to the chunk. Can be ignored on chunks without <see cref="T:GBX.NET.IVersionable"/>.</param>
        </member>
        <member name="M:GBX.NET.Attributes.AppliedWithChunkAttribute`1.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates the <see cref="T:GBX.NET.Attributes.AppliedWithChunkAttribute`1"/>.
            </summary>
            <param name="sinceVersion">Since which version this member is written to the chunk. Can be ignored on chunks without <see cref="T:GBX.NET.IVersionable"/>.</param>
            <param name="upToVersion">Up to which version the member is written to the chunk. Can be ignored on chunks without <see cref="T:GBX.NET.IVersionable"/>.</param>
        </member>
        <member name="T:GBX.NET.Attributes.AppliedWithChunkAttribute">
            <summary>
            Tells which chunk is used to write a certain node member.
            </summary>
        </member>
        <member name="P:GBX.NET.Attributes.AppliedWithChunkAttribute.ChunkType">
            <summary>
            Type of the chunk.
            </summary>
        </member>
        <member name="P:GBX.NET.Attributes.AppliedWithChunkAttribute.SinceVersion">
            <summary>
            Since which version this member is written to the chunk. Ignored on chunks without <see cref="T:GBX.NET.IVersionable"/>.
            </summary>
        </member>
        <member name="P:GBX.NET.Attributes.AppliedWithChunkAttribute.UpToVersion">
            <summary>
            Up to which version the member is written to the chunk. Null means there's no known version limit. Ignored on chunks without <see cref="T:GBX.NET.IVersionable"/>.
            </summary>
        </member>
        <member name="M:GBX.NET.Attributes.AppliedWithChunkAttribute.#ctor(System.Type,System.Int32)">
            <summary>
            Creates the <see cref="T:GBX.NET.Attributes.AppliedWithChunkAttribute"/>.
            </summary>
            <param name="chunkType">Type of the chunk.</param>
            <param name="sinceVersion">Since which version this member is written to the chunk. Can be ignored on chunks without <see cref="T:GBX.NET.IVersionable"/>.</param>
        </member>
        <member name="M:GBX.NET.Attributes.AppliedWithChunkAttribute.#ctor(System.Type,System.Int32,System.Int32)">
            <summary>
            Creates the <see cref="T:GBX.NET.Attributes.AppliedWithChunkAttribute"/>.
            </summary>
            <param name="chunkType">Type of the chunk.</param>
            <param name="sinceVersion">Since which version this member is written to the chunk. Can be ignored on chunks without <see cref="T:GBX.NET.IVersionable"/>.</param>
            <param name="upToVersion">Up to which version the member is written to the chunk. Can be ignored on chunks without <see cref="T:GBX.NET.IVersionable"/>.</param>
        </member>
        <member name="T:GBX.NET.Attributes.AutoReadWriteChunkAttribute">
            <summary>
            Specifies an unskippable chunk that can't be managed properly to read with a method by reading and writing it based on peeking
            the 0xFACADE01 integer. This attribute mustn't be used on chunks containing node references and lookback strings. If more chunks
            are presented after a chunk marked with <see cref="T:GBX.NET.Attributes.AutoReadWriteChunkAttribute"/>, those will be merged into this chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Attributes.ChunkAttribute">
            <summary>
            Attribute that assigns specific metadata to a chunk.
            </summary>
        </member>
        <member name="P:GBX.NET.Attributes.ChunkAttribute.ID">
            <summary>
            Full ID of the chunk.
            </summary>
        </member>
        <member name="P:GBX.NET.Attributes.ChunkAttribute.Description">
            <summary>
            Very short lowercase description of the chunk.
            </summary>
        </member>
        <member name="P:GBX.NET.Attributes.ChunkAttribute.ProcessSync">
            <summary>
            If the chunk should be read immediately after finding. You should always set this to true if the chunk is skippable and contains a lookback string (or meta). This property is ignored for unskippable chunks (those inheriting <see cref="T:GBX.NET.Chunk`1"/>).
            </summary>
        </member>
        <member name="P:GBX.NET.Attributes.ChunkAttribute.ParseBeforeWrite">
            <summary>
            If the chunk shouldn't be read immediately, but should be read before being written back. You should usually set this to true in cases where there's an <see cref="T:GBX.NET.Id"/> in skippable chunk and <see cref="P:GBX.NET.Attributes.ChunkAttribute.ProcessSync"/> wasn't set to true, as this fixes problems with <see cref="T:GBX.NET.Id"/> indexes.
            </summary>
        </member>
        <member name="M:GBX.NET.Attributes.ChunkAttribute.#ctor(System.UInt32,System.String)">
            <summary>
            Assigns an ID to a chunk.
            </summary>
            <param name="chunkID">Full ID of the chunk.</param>
            <param name="description">Very short description of the chunk.</param>
        </member>
        <member name="M:GBX.NET.Attributes.ChunkAttribute.GetClassPart">
            <summary>
            Gets the class part of <see cref="P:GBX.NET.Attributes.ChunkAttribute.ID"/>.
            </summary>
            <returns>Class part of ID.</returns>
        </member>
        <member name="M:GBX.NET.Attributes.ChunkAttribute.GetChunkPart">
            <summary>
            Gets the chunk part of <see cref="P:GBX.NET.Attributes.ChunkAttribute.ID"/>.
            </summary>
            <returns>Chunk part of ID.</returns>
        </member>
        <member name="T:GBX.NET.Box">
            <summary>
            GmBoxAligned.
            </summary>
        </member>
        <member name="M:GBX.NET.Box.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            GmBoxAligned.
            </summary>
        </member>
        <member name="M:GBX.NET.Builders.Engines.Game.CGameCtnMediaBlockTriangles2DBuilder.#ctor(GBX.NET.Vec4[])">
            <param name="vertices">Array of vertex colors.</param>
        </member>
        <member name="M:GBX.NET.Builders.Engines.Game.CGameCtnMediaBlockTriangles3DBuilder.#ctor(GBX.NET.Vec4[])">
            <param name="vertices">Array of vertex colors.</param>
        </member>
        <member name="T:GBX.NET.Byte3">
            <summary>
            3-dimensional byte coordination struct. Implicit <see cref="T:System.ValueTuple`3"/> is available.
            </summary>
            <param name="X">X value.</param>
            <param name="Y">Y value.</param>
            <param name="Z">Z value.</param>
        </member>
        <member name="M:GBX.NET.Byte3.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            3-dimensional byte coordination struct. Implicit <see cref="T:System.ValueTuple`3"/> is available.
            </summary>
            <param name="X">X value.</param>
            <param name="Y">Y value.</param>
            <param name="Z">Z value.</param>
        </member>
        <member name="P:GBX.NET.Byte3.X">
            <summary>X value.</summary>
        </member>
        <member name="P:GBX.NET.Byte3.Y">
            <summary>Y value.</summary>
        </member>
        <member name="P:GBX.NET.Byte3.Z">
            <summary>Z value.</summary>
        </member>
        <member name="T:GBX.NET.CastTo`1">
            <summary>
            Class to cast to type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">Target type</typeparam>
        </member>
        <member name="M:GBX.NET.CastTo`1.From``1(``0)">
            <summary>
            Casts <typeparamref name="S"/> to <typeparamref name="T"/>.
            This does not cause boxing for value types.
            Useful in generic methods.
            </summary>
            <typeparam name="S">Source type to cast from. Usually a generic type.</typeparam>
        </member>
        <member name="P:GBX.NET.Chunk.Unknown">
            <summary>
            Stream of unknown bytes
            </summary>
        </member>
        <member name="P:GBX.NET.Chunk.RawData">
            <summary>
            Raw data of the chunk. Always null with <see cref="P:GBX.NET.GameBox.SeekForRawChunkData"/> set to false.
            </summary>
        </member>
        <member name="M:GBX.NET.Chunk`1.GBX#NET#IReadableWritableChunk#Read(GBX.NET.Node,GBX.NET.GameBoxReader)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.GBX#NET#IReadableWritableChunk#Write(GBX.NET.Node,GBX.NET.GameBoxWriter)">
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.GBX#NET#IReadableWritableChunk#ReadWrite(GBX.NET.Node,GBX.NET.GameBoxReaderWriter)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.GBX#NET#IReadableWritableChunk#ReadAsync(GBX.NET.Node,GBX.NET.GameBoxReader,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.GBX#NET#IReadableWritableChunk#WriteAsync(GBX.NET.Node,GBX.NET.GameBoxWriter,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.GBX#NET#IReadableWritableChunk#ReadWriteAsync(GBX.NET.Node,GBX.NET.GameBoxReaderWriter,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.Read(`0,GBX.NET.GameBoxReader)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.Write(`0,GBX.NET.GameBoxWriter)">
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.ReadWrite(`0,GBX.NET.GameBoxReaderWriter)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.ReadAsync(`0,GBX.NET.GameBoxReader,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.WriteAsync(`0,GBX.NET.GameBoxWriter,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.Chunk`1.ReadWriteAsync(`0,GBX.NET.GameBoxReaderWriter,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.ChunkSet.DiscoverAll">
            <summary>
            Discovers all chunks in the chunk set.
            </summary>
        </member>
        <member name="M:GBX.NET.ChunkSet.DiscoverAll(System.Boolean)">
            <summary>
            Discovers all chunks in the chunk set in parallel, if <paramref name="parallel"/> is true.
            </summary>
        </member>
        <member name="T:GBX.NET.ControlEntry">
            <summary>
            Input from an input device.
            </summary>
        </member>
        <member name="M:GBX.NET.ControlEntry.#ctor(System.String,TmEssentials.TimeInt32,System.UInt32)">
            <summary>
            Input from an input device.
            </summary>
        </member>
        <member name="T:GBX.NET.ControlEntryAnalog">
            <summary>
            A control entry with an additional <see cref="T:System.Single"/> value.
            </summary>
        </member>
        <member name="P:GBX.NET.ControlEntryAnalog.IsOldTM">
            <summary>
            If the input value comes from TM1.0.
            </summary>
        </member>
        <member name="T:GBX.NET.Dir">
            <summary>
            A direction-related feature set.
            </summary>
        </member>
        <member name="M:GBX.NET.Dir.Clockwise(GBX.NET.Direction)">
            <summary>
            Gets the next clockwise direction.
            </summary>
            <param name="d">Direction to reference.</param>
            <returns>Returns the next clockwise direction.</returns>
        </member>
        <member name="M:GBX.NET.Dir.CounterClockwise(GBX.NET.Direction)">
            <summary>
            Gets the next counter clockwise direction.
            </summary>
            <param name="d">Direction to reference.</param>
            <returns>Returns the next counter clockwise direction.</returns>
        </member>
        <member name="T:GBX.NET.Direction">
            <summary>
            Cardinal directions.
            </summary>
        </member>
        <member name="F:GBX.NET.Direction.North">
            <summary>
            +Z
            </summary>
        </member>
        <member name="F:GBX.NET.Direction.East">
            <summary>
            -X
            </summary>
        </member>
        <member name="F:GBX.NET.Direction.South">
            <summary>
            -Z
            </summary>
        </member>
        <member name="F:GBX.NET.Direction.West">
            <summary>
            +X
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlBase">
            <remarks>ID: 0x07001000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlContainer">
            <remarks>ID: 0x07002000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlEffect">
            <summary>
            Base of the widely used <see cref="T:GBX.NET.Engines.Control.CControlEffectSimi"/>.
            </summary>
            <remarks>ID: 0x07005000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlEffectSimi">
            <summary>
            An effect used on certain MediaTracker block types that tells how to generally render the component.
            </summary>
            <remarks>ID: 0x07005000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Control.CControlEffectSimi.Keys">
            <summary>
            Keyframes of the effect.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Control.CControlEffectSimi.Centered">
            <summary>
            If the effect should be centered.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Control.CControlEffectSimi.IsInterpolated">
            <summary>
            If the keyframes should interpolate values between each other.
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Control.CControlEffectSimi.Create">
            <summary>
            Creates a new builder that can output <see cref="T:GBX.NET.Engines.Control.CControlEffectSimi"/> in certain versions with certain chunks and values.
            </summary>
            <returns>A builder.</returns>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlEffectSimi.Chunk07010001">
            <summary>
            CControlEffectSimi 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlEffectSimi.Chunk07010002">
            <summary>
            CControlEffectSimi 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlEffectSimi.Chunk07010004">
            <summary>
            CControlEffectSimi 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlEffectSimi.Chunk07010005">
            <summary>
            CControlEffectSimi 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlEffectSimi.Key">
            <summary>
            Keyframe of <see cref="T:GBX.NET.Engines.Control.CControlEffectSimi"/>.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Control.CControlEffectSimi.Key.Rotation">
            <summary>
            Rotation in radians
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlLayout">
            <remarks>ID: 0x0700C000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlList">
            <remarks>ID: 0x0700F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlList.Chunk07002007">
            <summary>
            CControlList 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Control.CControlList.Chunk0700200A">
            <summary>
            CControlList 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFunc">
            <remarks>ID: 0x05010000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncKeys">
            <remarks>ID: 0x05002000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncKeys.Chunk05002001">
            <summary>
            CFuncKeys 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncKeys.Chunk05002003">
            <summary>
            CFuncKeys 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncKeysNatural">
            <remarks>ID: 0x05030000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncKeysNatural.Chunk05030000">
            <summary>
            CFuncKeysNatural 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncKeysReal">
            <remarks>ID: 0x0501A000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncKeysReal.Chunk0501A001">
            <summary>
            CFuncKeysReal 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncKeysReal.Chunk0501A002">
            <summary>
            CFuncKeysReal 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncLight">
            <remarks>ID: 0x05018000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncPlug">
            <remarks>ID: 0x0500B000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncPlug.Chunk0500B003">
            <summary>
            CFuncPlug 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncPlug.Chunk0500B004">
            <summary>
            CFuncPlug 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncPlug.Chunk0500B005">
            <summary>
            CFuncPlug 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShader">
            <remarks>ID: 0x05011000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaderLayerUV">
            <remarks>ID: 0x05015000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaderLayerUV.Chunk05015005">
            <summary>
            CFuncShaderLayerUV 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaderLayerUV.Chunk05015009">
            <summary>
            CFuncShaderLayerUV 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaderLayerUV.Chunk0501500A">
            <summary>
            CFuncShaderLayerUV 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaderLayerUV.Chunk0501500D">
            <summary>
            CFuncShaderLayerUV 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaderLayerUV.Chunk05015012">
            <summary>
            CFuncShaderLayerUV 0x012 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaderLayerUV.Chunk05015014">
            <summary>
            CFuncShaderLayerUV 0x014 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaderLayerUV.Chunk05015015">
            <summary>
            CFuncShaderLayerUV 0x015 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaderLayerUV.Chunk05015016">
            <summary>
            CFuncShaderLayerUV 0x016 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaders">
            <remarks>ID: 0x05014000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncShaders.Chunk05014000">
            <summary>
            CFuncShaders 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncTree">
            <remarks>ID: 0x0501C000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncTreeRotate">
            <remarks>ID: 0x0501E000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncTreeRotate.Chunk0501E001">
            <summary>
            CFuncTreeRotate 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncTreeSubVisualSequence">
            <remarks>ID: 0x05031000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncTreeSubVisualSequence.Chunk05031000">
            <summary>
            CFuncTreeSubVisualSequence 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncTreeSubVisualSequence.Chunk05031001">
            <summary>
            CFuncTreeSubVisualSequence 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncTreeSubVisualSequence.Chunk05031002">
            <summary>
            CFuncTreeSubVisualSequence 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Function.CFuncTreeSubVisualSequence.Chunk05031003">
            <summary>
            CFuncTreeSubVisualSequence 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameBlockItem">
            <summary>
            Custom block.
            </summary>
            <remarks>ID: 0x2E025000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameBlockItem.Chunk2E025000">
            <summary>
            CGameBlockItem 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCommonItemEntityModel">
            <remarks>ID: 0x2E027000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCommonItemEntityModel.Chunk2E027000">
            <summary>
            CGameCommonItemEntityModel 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCommonItemEntityModelEdition">
            <summary>
            Custom item data.
            </summary>
            <remarks>ID: 0x2E025000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.GameData.CGameCommonItemEntityModelEdition.ItemType">
            <summary>
            Type of the item.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.GameData.CGameCommonItemEntityModelEdition.MeshCrystal">
            <summary>
            Mesh of the item model.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCommonItemEntityModelEdition.Chunk2E026000">
            <summary>
            CGameCommonItemEntityModelEdition 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCommonItemEntityModelEdition.Chunk2E026001">
            <summary>
            CGameCommonItemEntityModelEdition 0x001 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector">
            <summary>
            Collector. Something that can have an icon.
            </summary>
            <remarks>ID: 0x2E001000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.GameData.CGameCtnCollector.Icon">
            <summary>
            Icon of the collector in 2D pixel array format from all versions except icons created after April 2022 in TM2020.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.GameData.CGameCtnCollector.IconWebP">
            <summary>
            Icon of the collector in WebP format from TM2020 icons since April 2022 update.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001002">
            <summary>
            CGameCtnCollector 0x002 chunk (author)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001003">
            <summary>
            CGameCtnCollector 0x003 header chunk (desc)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001004">
            <summary>
            CGameCtnCollector 0x004 header chunk (icon)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001006H">
            <summary>
            CGameCtnCollector 0x006 header chunk (file time)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001006B">
            <summary>
            CGameCtnCollector 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001007">
            <summary>
            CGameCtnCollector 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001008">
            <summary>
            CGameCtnCollector 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001009">
            <summary>
            CGameCtnCollector 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E00100A">
            <summary>
            CGameCtnCollector 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E00100B">
            <summary>
            CGameCtnCollector 0x00B chunk (author)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E00100C">
            <summary>
            CGameCtnCollector 0x00C chunk (collector name)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E00100D">
            <summary>
            CGameCtnCollector 0x00D chunk (description)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E00100E">
            <summary>
            CGameCtnCollector 0x00E chunk (icon render)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001010">
            <summary>
            CGameCtnCollector 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001011">
            <summary>
            CGameCtnCollector 0x011 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameCtnCollector.Chunk2E001012">
            <summary>
            CGameCtnCollector 0x012 chunk
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.GameData.CGameCtnCollector.AsHeader">
            <summary>
            Gets the node casted to an interface that shows values used in the header.
            </summary>
            <returns>An <see cref="T:GBX.NET.Engines.GameData.CGameCtnCollector.IHeader"/> of the node.</returns>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel">
            <summary>
            An item model, custom block, vehicle, etc.
            </summary>
            <remarks>ID: 0x0x2E002000</remarks>
        </member>
        <member name="F:GBX.NET.Engines.GameData.CGameItemModel.EItemType.Ornament">
            <summary>
            StaticObject
            </summary>
        </member>
        <member name="F:GBX.NET.Engines.GameData.CGameItemModel.EItemType.PickUp">
            <summary>
            DynaObject
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.GameData.CGameItemModel.EntityModelEdition">
            <summary>
            An entity object of the item model.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.GameData.CGameItemModel.ItemModel">
            <summary>
            An item model if <see cref="P:GBX.NET.Engines.GameData.CGameItemModel.EntityModelEdition"/> is <see cref="T:GBX.NET.Engines.GameData.CGameCommonItemEntityModelEdition"/>, otherwise null.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.GameData.CGameItemModel.BlockModel">
            <summary>
            A block model if <see cref="P:GBX.NET.Engines.GameData.CGameItemModel.EntityModelEdition"/> is <see cref="T:GBX.NET.Engines.GameData.CGameBlockItem"/>, otherwise null.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.GameData.CGameItemModel.DefaultPlacement">
            <summary>
            Placement information when the item model is used in the editor.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002000">
            <summary>
            CGameItemModel 0x000 header chunk (item type)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002001">
            <summary>
            CGameItemModel 0x001 header chunk (file version)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002006">
            <summary>
            CGameItemModel 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002008">
            <summary>
            CGameItemModel 0x008 chunk (Nadeo skin fids)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002009">
            <summary>
            CGameItemModel 0x009 chunk (cameras)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E00200A">
            <summary>
            CGameItemModel 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E00200C">
            <summary>
            CGameItemModel 0x00C chunk (race interface fid)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002010">
            <summary>
            CGameItemModel 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002012">
            <summary>
            CGameItemModel 0x012 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002013">
            <summary>
            CGameItemModel 0x013 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002014">
            <summary>
            CGameItemModel 0x014 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002015">
            <summary>
            CGameItemModel 0x015 chunk (item type e)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002019">
            <summary>
            CGameItemModel 0x019 chunk (model)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E00201A">
            <summary>
            CGameItemModel 0x01A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E00201B">
            <summary>
            CGameItemModel 0x01B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E00201C">
            <summary>
            CGameItemModel 0x01C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E00201D">
            <summary>
            CGameItemModel 0x01D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E00201E">
            <summary>
            CGameItemModel 0x01E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E00201F">
            <summary>
            CGameItemModel 0x01F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002020">
            <summary>
            CGameItemModel 0x020 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002021">
            <summary>
            CGameItemModel 0x021 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002022">
            <summary>
            CGameItemModel 0x022 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002023">
            <summary>
            CGameItemModel 0x023 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002024">
            <summary>
            CGameItemModel 0x024 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002025">
            <summary>
            CGameItemModel 0x025 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002026">
            <summary>
            CGameItemModel 0x026 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemModel.Chunk2E002027">
            <summary>
            CGameItemModel 0x027 skippable chunk
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.GameData.CGameItemModel.AsHeader">
            <summary>
            Gets the node casted to an interface that shows values used in the header.
            </summary>
            <returns>An <see cref="T:GBX.NET.Engines.GameData.CGameItemModel.IHeader"/> of the node.</returns>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemPlacementParam">
            <summary>
            Item placement parameters.
            </summary>
            <remarks>ID: 0x2E020000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemPlacementParam.Chunk2E020000">
            <summary>
            CGameItemPlacementParam 0x000 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemPlacementParam.Chunk2E020001">
            <summary>
            CGameItemPlacementParam 0x001 skippable chunk (pivot positions)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemPlacementParam.Chunk2E020003">
            <summary>
            CGameItemPlacementParam 0x003 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameItemPlacementParam.Chunk2E020004">
            <summary>
            CGameItemPlacementParam 0x004 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameObjectModel">
            <remarks>ID: 0x2E01D000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameObjectModel.Chunk2E01D000">
            <summary>
            CGameObjectModel 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameObjectPhyModel">
            <remarks>ID: 0x2E006000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameObjectPhyModel.Chunk2E006001">
            <summary>
            CGameObjectPhyModel 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameObjectPhyModel.Chunk2E006003">
            <summary>
            CGameObjectPhyModel 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameObjectVisModel">
            <remarks>ID: 0x2E007000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameObjectVisModel.Chunk2E007001">
            <summary>
            CGameObjectVisModel 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameObjectVisModel.Chunk2E007002">
            <summary>
            CGameObjectVisModel 0x002 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGamePodiumInfo">
            <summary>
            Podium info.
            </summary>
            <remarks>ID: 0x2E035000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGamePodiumInfo.Chunk03168000">
            <summary>
            CGamePodiumInfo 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameSpawnModel">
            <remarks>ID: 0x2E00E000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameSpawnModel.Chunk2E00E000">
            <summary>
            CGameSpawnModel 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameVehicleModel.Chunk2E01C000">
            <summary>
            CGameVehicleModel 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameWaypointSpecialProperty">
            <summary>
            Waypoint.
            </summary>
            <remarks>ID: 0x2E009000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameWaypointSpecialProperty.Chunk2E009000">
            <summary>
            CGameWaypointSpecialProperty 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.GameData.CGameWaypointSpecialProperty.Chunk2E009001">
            <summary>
            CGameWaypointSpecialProperty 0x001 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCampaignPlayerScores.Chunk030EA001">
            <summary>
            CGameCampaignPlayerScores 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnAnchoredObject">
            <summary>
            Item placed on a map.
            </summary>
            <remarks>ID: 0x03101000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.ItemModel">
            <summary>
            Name of the item with collection and author
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.PitchYawRoll">
            <summary>
            Pitch, yaw and roll of the item in radians.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.BlockUnitCoord">
            <summary>
            Block coordinates that the item is approximately located in. It doesn't have to be provided most of the time.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.AbsolutePositionInMap">
            <summary>
            The X, Y and Z position in the real world space of the item.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.WaypointSpecialProperty">
            <summary>
            If the item is a waypoint, contains inner waypoint info, otherwise null.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.Flags">
            <summary>
            Flags of the item.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.Variant">
            <summary>
            Variant index of the item. Taken from flags.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.PivotPosition">
            <summary>
            Pivot position of the item. Useful for making rotations around a different point than center.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.Scale">
            <summary>
            Scale of the item. This value currently doesn't have any effect.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.PackDesc">
            <summary>
            Skin used on the item.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.SnappedOnBlock">
            <summary>
            Block that tells when that block gets deleted, this item is deleted with it. Works for TM2020 only.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.SnappedOnItem">
            <summary>
            Item that tells when that item gets deleted, this item is deleted with it. Works for TM2020 only but is more modern.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.PlacedOnItem">
            <summary>
            Item that tells when that item gets deleted, this item is deleted with it. Works for ManiaPlanet, used to work in the past in TM2020 but now it likely doesn't.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.SnappedOnGroup">
            <summary>
            Group number that groups items that get deleted together. Works for TM2020 only.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.Color">
            <summary>
            Color of the item. Available since TM2020 Royal update.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.AnimPhaseOffset">
            <summary>
            Phase of the animation. Available since TM2020 Royal update.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.ForegroundPackDesc">
            <summary>
            The second layer of skin. Available since TM2020.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.LightmapQuality">
            <summary>
            Lightmap quality setting of the item. Available since TM2020.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.MacroblockReference">
            <summary>
            Reference to the macroblock that placed this item. In macroblock mode, this item is then part of a selection group. Available since TM2020.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnAnchoredObject.Chunk03101002">
            <summary>
            CGameCtnAnchoredObject 0x002 chunk
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnAnchoredObject.Chunk03101002.Version">
            <summary>
            Version of the chunk. For the lastst TM2 version, version 7 the latest, in TM®, the latest known version is 8.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnAnchoredObject.Chunk03101004">
            <summary>
            CGameCtnAnchoredObject 0x004 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnAnchoredObject.Chunk03101005">
            <summary>
            CGameCtnAnchoredObject 0x005 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnAutoTerrain">
            <remarks>ID: 0x03120000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnAutoTerrain.Chunk03120001">
            <summary>
            CGameCtnAutoTerrain 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlock">
            <summary>
            Block placed on a map.
            </summary>
            <remarks>ID: 0x03057000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Name">
            <summary>
            Name of the block.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Direction">
            <summary>
            Facing direction of the block.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Coord">
            <summary>
            Position of the block on the map in block coordination. This value get's explicitly converted to <see cref="T:GBX.NET.Byte3"/> in the serialized form. Values below 0 or above 255 should be avoided.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Flags">
            <summary>
            Flags of the block. If the chunk version is null, this value can be presented as <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Author">
            <summary>
            Author of the block, usually of a custom one made in Mesh Modeller.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Variant">
            <summary>
            Variant of the block. Taken from flags. Value range of 0-63.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.SubVariant">
            <summary>
            Subvariant of the block. Taken from flags. Value range of 0-63. Always 63 when <see cref="P:GBX.NET.Engines.Game.CGameCtnBlock.IsClip"/> is true.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.IsGround">
            <summary>
            If the block should use the ground variant. Taken from flags.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.IsClip">
            <summary>
            If the block is considered as clip. Taken from flags.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Skin">
            <summary>
            Used skin on the block.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Bit17">
            <summary>
            Taken from flags.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.WaypointSpecialProperty">
            <summary>
            Additional block parameters.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Bit21">
            <summary>
            Determines the hill ground variant in TM®. Taken from flags.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.IsFree">
            <summary>
            If this block is a free block. Feature available since TM®. Set this property first before modifying free transformation.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Color">
            <summary>
            Color of the block. Available since TM2020 Royal update.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.LightmapQuality">
            <summary>
            Lightmap quality setting of the block. Available since TM2020.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.MacroblockReference">
            <summary>
            Reference to the macroblock that placed this block. In macroblock mode, this block is then part of a selection group. Available since TM2020.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlock.Unassigned1">
            <summary>
            A type of block that seperates other blocks in ManiaPlanet. The game can sometimes crash if it isn't provided in the map file, especially in ManiaPlanet (not Trackmania®). One theory is that this block determines what blocks should be undone by Undo.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlock.Chunk03057002">
            <summary>
            CGameCtnBlock 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfo">
            <remarks>ID: 0x0304E000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoClassic">
            <remarks>ID: 0x03051000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoClip">
            <remarks>ID: 0x03053000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoClip.Chunk03053002">
            <summary>
            CGameCtnBlockInfoClip 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoClip.Chunk03053004">
            <summary>
            CGameCtnBlockInfoClip 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoClip.Chunk03053005">
            <summary>
            CGameCtnBlockInfoClip 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoClip.Chunk03053006">
            <summary>
            CGameCtnBlockInfoClip 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoClip.Chunk03053007">
            <summary>
            CGameCtnBlockInfoClip 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoClip.Chunk03053008">
            <summary>
            CGameCtnBlockInfoClip 0x008 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoFrontier.Chunk03050000">
            <summary>
            CGameCtnBlockInfoFrontier 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoMobil">
            <remarks>ID: 0x03122000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoMobil.Chunk03122002">
            <summary>
            CGameCtnBlockInfoMobil 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoPylon.Chunk03055000">
            <summary>
            CGameCtnBlockInfoPylon 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoPylon.Chunk03055002">
            <summary>
            CGameCtnBlockInfoPylon 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoRoad">
            <summary>
            CGameCtnBlockInfoRoad (0x03052000)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoRoad.Chunk03052000">
            <summary>
            CGameCtnBlockInfoRoad 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoVariant.Chunk0315B00D">
            <summary>
            CGameCtnBlockInfoVariant 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockInfoVariantGround.Chunk0315C001">
            <summary>
            CGameCtnBlockInfoVariantGround 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockSkin">
            <summary>
            Skin for a block.
            </summary>
            <remarks>ID: 0x03059000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnBlockSkin.ForegroundPackDesc">
            <summary>
            Second skin for the skinnable block. Available in TM®.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockSkin.Chunk03059000">
            <summary>
            CGameCtnBlockSkin 0x000 chunk (text)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockSkin.Chunk03059001">
            <summary>
            CGameCtnBlockSkin 0x001 chunk (skin)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockSkin.Chunk03059002">
            <summary>
            CGameCtnBlockSkin 0x002 chunk (skin + parent skin)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockSkin.Chunk03059003">
            <summary>
            CGameCtnBlockSkin 0x003 chunk (secondary skin)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk03036000">
            <summary>
            CGameCtnBlockUnitInfo 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk03036001">
            <summary>
            CGameCtnBlockUnitInfo 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk03036002">
            <summary>
            CGameCtnBlockUnitInfo 0x002 chunk (Underground)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk03036003">
            <summary>
            CGameCtnBlockUnitInfo 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk03036004">
            <summary>
            CGameCtnBlockUnitInfo 0x004 chunk (AcceptPylons)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk03036005">
            <summary>
            CGameCtnBlockUnitInfo 0x005 chunk (TerrainModifierId)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk03036006">
            <summary>
            CGameCtnBlockUnitInfo 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk03036007">
            <summary>
            CGameCtnBlockUnitInfo 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk03036008">
            <summary>
            CGameCtnBlockUnitInfo 0x008 chunk (bottom+top clip)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk03036009">
            <summary>
            CGameCtnBlockUnitInfo 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk0303600A">
            <summary>
            CGameCtnBlockUnitInfo 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk0303600B">
            <summary>
            CGameCtnBlockUnitInfo 0x00B chunk (bottom+top clip with dir)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnBlockUnitInfo.Chunk0303600C">
            <summary>
            CGameCtnBlockUnitInfo 0x00C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign">
            <summary>
            Campaign map list and other information about a campaign.
            </summary>
            <remarks>ID: 0x03090000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090000">
            <summary>
            CGameCtnCampaign 0x000 chunk (map groups)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090001">
            <summary>
            CGameCtnCampaign 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090002">
            <summary>
            CGameCtnCampaign 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090004">
            <summary>
            CGameCtnCampaign 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090005">
            <summary>
            CGameCtnCampaign 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090006">
            <summary>
            CGameCtnCampaign 0x006 chunk (campaign ID)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090007">
            <summary>
            CGameCtnCampaign 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090008">
            <summary>
            CGameCtnCampaign 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090009">
            <summary>
            CGameCtnCampaign 0x009 skippable chunk (collection ID)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk0309000A">
            <summary>
            CGameCtnCampaign 0x00A skippable chunk (index)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk0309000B">
            <summary>
            CGameCtnCampaign 0x00B skippable chunk (unlocked by campaign)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk0309000C">
            <summary>
            CGameCtnCampaign 0x00C skippable chunk (icon ID)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk0309000D">
            <summary>
            CGameCtnCampaign 0x00D chunk (unlock type)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk0309000E">
            <summary>
            CGameCtnCampaign 0x00E chunk (required players count)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk0309000F">
            <summary>
            CGameCtnCampaign 0x00F skippable chunk (name)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090010">
            <summary>
            CGameCtnCampaign 0x010 chunk (mode script name)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCampaign.Chunk03090012">
            <summary>
            CGameCtnCampaign 0x012 skippable chunk (official mode)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge">
            <summary>
            A map.
            </summary>
            <remarks>ID: 0x03043000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.MapKind">
            <summary>
            The map's intended use.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.PlayMode">
            <summary>
            Map type in which the map was validated in.
            </summary>
        </member>
        <member name="F:GBX.NET.Engines.Game.CGameCtnChallenge.PlayMode.Script">
            <summary>
            Any custom map type script.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.EditorMode">
            <summary>
            In which editor settings this map was made.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.BoatName">
            <summary>
            Used by Virtual Skipper.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.RaceMode">
            <summary>
            Used by Virtual Skipper.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.WindDirection">
            <summary>
            Used by Virtual Skipper.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Weather">
            <summary>
            Used by Virtual Skipper.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.StartDelay">
            <summary>
            Used by Virtual Skipper.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.AILevel">
            <summary>
            Used by Virtual Skipper.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.TMObjective_BronzeTime">
            <summary>
            Time of the bronze medal. If <see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.ChallengeParameters"/> is available, it uses the value from there instead.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.TMObjective_SilverTime">
            <summary>
            Time of the silver medal. If <see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.ChallengeParameters"/> is available, it uses the value from there instead.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.TMObjective_GoldTime">
            <summary>
            Time of the gold medal. If <see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.ChallengeParameters"/> is available, it uses the value from there instead.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.TMObjective_AuthorTime">
            <summary>
            Time of the author medal. If <see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.ChallengeParameters"/> is available, it uses the value from there instead.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Cost">
            <summary>
            Display cost of the track (or copper cost) explaining the performance of the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.AuthorScore">
            <summary>
            Usually author time or stunts score. If <see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.ChallengeParameters"/> is available, it uses the value from there instead.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Editor">
            <summary>
            In which editor settings the map was made.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.CreatedWithSimpleEditor">
            <summary>
            If the map was made using the simple editor.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.HasGhostBlocks">
            <summary>
            If the map uses ghost blocks.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.CreatedWithGamepadEditor">
            <summary>
            If the map was made using the gamepad editor.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.TMObjective_IsLapRace">
            <summary>
            If the map is a multilap.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.TMObjective_NbLaps">
            <summary>
            Number of laps.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.NbCheckpoints">
            <summary>
            Number of checkpoints.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.MapInfo">
            <summary>
            Map UID, environment, and author login.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.MapUid">
            <summary>
            The map's UID.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.AuthorLogin">
            <summary>
            Login of the map author.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.MapName">
            <summary>
            The map's name.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.KindInHeader">
            <summary>
            The map's intended use or state, defined in the header. This defines the visibility in the the map browser.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Kind">
            <summary>
            The map's intended use or state, defined in the body. This defines general validity.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Password">
            <summary>
            Password of the map used by older maps.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Decoration">
            <summary>
            The map's decoration (time of the day or scenery)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.MapType">
            <summary>
            Name of the map type script.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.MapStyle">
            <summary>
            Style of the map (Fullspeed, LOL, Tech), usually unused and defined by user.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.LightmapCacheUID">
            <summary>
            UID of the lightmap data stored in cache.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.LightmapVersion">
            <summary>
            Version of the lightmap calculation.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.XML">
            <summary>
            XML track information and dependencies.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Thumbnail">
            <summary>
            Thumbnail JPEG data.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Collection">
            <summary>
            The map's environment.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.MapCoordOrigin">
            <summary>
            Origin of the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.MapCoordTarget">
            <summary>
            Target of the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.TitleID">
            <summary>
            Title pack the map was built in.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.BuildVersion">
            <summary>
            Executable (game's) build version the map was built in.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Comments">
            <summary>
            The map's author comments.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.AuthorNickname">
            <summary>
            Nickname of the map author.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.AuthorZone">
            <summary>
            Zone of the map author.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.PlayerModel">
            <summary>
            The car's name, environment and author used on the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ChallengeParameters">
            <summary>
            Map parameters.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.BlockStock">
            <summary>
            List of available puzzle pieces.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Checkpoints">
            <summary>
            All checkpoints and their map coordinates. Used by TMUF and older games.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ModPackDesc">
            <summary>
            Reference to the mod (texture/resource pack) used on the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Mode">
            <summary>
            Map type in which the track was validated in.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Size">
            <summary>
            Size of the map in block coordinates.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Blocks">
            <summary>
            List of all blocks on the map. Can be null when only the header was read, or simply when <see cref="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304300F"/>, <see cref="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043013"/>, or <see cref="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304301F"/> is missing.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.NbBlocks">
            <summary>
            Number of actual blocks on the map (doesn't include Unassigned1 and other blocks with <see cref="P:GBX.NET.Engines.Game.CGameCtnBlock.Flags"/> equal to -1).
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.NbBakedBlocks">
            <summary>
            Number of actual baked blocks on the map (doesn't include Unassigned1 and other blocks with <see cref="P:GBX.NET.Engines.Game.CGameCtnBlock.Flags"/> equal to -1).
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ClipIntro">
            <summary>
            MediaTracker intro.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ClipGroupInGame">
            <summary>
            MediaTracker ingame.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ClipGroupEndRace">
            <summary>
            MediaTracker end race.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ClipAmbiance">
            <summary>
            MediaTracker ambiance.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ClipPodium">
            <summary>
            MediaTracker podium.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.CustomMusicPackDesc">
            <summary>
            Reference to the custom music used on the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.HashedPassword">
            <summary>
            Hashed password of the map, if it's password protected.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.CRC32">
            <summary>
            CRC32 of the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ThumbnailPosition">
            <summary>
            Position of the thumbnail camera.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ThumbnailPitchYawRoll">
            <summary>
            Pitch, yaw and roll of the thumbnail camera in radians.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ThumbnailFOV">
            <summary>
            Thumbnail camera FOV.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.LightmapFrames">
            <summary>
            List of all the available lightmap frames. Each frame can contain up to 3 different variants in either JPEG or WEBP format.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.LightmapCache">
            <summary>
            Lightmap cache information.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.HasLightmaps">
            <summary>
            If the map has at least 1 lightmap frame.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.AnchoredObjects">
            <summary>
            List of all items and objects placed on the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.ScriptMetadata">
            <summary>
            Metadata written into the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Offzones">
            <summary>
            List of offzones defined on the map, constructed with cubes made from start-to-end coordinates.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.DecoBaseHeightOffset">
            <summary>
            Minimum Y value of <see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Blocks"/>.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.BotPaths">
            <summary>
            Bot paths defined on the (Shootmania) map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.EmbeddedData">
            <summary>
            Embedded data in the map. Key defines a relative path to the resource. Value is the actual data, usually in Gbx format, sometimes in image format.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.DayTime">
            <summary>
            Exact time of the day in the map. Available since ManiaPlanet 4.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.DynamicDaylight">
            <summary>
            If the map uses dynamic daylight cycle. Available since ManiaPlanet 4.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.DayDuration">
            <summary>
            Duration of the day defined in real time. Available since ManiaPlanet 4.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.HasCustomCamThumbnail">
            <summary>
            If the thumbnail camera was customized. Only relevant up to TMUF.
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.ExportThumbnail(System.IO.Stream)">
            <summary>
            Exports the map's thumbnail as JPEG.
            </summary>
            <param name="stream">Stream to export to.</param>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.ExportThumbnail(System.String)">
            <summary>
            Exports the map's thumbnail as JPEG.
            </summary>
            <param name="fileName">File to export to.</param>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.CrackPassword">
            <summary>
            Cracks the map password.
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetBlock(GBX.NET.Int3)">
            <summary>
            Gets the first block at this position.
            </summary>
            <param name="pos">Position of the block.</param>
            <returns>The first available block.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetBlock(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the first block at this position.
            </summary>
            <param name="x">X position.</param>
            <param name="y">Y position.</param>
            <param name="z">Z position.</param>
            <returns>The first available block.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetBlocks">
            <summary>
            Retrieves blocks.
            </summary>
            <returns>An enumerable of blocks.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetBlocks(GBX.NET.Int3)">
            <summary>
            Retrieves blocks at this position.
            </summary>
            <param name="pos">Position of the block.</param>
            <returns>An enumerable of blocks.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetBlocks(System.Int32,System.Int32,System.Int32)">
            <summary>
            Retrieves blocks at this position.
            </summary>
            <param name="x">X position.</param>
            <param name="y">Y position.</param>
            <param name="z">Z position.</param>
            <returns>An enumerable of blocks.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetGhostBlocks">
            <summary>
            Retrieves ghost blocks on the map.
            </summary>
            <returns>An enumerable of ghost blocks.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetBakedBlocks">
            <summary>
            Retrieves baked blocks.
            </summary>
            <returns>An enumerable of baked blocks.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.PlaceBlock(GBX.NET.Ident,GBX.NET.Int3,GBX.NET.Direction)">
            <summary>
            Places a block in the map.
            </summary>
            <param name="blockModel">Block model name to place. Only the name is required, so using <see cref="M:GBX.NET.Ident.#ctor(System.String)"/> works too. Full <see cref="T:GBX.NET.Ident"/> can be seen in TM1.0.</param>
            <param name="coord">Position on the map. Should be always under <see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Size"/>, otherwise an overflow can happen.</param>
            <param name="dir">Facing direction of the block.</param>
            <returns>A placed block.</returns>
            <exception cref="T:GBX.NET.Exceptions.MemberNullException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Blocks"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.PlaceBlock(System.String,GBX.NET.Int3,GBX.NET.Direction)">
            <summary>
            Places a block in the map.
            </summary>
            <param name="blockModel">Block model name to place.</param>
            <param name="coord">Position on the map. Should be always under <see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Size"/>, otherwise an overflow can happen.</param>
            <param name="dir">Facing direction of the block.</param>
            <returns>A placed block.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.RemoveAllBlocks(System.Predicate{GBX.NET.Engines.Game.CGameCtnBlock})">
            <summary>
            Removes all the blocks from the map that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the elements to remove.</param>
            <exception cref="T:GBX.NET.Exceptions.MemberNullException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Blocks"/> is null.</exception>
            <exception cref="T:System.NotSupportedException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Blocks"/> is read-only.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.RemoveAllBlocks">
            <summary>
            Removes all the blocks from the map.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.MemberNullException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Blocks"/> is null.</exception>
            <exception cref="T:System.NotSupportedException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Blocks"/> is read-only.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.ClearBlocks">
            <summary>
            Clears all the blocks from the map.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.MemberNullException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Blocks"/> is null.</exception>
            <exception cref="T:System.NotSupportedException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Blocks"/> is read-only.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetAnchoredObjects">
            <summary>
            Retrieves items.
            </summary>
            <returns>An enumerable of items.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.PlaceAnchoredObject(GBX.NET.Ident,GBX.NET.Vec3,GBX.NET.Vec3,GBX.NET.Vec3,System.Int32)">
            <summary>
            Places an item on a map.
            </summary>
            <param name="itemModel">An item model identification (name, collection and author). Only the name is required, so using <see cref="M:GBX.NET.Ident.#ctor(System.String)"/> works too.</param>
            <param name="absolutePosition">Absolute position in the map.</param>
            <param name="pitchYawRoll">Rotation of the item in pitch, yaw, and roll format.</param>
            <param name="offsetPivot">Pivot location of the item (relative position of the point the item will rotate around).</param>
            <param name="variant">An item variant (trees from TM2020 have different variants).</param>
            <returns>Placed item.</returns>
            <exception cref="T:GBX.NET.Exceptions.MemberNullException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.AnchoredObjects"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.PlaceAnchoredObject(System.String,GBX.NET.Vec3,GBX.NET.Vec3,GBX.NET.Vec3,System.Int32)">
            <summary>
            Places an item on a map.
            </summary>
            <param name="itemModel">An item model identification (name).</param>
            <param name="absolutePosition">Absolute position in the map.</param>
            <param name="pitchYawRoll">Rotation of the item in pitch, yaw, and roll format.</param>
            <param name="offsetPivot">Pivot location of the item (relative position of the point the item will rotate around).</param>
            <param name="variant">An item variant (trees from TM2020 have different variants).</param>
            <returns>Placed item.</returns>
            <exception cref="T:GBX.NET.Exceptions.MemberNullException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.AnchoredObjects"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.TransferMediaTrackerTo049(System.Int32)">
            <summary>
            Transfers the MediaTracker from <see cref="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043021"/> (up to TMUF) to <see cref="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043049"/> (ManiaPlanet and Trackmania®). If <see cref="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043049"/> is already presented, no action is performed.
            </summary>
            <param name="upscaleTriggerCoord">Defines how many times the same coord should repeat.</param>
            <returns>Returns true if any action was performed, otherwise false.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.OffsetMediaTrackerCameras(GBX.NET.Vec3)">
            <summary>
            Offsets all MediaTracker camera positions by <paramref name="offset"/>.
            </summary>
            <param name="offset">Amount of units to offset the cameras.</param>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.OffsetMediaTrackerTriggers(GBX.NET.Int3)">
            <summary>
            Offsets all MediaTracker triggers by <paramref name="offset"/>.
            </summary>
            <param name="offset">Amount of units to offset the triggers.</param>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetEmbeddedGbxs">
            <summary>
            Enumerates through all of the embedded Gbxs and yields them entirely.
            </summary>
            <returns>An enumerable of <see cref="T:GBX.NET.GameBox"/>.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetEmbeddedGbxHeaders">
            <summary>
            Enumerates through all of the embedded Gbxs and yields their header data.
            </summary>
            <returns>An enumerable of <see cref="T:GBX.NET.GameBox"/> with header data only.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetEmbeddedNodeHeaders">
            <summary>
            Enumerates through all of the embedded nodes and yields their header data.
            </summary>
            <returns>An enumerable of nodes with header data only.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetEmbeddedItemModelHeaders">
            <summary>
            Enumerates through all of the embedded items and yields their header data.
            </summary>
            <returns>An enumerable of <see cref="T:GBX.NET.Engines.GameData.CGameItemModel"/> nodes with header data only.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetEmbeddedNodes">
            <summary>
            Enumerates through all of the embedded nodes and yields them entirely.
            </summary>
            <returns>An enumerable of nodes.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetEmbeddedItemModels">
            <summary>
            Enumerates through all of the embedded items and yields them entirely.
            </summary>
            <returns>An enumerable of <see cref="T:GBX.NET.Engines.GameData.CGameItemModel"/> nodes.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.GetEmbeddedMaterials">
            <summary>
            Enumerates through all of the embedded materials and yields them entirely.
            </summary>
            <returns>An enumerable of <see cref="T:GBX.NET.Engines.Plug.CPlugMaterialUserInst"/> nodes.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.ExtractEmbedZip(System.IO.Stream)">
            <summary>
            Extracts embed ZIP file based on the data in <see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.EmbeddedData"/>. File metadata is simplified and the timestamp of extraction is used for all files. Stream must have permission to read.
            </summary>
            <param name="stream">Stream to write the ZIP data to.</param>
            <returns>False if there's nothing to extract, otherwise true.</returns>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.ExtractEmbedZip(System.String)">
            <summary>
            Extracts embed ZIP file based on the data in <see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.EmbeddedData"/>. File metadata is simplified and the timestamp of extraction is used for all files.
            </summary>
            <param name="fileName">New file to write the ZIP data to.</param>
            <exception cref="T:GBX.NET.Exceptions.MemberNullException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.EmbeddedData"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.ExtractOriginalEmbedZip(System.IO.Stream)">
            <summary>
            Extracts embed ZIP file straight from the parsed map including original timestamps and other file metadata.
            </summary>
            <param name="stream">Stream to write the ZIP data to.</param>
            <returns>True if the map included embed ZIP previously, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="stream"/> does not support writing.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="stream"/> was disposed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.ExtractOriginalEmbedZip(System.String)">
            <summary>
            Extracts embed ZIP file straight from the parsed map including original timestamps and other file metadata.
            </summary>
            <param name="fileName">New file to write the ZIP data to.</param>
            <returns>True if the map included embed ZIP previously, otherwise false.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="fileName"/> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by System.IO.Path.InvalidPathChars.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileName"/> is null.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive).</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.UnauthorizedAccessException"><paramref name="fileName"/> specified a file that is read-only. -or- <paramref name="fileName"/> specified a file that is hidden. -or- This operation is not supported on the current platform. -or- <paramref name="fileName"/> specified a directory. -or- The caller does not have the required permission.</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="fileName"/> is in an invalid format.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.ImportFileToEmbed(System.String,System.String,System.Boolean)">
            <summary>
            Import a file to embed in the map by keeping the file name but relocating it in the embed ZIP.
            </summary>
            <param name="fileOnDisk">File to embed located on the disk.</param>
            <param name="relativeDirectory">Relative directory where the embed should be represented in the game, usually starts with <c>"Items/..."</c>, <c>"Blocks/..."</c> or <c>"Materials/..."</c>.</param>
            <param name="keepIcon">Keep the icon (chunk 0x2E001004) of the embedded GBX. Increases total embed size that is technically not needed.</param>
            <exception cref="T:GBX.NET.Exceptions.MemberNullException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.EmbeddedData"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="fileOnDisk"/> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by System.IO.Path.InvalidPathChars.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileOnDisk"/> is null.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive).</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.UnauthorizedAccessException"><paramref name="fileOnDisk"/> specified a file that is read-only. -or- <paramref name="fileOnDisk"/> specified a file that is hidden. -or- This operation is not supported on the current platform. -or- <paramref name="fileOnDisk"/> specified a directory. -or- The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.FileNotFoundException">The file specified in path was not found.</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="fileOnDisk"/> is in an invalid format.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.ImportUserDataToEmbed(System.String)">
            <summary>
            Embed objects from directories represented like from the user data directory.
            </summary>
            <param name="directoryOnDisk">Directory with folders <c>"Items/..."</c>, <c>"Blocks/..."</c> or <c>"Materials/..."</c>.</param>
            <exception cref="T:System.NotImplementedException">This method is not implemented yet.</exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.PlaceMacroblock(GBX.NET.Engines.Game.CGameCtnMacroBlockInfo,GBX.NET.Int3,GBX.NET.Direction)">
            <summary>
            Place a macroblock instance on the map.
            </summary>
            <param name="macroblock">Macroblock template to place.</param>
            <param name="coord">Position on the map to place the macroblock on. Root coordinate of the macroblock is considered.</param>
            <param name="dir">Direction of the placed macroblock.</param>
            <exception cref="T:GBX.NET.Exceptions.MemberNullException"><see cref="P:GBX.NET.Engines.Game.CGameCtnChallenge.Blocks"/> is null.</exception>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043001">
            <summary>
            CGameCtnChallenge 0x001 header chunk (Virtual Skipper)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043001.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043002">
            <summary>
            CGameCtnChallenge 0x002 header chunk (map info)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043002.Version">
            <summary>
            Version of the chunk. TM1.0 starts with version 3.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043003">
            <summary>
            CGameCtnChallenge 0x003 header chunk (common)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043003.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043004">
            <summary>
            CGameCtnChallenge 0x004 header chunk (version)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043004.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043005">
            <summary>
            CGameCtnChallenge 0x005 header chunk (xml)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043007">
            <summary>
            CGameCtnChallenge 0x007 header chunk (thumbnail)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043007.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043008">
            <summary>
            CGameCtnChallenge 0x008 header chunk (author)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043008.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304300D">
            <summary>
            CGameCtnChallenge 0x00D chunk (vehicle)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304300F">
            <summary>
            CGameCtnChallenge 0x00F chunk (TM1.0 block data)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043011">
            <summary>
            CGameCtnChallenge 0x011 chunk (parameters)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043012">
            <summary>
            CGameCtnChallenge 0x012 chunk (TM1.0 map name)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043013">
            <summary>
            CGameCtnChallenge 0x013 chunk (legacy block data)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043014">
            <summary>
            CGameCtnChallenge 0x014 skippable chunk (legacy password)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043016">
            <summary>
            CGameCtnChallenge 0x016 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043017">
            <summary>
            CGameCtnChallenge 0x017 skippable chunk (checkpoints)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043018">
            <summary>
            CGameCtnChallenge 0x018 skippable chunk (laps)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043019">
            <summary>
            CGameCtnChallenge 0x019 skippable chunk (mod)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304301A">
            <summary>
            CGameCtnChallenge 0x01A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304301B">
            <summary>
            CGameCtnChallenge 0x01B chunk (OldIgs)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304301C">
            <summary>
            CGameCtnChallenge 0x01C skippable chunk (play mode)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304301D">
            <summary>
            CGameCtnChallenge 0x01D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304301F">
            <summary>
            CGameCtnChallenge 0x01F chunk (block data)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304301F.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043020">
            <summary>
            CGameCtnChallenge 0x020 chunk (legacy legacy mediatracker)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043021">
            <summary>
            CGameCtnChallenge 0x021 chunk (legacy mediatracker)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043022">
            <summary>
            CGameCtnChallenge 0x022 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043023">
            <summary>
            CGameCtnChallenge 0x023 chunk (map origin)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043024">
            <summary>
            CGameCtnChallenge 0x024 chunk (music)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043025">
            <summary>
            CGameCtnChallenge 0x025 chunk (map origin and target)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043026">
            <summary>
            CGameCtnChallenge 0x026 chunk (clip global)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043027">
            <summary>
            CGameCtnChallenge 0x027 chunk (old realtime thumbnail)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043028">
            <summary>
            CGameCtnChallenge 0x028 chunk (old realtime thumbnail + comments)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043029">
            <summary>
            CGameCtnChallenge 0x029 skippable chunk (password)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304302A">
            <summary>
            CGameCtnChallenge 0x02A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304302D">
            <summary>
            CGameCtnChallenge 0x02D skippable chunk (realtime thumbnail + comments)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043034">
            <summary>
            CGameCtnChallenge 0x034 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043036">
            <summary>
            CGameCtnChallenge 0x036 skippable chunk (realtime thumbnail + comments)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043038">
            <summary>
            CGameCtnChallenge 0x038 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304303A">
            <summary>
            CGameCtnChallenge 0x03A skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304303D">
            <summary>
            CGameCtnChallenge 0x03D skippable chunk (lightmaps)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304303D.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304303E">
            <summary>
            CGameCtnChallenge 0x03E skippable chunk (CarMarksBuffer)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043040">
            <summary>
            CGameCtnChallenge 0x040 skippable chunk (items)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043040.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043041">
            <summary>
            CGameCtnChallenge 0x041 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043042">
            <summary>
            CGameCtnChallenge 0x042 skippable chunk (author)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043042.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043043">
            <summary>
            CGameCtnChallenge 0x043 skippable chunk (generalogies)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043044">
            <summary>
            CGameCtnChallenge 0x044 skippable chunk (metadata)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043047">
            <summary>
            CGameCtnChallenge 0x047 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043048">
            <summary>
            CGameCtnChallenge 0x048 skippable chunk (baked blocks)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043049">
            <summary>
            CGameCtnChallenge 0x049 chunk (mediatracker)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043049.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043049.TriggerSize">
            <summary>
            Trigger size per coord.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304304B">
            <summary>
            CGameCtnChallenge 0x04B skippable chunk (objectives)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304304D">
            <summary>
            CGameCtnChallenge 0x04D skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304304E">
            <summary>
            CGameCtnChallenge 0x04E skippable chunk (trigger actions)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304304F">
            <summary>
            CGameCtnChallenge 0x04F skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043050">
            <summary>
            CGameCtnChallenge 0x050 skippable chunk (offzones)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043050.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043051">
            <summary>
            CGameCtnChallenge 0x051 skippable chunk (title info)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043051.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043052">
            <summary>
            CGameCtnChallenge 0x052 skippable chunk (deco height)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043052.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043053">
            <summary>
            CGameCtnChallenge 0x053 skippable chunk (bot paths)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043053.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043054">
            <summary>
            CGameCtnChallenge 0x054 skippable chunk (embedded objects)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043054.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043055">
            <summary>
            CGameCtnChallenge 0x055 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043056">
            <summary>
            CGameCtnChallenge 0x056 skippable chunk (light settings)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043056.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043057">
            <summary>
            CGameCtnChallenge 0x057 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043058">
            <summary>
            CGameCtnChallenge 0x058 skippable chunk (SubMapsInfos)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043059">
            <summary>
            CGameCtnChallenge 0x059 skippable chunk
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043059.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304305A">
            <summary>
            CGameCtnChallenge 0x05A skippable chunk [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304305B">
            <summary>
            CGameCtnChallenge 0x05B skippable chunk (lightmaps) [TM2020]
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304305B.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304305C">
            <summary>
            CGameCtnChallenge 0x05C skippable chunk [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304305D">
            <summary>
            CGameCtnChallenge 0x05D skippable chunk [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304305E">
            <summary>
            CGameCtnChallenge 0x05E skippable chunk [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304305F">
            <summary>
            CGameCtnChallenge 0x05F skippable chunk (free blocks) [TM®️]
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk0304305F.Version">
            <summary>
            Version of the chunk.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043060">
            <summary>
            CGameCtnChallenge 0x060 skippable chunk [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043061">
            <summary>
            CGameCtnChallenge 0x061 skippable chunk [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043062">
            <summary>
            CGameCtnChallenge 0x062 skippable chunk (MapElemColor) [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043063">
            <summary>
            CGameCtnChallenge 0x063 skippable chunk (AnimPhaseOffset) [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043064">
            <summary>
            CGameCtnChallenge 0x064 skippable chunk [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043065">
            <summary>
            CGameCtnChallenge 0x065 skippable chunk (foreground pack desc) [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043067">
            <summary>
            CGameCtnChallenge 0x067 skippable chunk [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043068">
            <summary>
            CGameCtnChallenge 0x068 skippable chunk (MapElemLmQuality) [TM2020]
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallenge.Chunk03043069">
            <summary>
            CGameCtnChallenge 0x069 skippable chunk (macroblock instances) [TM2020]
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.TMObjective_BronzeTime">
            <summary>
            Time of the bronze medal.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.TMObjective_SilverTime">
            <summary>
            Time of the silver medal.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.TMObjective_GoldTime">
            <summary>
            Time of the gold medal.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.TMObjective_AuthorTime">
            <summary>
            Time of the author medal.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.Cost">
            <summary>
            Display cost of the track (or copper cost) explaining the performance of the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.AuthorScore">
            <summary>
            Usually author time or stunts score.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.Editor">
            <summary>
            In which editor settings the map was made.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.CreatedWithSimpleEditor">
            <summary>
            If the map was made using the simple editor.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.HasGhostBlocks">
            <summary>
            If the map uses ghost blocks.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.Mode">
            <summary>
            Map type in which the track was validated in.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.TMObjective_IsLapRace">
            <summary>
            If the map is a multilap.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.TMObjective_NbLaps">
            <summary>
            Number of laps.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.NbCheckpoints">
            <summary>
            Number of checkpoints.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.MapInfo">
            <summary>
            Map UID, environment, and author login.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.Collection">
            <summary>
            The map's environment.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.MapUid">
            <summary>
            The map's UID.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.AuthorLogin">
            <summary>
            Login of the map author.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.AuthorNickname">
            <summary>
            Nickname of the map author.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.AuthorZone">
            <summary>
            Zone of the map author.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.MapName">
            <summary>
            The map's name.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.KindInHeader">
            <summary>
            The map's intended use or state, defined in the header. This defines the visibility in the the map browser.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.Password">
            <summary>
            Password of the map used by older maps.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.Decoration">
            <summary>
            The map's decoration (time of the day or scenery)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.MapCoordTarget">
            <summary>
            Target of the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.MapCoordOrigin">
            <summary>
            Origin of the map.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.MapType">
            <summary>
            Name of the map type script.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.MapStyle">
            <summary>
            Style of the map (Fullspeed, LOL, Tech), usually unused and defined by user.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.LightmapCacheUID">
            <summary>
            UID of the lightmap data stored in cache.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.LightmapVersion">
            <summary>
            Version of the lightmap calculation.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.TitleID">
            <summary>
            Title pack the map was built in.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.XML">
            <summary>
            XML track information and dependencies.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.Comments">
            <summary>
            The map's author comments.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader.Thumbnail">
            <summary>
            Thumbnail JPEG data.
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallenge.AsHeader">
            <summary>
            Gets the node casted to an interface that shows values used in the header.
            </summary>
            <returns>An <see cref="T:GBX.NET.Engines.Game.CGameCtnChallenge.IHeader"/> of the node.</returns>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeGroup">
            <summary>
            Group of maps.
            </summary>
            <remarks>ID: 0x0308F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeGroup.Chunk0308F002">
            <summary>
            CGameCtnChallengeGroup 0x002 chunk (name)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeGroup.Chunk0308F003">
            <summary>
            CGameCtnChallengeGroup 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeGroup.Chunk0308F004">
            <summary>
            CGameCtnChallengeGroup 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeGroup.Chunk0308F005">
            <summary>
            CGameCtnChallengeGroup 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeGroup.Chunk0308F006">
            <summary>
            CGameCtnChallengeGroup 0x006 chunk (old map infos)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeGroup.Chunk0308F007">
            <summary>
            CGameCtnChallengeGroup 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeGroup.Chunk0308F009">
            <summary>
            CGameCtnChallengeGroup 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeGroup.Chunk0308F00B">
            <summary>
            CGameCtnChallengeGroup 0x00B chunk (map infos)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeGroup.MapInfo">
            <summary>
            SChallenge
            </summary>
            <param name="Metadata">Metadata.</param>
            <param name="FilePath">File path.</param>
            <param name="U01"></param>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnChallengeGroup.MapInfo.#ctor(GBX.NET.Ident,System.String,System.Nullable{System.Boolean})">
            <summary>
            SChallenge
            </summary>
            <param name="Metadata">Metadata.</param>
            <param name="FilePath">File path.</param>
            <param name="U01"></param>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallengeGroup.MapInfo.Metadata">
            <summary>Metadata.</summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallengeGroup.MapInfo.FilePath">
            <summary>File path.</summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallengeGroup.MapInfo.U01">
            <summary></summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters">
            <summary>
            Map parameters.
            </summary>
            <remarks>ID: 0x0305B000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallengeParameters.BronzeTime">
            <summary>
            Time of the bronze medal.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallengeParameters.SilverTime">
            <summary>
            Time of the silver medal.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallengeParameters.GoldTime">
            <summary>
            Time of the gold medal.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallengeParameters.AuthorTime">
            <summary>
            Time of the author medal.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallengeParameters.AuthorScore">
            <summary>
            Usually author time or stunts score.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnChallengeParameters.TimeLimit">
            <summary>
            Stunts time limit.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B000">
            <summary>
            CGameCtnChallengeParameters 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B001">
            <summary>
            CGameCtnChallengeParameters 0x001 chunk (tips)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B002">
            <summary>
            CGameCtnChallengeParameters 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B003">
            <summary>
            CGameCtnChallengeParameters 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B004">
            <summary>
            CGameCtnChallengeParameters 0x004 chunk (medals)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B005">
            <summary>
            CGameCtnChallengeParameters 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B006">
            <summary>
            CGameCtnChallengeParameters 0x006 chunk (items). This chunk causes "Couldn't load map" in ManiaPlanet.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B007">
            <summary>
            CGameCtnChallengeParameters 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B008">
            <summary>
            CGameCtnChallengeParameters 0x008 chunk (stunts)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B00A">
            <summary>
            CGameCtnChallengeParameters 0x00A chunk (medals)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B00D">
            <summary>
            CGameCtnChallengeParameters 0x00D chunk (race validate ghost)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnChallengeParameters.Chunk0305B00E">
            <summary>
            CGameCtnChallengeParameters 0x00E skippable chunk (map type)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection">
            <summary>
            Information about an environment. Does not include list of possible blocks.
            </summary>
            <remarks>ID: 0x03033000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033008">
            <summary>
            CGameCtnCollection 0x008 chunk (DefaultDecoration)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303300B">
            <summary>
            CGameCtnCollection 0x00B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033013">
            <summary>
            CGameCtnCollection 0x013 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033016">
            <summary>
            CGameCtnCollection 0x016 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033018">
            <summary>
            CGameCtnCollection 0x018 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033019">
            <summary>
            CGameCtnCollection 0x019 chunk (LoadScreenFid)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303301A">
            <summary>
            CGameCtnCollection 0x01A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303301B">
            <summary>
            CGameCtnCollection 0x01B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303301D">
            <summary>
            CGameCtnCollection 0x01D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303301E">
            <summary>
            CGameCtnCollection 0x01E chunk (camera)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303301F">
            <summary>
            CGameCtnCollection 0x01F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033020">
            <summary>
            CGameCtnCollection 0x020 chunk (folders)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033021">
            <summary>
            CGameCtnCollection 0x021 chunk (display name)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033022">
            <summary>
            CGameCtnCollection 0x022 chunk (is water multi-height)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033023">
            <summary>
            CGameCtnCollection 0x023 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033024">
            <summary>
            CGameCtnCollection 0x024 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033027">
            <summary>
            CGameCtnCollection 0x027 chunk (board square)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033028">
            <summary>
            CGameCtnCollection 0x028 chunk (FolderAdditionalItem1)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033029">
            <summary>
            CGameCtnCollection 0x029 chunk (FolderAdditionalItem2)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303302A">
            <summary>
            CGameCtnCollection 0x02A chunk (FolderDecalModels)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303302C">
            <summary>
            CGameCtnCollection 0x02C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303302F">
            <summary>
            CGameCtnCollection 0x02F chunk (Tech3TunnelSpecularExpScaleMax)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033030">
            <summary>
            CGameCtnCollection 0x030 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033031">
            <summary>
            CGameCtnCollection 0x031 chunk (FolderMacroDecals)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033033">
            <summary>
            CGameCtnCollection 0x033 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033034">
            <summary>
            CGameCtnCollection 0x034 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033036">
            <summary>
            CGameCtnCollection 0x036 chunk (OffZone_FogMatter)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033037">
            <summary>
            CGameCtnCollection 0x037 chunk (TerrainHeightOffset)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033038">
            <summary>
            CGameCtnCollection 0x038 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk03033039">
            <summary>
            CGameCtnCollection 0x039 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303303A">
            <summary>
            CGameCtnCollection 0x03A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303303B">
            <summary>
            CGameCtnCollection 0x03B chunk (turbo color)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303303C">
            <summary>
            CGameCtnCollection 0x03C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollection.Chunk0303303D">
            <summary>
            CGameCtnCollection 0x03D chunk (BitmapDisplayControlDefaultTVProgram)
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnCollection.AsHeader">
            <summary>
            Gets the node casted to an interface that shows values used in the header.
            </summary>
            <returns>An <see cref="T:GBX.NET.Engines.Game.CGameCtnCollection.IHeader"/> of the node.</returns>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollectorList">
            <summary>
            A list of puzzle pieces.
            </summary>
            <remarks>ID: 0x0301B000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnCollectorList.Chunk0301B000">
            <summary>
            CGameCtnCollectorList 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk03038001">
            <summary>
            CGameCtnDecoration 0x001 header chunk (LightMap)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk03038011">
            <summary>
            CGameCtnDecoration 0x011 chunk (DecoSize)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk03038012">
            <summary>
            CGameCtnDecoration 0x012 chunk (DecoAudio)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk03038013">
            <summary>
            CGameCtnDecoration 0x013 chunk (DecoMood)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk03038014">
            <summary>
            CGameCtnDecoration 0x014 chunk (DecoratorSolidWarp)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk03038015">
            <summary>
            CGameCtnDecoration 0x015 chunk (TerrainModifierCovered)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk03038016">
            <summary>
            CGameCtnDecoration 0x016 chunk (TerrainModifierBase)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk03038017">
            <summary>
            CGameCtnDecoration 0x017 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk03038018">
            <summary>
            CGameCtnDecoration 0x018 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk03038019">
            <summary>
            CGameCtnDecoration 0x019 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk0303801A">
            <summary>
            CGameCtnDecoration 0x01A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecoration.Chunk0303801B">
            <summary>
            CGameCtnDecoration 0x01B chunk
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnDecoration.AsHeader">
            <summary>
            Gets the node casted to an interface that shows values used in the header.
            </summary>
            <returns>An <see cref="T:GBX.NET.Engines.Game.CGameCtnDecoration.IHeader"/> of the node.</returns>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationAudio.Chunk03039000">
            <summary>
            CGameCtnDecorationAudio 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationAudio.Chunk03039001">
            <summary>
            CGameCtnDecorationAudio 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationAudio.Chunk03039002">
            <summary>
            CGameCtnDecorationAudio 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationMood.Chunk0303A000">
            <summary>
            CGameCtnDecorationMood 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationMood.Chunk0303A001">
            <summary>
            CGameCtnDecorationMood 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationMood.Chunk0303A002">
            <summary>
            CGameCtnDecorationMood 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationMood.Chunk0303A003">
            <summary>
            CGameCtnDecorationMood 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationMood.Chunk0303A004">
            <summary>
            CGameCtnDecorationMood 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationMood.Chunk0303A005">
            <summary>
            CGameCtnDecorationMood 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationSize.Chunk0303B000">
            <summary>
            CGameCtnDecorationSize 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationSize.Chunk0303B001">
            <summary>
            CGameCtnDecorationSize 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationSize.Chunk0303B002">
            <summary>
            CGameCtnDecorationSize 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationSize.Chunk0303B003">
            <summary>
            CGameCtnDecorationSize 0x003 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationTerrainModifier.Chunk0303C000">
            <summary>
            CGameCtnDecorationTerrainModifier 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnDecorationTerrainModifier.Chunk0303C001">
            <summary>
            CGameCtnDecorationTerrainModifier 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost">
            <summary>
            A ghost.
            </summary>
            <remarks>ID: 0x03092000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Checkpoint">
            <summary>
            Checkpoint timestamp driven by the ghost.
            </summary>
            <param name="Time">Time of the checkpoint.</param>
            <param name="StuntsScore">Amount of stunt points when reaching this checkpoint. This is very often 0 in TM2 replay, and not present at all in very old TM versions.</param>
            <param name="Speed">The speed the vehicle had when crossing the checkpoint. Only present in the oldest TM versions.</param>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnGhost.Checkpoint.#ctor(System.Nullable{TmEssentials.TimeInt32},System.Int32,System.Nullable{System.Single})">
            <summary>
            Checkpoint timestamp driven by the ghost.
            </summary>
            <param name="Time">Time of the checkpoint.</param>
            <param name="StuntsScore">Amount of stunt points when reaching this checkpoint. This is very often 0 in TM2 replay, and not present at all in very old TM versions.</param>
            <param name="Speed">The speed the vehicle had when crossing the checkpoint. Only present in the oldest TM versions.</param>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnGhost.Checkpoint.Time">
            <summary>Time of the checkpoint.</summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnGhost.Checkpoint.StuntsScore">
            <summary>Amount of stunt points when reaching this checkpoint. This is very often 0 in TM2 replay, and not present at all in very old TM versions.</summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnGhost.Checkpoint.Speed">
            <summary>The speed the vehicle had when crossing the checkpoint. Only present in the oldest TM versions.</summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnGhost.Checkpoints">
            <summary>
            Checkpoints driven by the ghost. In some cases, they may not be in order.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnGhost.EventsDuration">
            <summary>
            Duration of events in the ghost (range of detected inputs). This can be 0 if the ghost was driven in editor.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnGhost.ControlEntries">
            <summary>
            Inputs (keyboard, pad, wheel) of the ghost from TMU, TMUF, TMTurbo and TM2. TMTurbo stores the keyboard inputs as <see cref="T:GBX.NET.ControlEntryAnalog"/>. For inputs stored in TM1.0, TMO, Sunrise and ESWC: see <see cref="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.ControlEntries"/>. TM2020 and Shootmania inputs are available in <see cref="P:GBX.NET.Engines.Game.CGameCtnGhost.PlayerInputs"/>. Can be null if <see cref="P:GBX.NET.Engines.Game.CGameCtnGhost.EventsDuration"/> is 0, which can happen when you save the replay in editor.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnGhost.PlayerInputs">
            <summary>
            Shootmania and TM2020 inputs.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnGhost.Inputs">
            <summary>
            Inputs (keyboard, pad, wheel) of the ghost from TMU, TMUF, TMTurbo and TM2. TMTurbo stores the keyboard steering as analog. For inputs stored in TM1.0, TMO, Sunrise and ESWC: see <see cref="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Inputs"/>. TM2020 and Shootmania inputs are available in <see cref="P:GBX.NET.Engines.Game.CGameCtnGhost.PlayerInputs"/>. Can be null if <see cref="P:GBX.NET.Engines.Game.CGameCtnGhost.EventsDuration"/> is 0, which can happen when you save the replay in editor.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092000">
            <summary>
            CGameCtnGhost 0x000 skippable chunk (basic)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092003">
            <summary>
            CGameCtnGhost 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092004">
            <summary>
            CGameCtnGhost 0x004 skippable chunk (old checkpoints)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092005">
            <summary>
            CGameCtnGhost 0x005 skippable chunk (race time)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092006">
            <summary>
            CGameCtnGhost 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092007">
            <summary>
            CGameCtnGhost 0x007 chunk (old light trail color)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092008">
            <summary>
            CGameCtnGhost 0x008 skippable chunk (respawns)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092009">
            <summary>
            CGameCtnGhost 0x009 skippable chunk (light trail color)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309200A">
            <summary>
            CGameCtnGhost 0x00A skippable chunk (stunt score)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309200B">
            <summary>
            CGameCtnGhost 0x00B skippable chunk (checkpoint times)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309200C">
            <summary>
            CGameCtnGhost 0x00C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309200D">
            <summary>
            CGameCtnGhost 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309200E">
            <summary>
            CGameCtnGhost 0x00E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309200F">
            <summary>
            CGameCtnGhost 0x00F chunk (ghost login)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092010">
            <summary>
            CGameCtnGhost 0x010 chunk (validation map UID)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092011">
            <summary>
            CGameCtnGhost 0x011 chunk (validation TMU)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092012">
            <summary>
            CGameCtnGhost 0x012 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092013">
            <summary>
            CGameCtnGhost 0x013 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092014">
            <summary>
            CGameCtnGhost 0x014 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092015">
            <summary>
            CGameCtnGhost 0x015 chunk (ghost nickname)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092017">
            <summary>
            CGameCtnGhost 0x017 skippable chunk (ghost metadata)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092018">
            <summary>
            CGameCtnGhost 0x018 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092019">
            <summary>
            CGameCtnGhost 0x019 chunk (validation TMUF)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309201A">
            <summary>
            CGameCtnGhost 0x01A skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309201B">
            <summary>
            CGameCtnGhost 0x01B skippable chunk (race result)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309201C">
            <summary>
            CGameCtnGhost 0x01C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309201D">
            <summary>
            CGameCtnGhost 0x01D skippable chunk (player input data)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309201F">
            <summary>
            CGameCtnGhost 0x01F skippable chunk (OldColorHistory)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092021">
            <summary>
            CGameCtnGhost 0x021 skippable chunk (OldKeyStrokes)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092022">
            <summary>
            CGameCtnGhost 0x022 skippable chunk (timed pixel array)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092023">
            <summary>
            CGameCtnGhost 0x023 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092024">
            <summary>
            CGameCtnGhost 0x024 skippable chunk (match replay separators)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092025">
            <summary>
            CGameCtnGhost 0x025 skippable chunk (validation TM2)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092026">
            <summary>
            CGameCtnGhost 0x026 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092027">
            <summary>
            CGameCtnGhost 0x027 skippable chunk (timed pixel array 2)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092028">
            <summary>
            CGameCtnGhost 0x028 skippable chunk (title id)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk03092029">
            <summary>
            CGameCtnGhost 0x029 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309202A">
            <summary>
            CGameCtnGhost 0x02A skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309202B">
            <summary>
            CGameCtnGhost 0x02B skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309202C">
            <summary>
            CGameCtnGhost 0x02C skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309202D">
            <summary>
            CGameCtnGhost 0x02D skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.Chunk0309202E">
            <summary>
            CGameCtnGhost 0x02E skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnGhost.PlayerInputData">
            <summary>
            Set of inputs.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo">
            <summary>
            A macroblock.
            </summary>
            <remarks>ID: 0x0310D000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.ScriptMetadata">
            <summary>
            Metadata written into the macroblock.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D000">
            <summary>
            CGameCtnMacroBlockInfo 0x000 chunk (block spawns)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D001">
            <summary>
            CGameCtnMacroBlockInfo 0x001 chunk (block skin spawns)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D002">
            <summary>
            CGameCtnMacroBlockInfo 0x002 chunk (card events spawns)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D006">
            <summary>
            CGameCtnMacroBlockInfo 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D007">
            <summary>
            CGameCtnMacroBlockInfo 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D008">
            <summary>
            CGameCtnMacroBlockInfo 0x008 chunk (auto terrains)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D00B">
            <summary>
            CGameCtnMacroBlockInfo 0x00B skippable chunk (script metadata)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D00C">
            <summary>
            CGameCtnMacroBlockInfo 0x00C skippable chunk (splines)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D00E">
            <summary>
            CGameCtnMacroBlockInfo 0x00E chunk (object spawns)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D00F">
            <summary>
            CGameCtnMacroBlockInfo 0x00F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D010">
            <summary>
            CGameCtnMacroBlockInfo 0x010 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMacroBlockInfo.Chunk0310D011">
            <summary>
            CGameCtnMacroBlockInfo 0x011 skippable chunk (clips)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlock">
            <summary>
            MediaTracker block.
            </summary>
            <remarks>ID: 0x03077000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlock.Key">
            <summary>
            Keyframe of a MediaTracker block.
            </summary>
            <remarks>Internally called <c>SKeyVal</c>.</remarks>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnMediaBlock.Key.ReadWrite(GBX.NET.GameBoxReaderWriter,System.Int32)">
            <summary>
            Reads or writes the keyframe structure. 
            </summary>
            <remarks>Base includes time of the keyframe (in seconds).</remarks>
            <param name="rw">Reader/Writer.</param>
            <param name="version">Version to determine how to read the key.</param>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlock3dStereo">
            <summary>
            MediaTracker block - 3D stereo.
            </summary>
            <remarks>ID: 0x03024000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlock3dStereo.Chunk03024000">
            <summary>
            CGameCtnMediaBlock3dStereo 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockBloomHdr">
            <summary>
            MediaTracker block - Bloom HDR.
            </summary>
            <remarks>ID: 0x03128000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockBloomHdr.Chunk03128000">
            <summary>
            CGameCtnMediaBlockBloomHdr 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockBloomHdr.Chunk03128001">
            <summary>
            CGameCtnMediaBlockBloomHdr 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockBloomHdr.Chunk03128002">
            <summary>
            CGameCtnMediaBlockBloomHdr 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCamera">
            <summary>
            MediaTracker block - Camera base.
            </summary>
            <remarks>ID: 0x0307C000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraCustom">
            <summary>
            MediaTracker block - Custom camera.
            </summary>
            <remarks>ID: 0x030A2000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraCustom.Chunk030A2001">
            <summary>
            CGameCtnMediaBlockCameraCustom 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraCustom.Chunk030A2002">
            <summary>
            CGameCtnMediaBlockCameraCustom 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraCustom.Chunk030A2005">
            <summary>
            CGameCtnMediaBlockCameraCustom 0x005 chunk (TMUF)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraCustom.Chunk030A2006">
            <summary>
            CGameCtnMediaBlockCameraCustom 0x006 chunk (ManiaPlanet)
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraCustom.InterpVal.PitchYawRoll">
            <summary>
            Pitch, yaw and roll in radians.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraCustom.Key.PitchYawRoll">
            <summary>
            Pitch, yaw and roll in radians.
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraCustom.Key.ReadWrite(GBX.NET.GameBoxReaderWriter,System.Int32)">
            <exception cref="T:GBX.NET.Exceptions.ChunkVersionNotSeenException"></exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkVersionNotSupportedException"></exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraCustom.Key.ReadWriteVersion6AndAbove(GBX.NET.GameBoxReaderWriter,System.Int32)">
            <exception cref="T:GBX.NET.Exceptions.ChunkVersionNotSeenException"></exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkVersionNotSupportedException"></exception>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraEffect">
            <summary>
            MediaTracker block - Camera effect.
            </summary>
            <remarks>ID: 0x030A3000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraEffectInertialTracking">
            <summary>
            MediaTracker block - Camera effect inetrial tracking.
            </summary>
            <remarks>ID: 0x03166000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraEffectInertialTracking.Chunk03166000">
            <summary>
            CGameCtnMediaBlockCameraEffectInertialTracking 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraEffectScript">
            <summary>
            MediaTracker block - Camera effect script.
            </summary>
            <remarks>ID: 0x03161000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraEffectScript.Chunk03161000">
            <summary>
            CGameCtnMediaBlockCameraEffectScript 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraEffectShake">
            <summary>
            MediaTracker block - Camera shake.
            </summary>
            <remarks>ID: 0x030A4000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraEffectShake.Chunk030A4000">
            <summary>
            CGameCtnMediaBlockCameraEffectShake 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraGame">
            <summary>
            MediaTracker block - Camera ingame.
            </summary>
            <remarks>ID: 0x03084000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraGame.Chunk03084000">
            <summary>
            CGameCtnMediaBlockCameraGame 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraGame.Chunk03084001">
            <summary>
            CGameCtnMediaBlockCameraGame 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraGame.Chunk03084003">
            <summary>
            CGameCtnMediaBlockCameraGame 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraGame.Chunk03084004">
            <summary>
            CGameCtnMediaBlockCameraGame 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraGame.Chunk03084005">
            <summary>
            CGameCtnMediaBlockCameraGame 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraGame.Chunk03084006">
            <summary>
            CGameCtnMediaBlockCameraGame 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraGame.Chunk03084007">
            <summary>
            CGameCtnMediaBlockCameraGame 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraOrbital">
            <remarks>ID: 0x030A0000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraOrbital.Chunk030A0001">
            <summary>
            CGameCtnMediaBlockCameraOrbital 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraPath">
            <summary>
            MediaTracker block - Camera path.
            </summary>
            <remarks>ID: 0x030A1000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraPath.Chunk030A1000">
            <summary>
            CGameCtnMediaBlockCameraPath 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraPath.Chunk030A1001">
            <summary>
            CGameCtnMediaBlockCameraPath 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraPath.Chunk030A1002">
            <summary>
            CGameCtnMediaBlockCameraPath 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraPath.Chunk030A1003">
            <summary>
            CGameCtnMediaBlockCameraPath 0x003 chunk
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraPath.Key.PitchYawRoll">
            <summary>
            Pitch, yaw and roll in radians.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockColorGrading">
            <summary>
            MediaTracker block - Color grading.
            </summary>
            <remarks>ID: 0x03186000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockColorGrading.Chunk03186000">
            <summary>
            CGameCtnMediaBlockColorGrading 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockColorGrading.Chunk03186001">
            <summary>
            CGameCtnMediaBlockColorGrading 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockColoringBase">
            <summary>
            MediaTracker block - Coloring base.
            </summary>
            <remarks>ID: 0x03172000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockColoringBase.Chunk03172000">
            <summary>
            CGameCtnMediaBlockColoringBase 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockColoringCapturable">
            <summary>
            MediaTracker block - Coloring capturable.
            </summary>
            <remarks>ID: 0x0316C000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockColoringCapturable.Chunk0316C000">
            <summary>
            CGameCtnMediaBlockColoringCapturable 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockDirtyLens">
            <summary>
            MediaTracker block - Dirty lens.
            </summary>
            <remarks>ID: 0x03165000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockDirtyLens.Chunk03165000">
            <summary>
            CGameCtnMediaBlockDirtyLens 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockDOF">
            <summary>
            MediaTracker block - Depth of field.
            </summary>
            <remarks>ID: 0x03126000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockDOF.Chunk03126000">
            <summary>
            CGameCtnMediaBlockDOF 0x000 chunk (version 0)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockDOF.Chunk03126001">
            <summary>
            CGameCtnMediaBlockDOF 0x001 chunk (version 1)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockDOF.Chunk03126002">
            <summary>
            CGameCtnMediaBlockDOF 0x002 chunk (version 2)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockEntity">
            <summary>
            MediaTracker block - Entity.
            </summary>
            <remarks>ID: 0x0329F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockEntity.Chunk0329F000">
            <summary>
            CGameCtnMediaBlockEntity 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockEntity.Chunk0329F002">
            <summary>
            CGameCtnMediaBlockEntity 0x002 chunk (SkinOptions)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFog">
            <summary>
            MediaTracker block - Fog.
            </summary>
            <remarks>ID: 0x03199000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFog.Chunk03199000">
            <summary>
            CGameCtnMediaBlockFog 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFx">
            <summary>
            MediaTracker block - Effect.
            </summary>
            <remarks>ID: 0x0307E000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFxBloom">
            <summary>
            MediaTracker block - Bloom effect for TMUF and older games. This node causes "Couldn't load map" in ManiaPlanet.
            </summary>
            <remarks>ID: 0x03083000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFxBloom.Chunk03083001">
            <summary>
            CGameCtnMediaBlockFxBloom 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFxBlur">
            <summary>
            MediaTracker block - Blur effect.
            </summary>
            <remarks>ID: 0x0307F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFxBlurDepth">
            <summary>
            MediaTracker block - Blur depth effect.
            </summary>
            <remarks>ID: 0x03081000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFxBlurDepth.Chunk03081001">
            <summary>
            CGameCtnMediaBlockFxBlurDepth 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFxBlurMotion">
            <summary>
            MediaTracker block - Motion blur effect.
            </summary>
            <remarks>ID: 0x03082000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFxCameraBlend">
            <summary>
            MediaTracker block - Camera blend effect.
            </summary>
            <remarks>ID: 0x0316D000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFxCameraMap">
            <summary>
            MediaTracker block - Camera map effect.
            </summary>
            <remarks>ID: 0x03139000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockFxColors">
            <summary>
            MediaTracker block - Color effect.
            </summary>
            <remarks>ID: 0x03080000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockGhost">
            <summary>
            MediaTracker block - Ghost.
            </summary>
            <remarks>ID: 0x030E5000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockImage">
            <summary>
            MediaTracker block - Image.
            </summary>
            <remarks>ID: 0x030A5000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockInterface">
            <summary>
            MediaTracker block - Interface.
            </summary>
            <remarks>ID: 0x03195000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockManialink">
            <summary>
            MediaTracker block - Manialink.
            </summary>
            <remarks>ID: 0x0312A000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockMusicEffect">
            <summary>
            MediaTracker block - Music effect.
            </summary>
            <remarks>ID: 0x030A6000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockOpponentVisibility">
            <summary>
            MediaTracker block - Opponent visibility.
            </summary>
            <remarks>ID: 0x0338B000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockOpponentVisibility.Chunk0338B000">
            <summary>
            CGameCtnMediaBlockOpponentVisibility 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockOpponentVisibility.Chunk0338B001">
            <summary>
            CGameCtnMediaBlockOpponentVisibility 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockScenery">
            <summary>
            MediaTracker block - Scenery.
            </summary>
            <remarks>ID: 0x03188000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockScenery.Chunk03188000">
            <summary>
            CGameCtnMediaBlockScenery 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockShoot">
            <summary>
            MediaTracker block - Shoot (better known as "Editing cut").
            </summary>
            <remarks>ID: 0x03145000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockShoot.Chunk03145000">
            <summary>
            CGameCtnMediaBlockShoot 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockSound">
            <summary>
            MediaTracker block - Sound.
            </summary>
            <remarks>ID: 0x030A7000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockSound.Chunk030A7001">
            <summary>
            CGameCtnMediaBlockSound 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockSound.Chunk030A7002">
            <summary>
            CGameCtnMediaBlockSound 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockSound.Chunk030A7003">
            <summary>
            CGameCtnMediaBlockSound 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockSound.Chunk030A7004">
            <summary>
            CGameCtnMediaBlockSound 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockSpectators">
            <remarks>ID: 0x030EB000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockSpectators.Chunk030EB000">
            <summary>
            CGameCtnMediaBlockSpectators 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockText">
            <summary>
            MediaTracker block - Text.
            </summary>
            <remarks>ID: 0x030A8000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockText.Chunk030A8001">
            <summary>
            CGameCtnMediaBlockText 0x001 chunk (text)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockText.Chunk030A8002">
            <summary>
            CGameCtnMediaBlockText 0x002 chunk (color)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockText.Chunk030A8003">
            <summary>
            CGameCtnMediaBlockText 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTime">
            <summary>
            MediaTracker block - Time.
            </summary>
            <remarks>ID: 0x03085000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTime.Chunk03085000">
            <summary>
            CGameCtnMediaBlockTime 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTimeSpeed">
            <summary>
            MediaTracker block - Time speed.
            </summary>
            <remarks>ID: 0x03129000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockToneMapping">
            <summary>
            MediaTracker block - Tone mapping
            </summary>
            <remarks>ID: 0x03127000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockToneMapping.Chunk03127000">
            <summary>
            CGameCtnMediaBlockToneMapping 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockToneMapping.Chunk03127001">
            <summary>
            CGameCtnMediaBlockToneMapping 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockToneMapping.Chunk03127002">
            <summary>
            CGameCtnMediaBlockToneMapping 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockToneMapping.Chunk03127003">
            <summary>
            CGameCtnMediaBlockToneMapping 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockToneMapping.Chunk03127004">
            <summary>
            CGameCtnMediaBlockToneMapping 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTrails">
            <summary>
            MediaTracker block - Trails.
            </summary>
            <remarks>ID: 0x030A9000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTransitionFade">
            <summary>
            MediaTracker block - Transition fade.
            </summary>
            <remarks>ID: 0x030AB000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTransitionFade.Chunk030AB000">
            <summary>
            CGameCtnMediaBlockTransitionFade 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTriangles">
            <summary>
            MediaTracker block - Triangles.
            </summary>
            <remarks>ID: 0x03029000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTriangles.Chunk03029001">
            <summary>
            CGameCtnMediaBlockTriangles 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTriangles.Chunk03029002">
            <summary>
            CGameCtnMediaBlockTriangles 0x002 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTriangles2D">
            <summary>
            MediaTracker block - 2D triangles.
            </summary>
            <remarks>ID: 0x0304B000</remarks>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnMediaBlockTriangles2D.Create(GBX.NET.Vec4[])">
            <param name="vertices">Array of vertex colors.</param>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockTriangles3D">
            <summary>
            MediaTracker block - 3D triangles.
            </summary>
            <remarks>ID: 0x0304C000</remarks>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnMediaBlockTriangles3D.Create(GBX.NET.Vec4[])">
            <param name="vertices">Array of vertex colors.</param>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockUi">
            <summary>
            MediaTracker block - UI.
            </summary>
            <remarks>ID: 0x0307D000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockUi.Chunk0307D000">
            <summary>
            CGameCtnMediaBlockUi 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockUi.Chunk0307D001">
            <summary>
            CGameCtnMediaBlockUi 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockVehicleLight">
            <summary>
            MediaTracker block - Vehicle light.
            </summary>
            <remarks>ID: 0x03133000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockVehicleLight.Chunk03133000">
            <summary>
            CGameCtnMediaBlockVehicleLight 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaBlockVehicleLight.Chunk03133001">
            <summary>
            CGameCtnMediaBlockVehicleLight 0x001 chunk (target)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip">
            <summary>
            A MediaTracker clip.
            </summary>
            <remarks>ID: 0x03079000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaClip.Name">
            <summary>
            Name of the clip. The value of this property is an empty string if the clip is an intro, ambiance or podium.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaClip.Tracks">
            <summary>
            List of MediaTracker tracks.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaClip.StopWhenRespawn">
            <summary>
            Stop the clip when player respawns.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaClip.StopWhenLeave">
            <summary>
            Stop the clip when player leaves the trigger.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk03079002">
            <summary>
            CGameCtnMediaClip 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk03079003">
            <summary>
            CGameCtnMediaClip 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk03079004">
            <summary>
            CGameCtnMediaClip 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk03079005">
            <summary>
            CGameCtnMediaClip 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk03079007">
            <summary>
            CGameCtnMediaClip 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk03079008">
            <summary>
            CGameCtnMediaClip 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk03079009">
            <summary>
            CGameCtnMediaClip 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk0307900A">
            <summary>
            CGameCtnMediaClip 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk0307900B">
            <summary>
            CGameCtnMediaClip 0x00B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk0307900C">
            <summary>
            CGameCtnMediaClip 0x00C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk0307900D">
            <summary>
            CGameCtnMediaClip 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClip.Chunk0307900E">
            <summary>
            CGameCtnMediaClip 0x00E skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClipGroup">
            <summary>
            MediaTracker clip group.
            </summary>
            <remarks>ID: 0x0307A000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaClipGroup.Clips">
            <summary>
            List of MediaTracker clips.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClipGroup.Chunk0307A001">
            <summary>
            CGameCtnMediaClipGroup 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClipGroup.Chunk0307A002">
            <summary>
            CGameCtnMediaClipGroup 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClipGroup.Chunk0307A003">
            <summary>
            CGameCtnMediaClipGroup 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaClipGroup.Chunk0307A004">
            <summary>
            CGameCtnMediaClipGroup 0x004 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaShootParams">
            <summary>
            MediaTracker block - shoot parameters.
            </summary>
            <remarks>ID: 0x03060000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaShootParams.Chunk03060001">
            <summary>
            CGameCtnMediaShootParams 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaTrack">
            <summary>
            MediaTracker track.
            </summary>
            <remarks>ID: 0x03078000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaTrack.Name">
            <summary>
            Name of the track.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaTrack.Blocks">
            <summary>
            List of blocks.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnMediaTrack.IsKeepPlaying">
            <summary>
            If the track should keep playing the last block after it ends.
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnMediaTrack.TransferMediaTrackTo005">
            <summary>
            Transfers the MediaTracker track properties from either <see cref="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078002"/> (ESWC) or <see cref="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078004"/> (TMF)
            to <see cref="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078005"/> (ManiaPlanet and Trackmania®). If those chunks aren't presented, no action is performed.
            <see cref="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078003"/> is additionally removed for undiscovered safety of the chunk.
            </summary>
            <returns>True if any of the chunks were transfered.</returns>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078001">
            <summary>
            CGameCtnMediaTrack 0x001 chunk (main)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078002">
            <summary>
            CGameCtnMediaTrack 0x002 chunk (TMS/TMU IsKeepPlaying). Represents <see cref="P:GBX.NET.Engines.Game.CGameCtnMediaTrack.IsKeepPlaying"/> for ESWC tracks. This chunk should be removed or transfered
            to <see cref="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078005"/> in the new versions of ManiaPlanet with <see cref="M:GBX.NET.Engines.Game.CGameCtnMediaTrack.TransferMediaTrackTo005"/>.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078003">
            <summary>
            CGameCtnMediaTrack 0x003 chunk (TMS/TMU IsReadOnly)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078004">
            <summary>
            CGameCtnMediaTrack 0x004 chunk (TMUF parameters). Represents This chunk should be removed or transfered to <see cref="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078005"/> in the new versions of ManiaPlanet with <see cref="M:GBX.NET.Engines.Game.CGameCtnMediaTrack.TransferMediaTrackTo005"/>, as ManiaPlanet corrupted backwards compatibility of this one.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnMediaTrack.Chunk03078005">
            <summary>
            CGameCtnMediaTrack 0x005 chunk (MP parameters).
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord">
            <summary>
            A replay.
            </summary>
            <remarks>ID: 0x03093000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.MapInfo">
            <summary>
            Map UID, environment, and author login of the map the replay orients in.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Time">
            <summary>
            The record time.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.PlayerNickname">
            <summary>
            Nickname of the record owner.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.PlayerLogin">
            <summary>
            Login of the record owner.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.TitleID">
            <summary>
            Title pack the replay orients in.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.XML">
            <summary>
            XML replay information.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.AuthorLogin">
            <summary>
            Login of the replay creator.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.AuthorNickname">
            <summary>
            Nickname of the replay creator.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.AuthorZone">
            <summary>
            Zone of the replay creator.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Challenge">
            <summary>
            The map the replay orients in. Null if only the header was read.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Ghosts">
            <summary>
            Ghosts in the replay. Null if only the header was read.
            </summary>
            <remarks>Some ghosts can be considered as <see cref="T:GBX.NET.Engines.Game.CGameCtnMediaBlockGhost"/>. See <see cref="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Clip"/>.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Clip">
            <summary>
            MediaTracker clip of the replay.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Events">
            <summary>
            Events occuring during the replay. Available in TMS and older games.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.SimpleEventsDisplay">
            <summary>
            Events occuring during the replay. Available in TMS and older games.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.EventsDuration">
            <summary>
            Duration of events in the replay (range of detected inputs). This can be <see cref="F:TmEssentials.TimeInt32.Zero"/> if the replay was driven in editor and null if driven in TMU, TMUF, TMTurbo, TM2 and TM2020.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.ControlEntries">
            <summary>
            Inputs (keyboard, pad, wheel) of the replay from TM1.0, TMO, Sunrise and ESWC. For inputs stored in TMU, TMUF, TMTurbo and TM2: see <see cref="P:GBX.NET.Engines.Game.CGameCtnGhost.ControlEntries"/> in <see cref="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Ghosts"/>. TM2020 and Shootmania inputs aren't available in replays and ghosts. Can be null if <see cref="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.EventsDuration"/> is 0, which can happen when you save the replay in editor.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Inputs">
            <summary>
            Inputs (keyboard, pad, wheel) of the replay from TM1.0, TMO, Sunrise and ESWC. For inputs stored in TMU, TMUF, TMTurbo and TM2: see <see cref="P:GBX.NET.Engines.Game.CGameCtnGhost.Inputs"/> in <see cref="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Ghosts"/>. TM2020 and Shootmania inputs are available in <see cref="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.Ghosts"/> in <see cref="P:GBX.NET.Engines.Game.CGameCtnGhost.PlayerInputs"/>. Can be null if <see cref="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.EventsDuration"/> is 0, which can happen when you save the replay in editor.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093000">
            <summary>
            CGameCtnReplayRecord 0x000 header chunk (basic)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093001">
            <summary>
            CGameCtnReplayRecord 0x001 header chunk (xml)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093002H">
            <summary>
            CGameCtnReplayRecord 0x002 header chunk (author)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093002B">
            <summary>
            CGameCtnReplayRecord 0x002 chunk (track)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093003">
            <summary>
            CGameCtnReplayRecord 0x003 chunk (validation TM1.0)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093004">
            <summary>
            CGameCtnReplayRecord 0x004 chunk (ghosts)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093005">
            <summary>
            CGameCtnReplayRecord 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093007">
            <summary>
            CGameCtnReplayRecord 0x007 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093008">
            <summary>
            CGameCtnReplayRecord 0x008 skippable chunk (game)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk0309300C">
            <summary>
            CGameCtnReplayRecord 0x00C chunk (clip)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk0309300D">
            <summary>
            CGameCtnReplayRecord 0x00D chunk (validation)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk0309300E">
            <summary>
            CGameCtnReplayRecord 0x00E chunk (events)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk0309300F">
            <summary>
            CGameCtnReplayRecord 0x00F skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093010">
            <summary>
            CGameCtnReplayRecord 0x010 chunk (simple events display)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093011">
            <summary>
            CGameCtnReplayRecord 0x011 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093013">
            <summary>
            CGameCtnReplayRecord 0x013 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093014">
            <summary>
            CGameCtnReplayRecord 0x014 chunk (ghosts)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093015">
            <summary>
            CGameCtnReplayRecord 0x015 chunk (clip)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093018">
            <summary>
            CGameCtnReplayRecord 0x018 skippable chunk (author)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk0309301A">
            <summary>
            CGameCtnReplayRecord 0x01A skippable chunk (scenery vortex key)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk0309301B">
            <summary>
            CGameCtnReplayRecord 0x01B skippable chunk (player of interest)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk0309301C">
            <summary>
            CGameCtnReplayRecord 0x01C skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk0309301D">
            <summary>
            CGameCtnReplayRecord 0x01D skippable chunk (InterfaceScriptInfos)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk0309301E">
            <summary>
            CGameCtnReplayRecord 0x01E skippable chunk (actions)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk0309301F">
            <summary>
            CGameCtnReplayRecord 0x01E skippable chunk (AnchoredObjectInfos)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093020">
            <summary>
            CGameCtnReplayRecord 0x020 skippable chunk (item skins and names)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093021">
            <summary>
            CGameCtnReplayRecord 0x021 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093022">
            <summary>
            CGameCtnReplayRecord 0x022 skippable chunk (TimedCamVal)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093023">
            <summary>
            CGameCtnReplayRecord 0x023 skippable chunk (BonusBumpKey)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093024">
            <summary>
            CGameCtnReplayRecord 0x024 chunk (record data)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093025">
            <summary>
            CGameCtnReplayRecord 0x025 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093026">
            <summary>
            CGameCtnReplayRecord 0x026 skippable chunk (EntDataSceneUIdsToGhost)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093027">
            <summary>
            CGameCtnReplayRecord 0x027 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.Chunk03093028">
            <summary>
            CGameCtnReplayRecord 0x028 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTM10">
            <summary>
            Interface intended for full parse of <see cref="T:GBX.NET.Engines.Game.CGameCtnReplayRecord"/> in TM1.0.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTM10.Challenge">
            <summary>
            The map the replay orients in.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTM10.ControlEntries">
            <summary>
            Inputs (keyboard, pad, wheel) of the replay. Can be null if <see cref="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTM10.EventsDuration"/> is 0, which can happen when you save the replay in editor.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTM10.EventsDuration">
            <summary>
            Duration of events in the replay (range of detected inputs). This can be <see cref="F:TmEssentials.TimeInt32.Zero"/> if the replay was driven in editor.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTM10.Ghosts">
            <summary>
            Ghosts in the replay.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMS">
            <summary>
            Interface intended for full parse of <see cref="T:GBX.NET.Engines.Game.CGameCtnReplayRecord"/> in TMS.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMS.Clip">
            <summary>
            MediaTracker clip of the replay.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMS.Events">
            <summary>
            Events occuring during the replay.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMS.SimpleEventsDisplay">
            <summary>
            Events occuring during the replay.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMS.Game">
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMU">
            <summary>
            Interface intended for full parse of <see cref="T:GBX.NET.Engines.Game.CGameCtnReplayRecord"/> in TMU.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMU.Challenge">
            <summary>
            The map the replay orients in.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMU.Clip">
            <summary>
            MediaTracker clip of the replay.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMU.Ghosts">
            <summary>
            Ghosts in the replay.
            </summary>
            <remarks>Some ghosts can be considered as <see cref="T:GBX.NET.Engines.Game.CGameCtnMediaBlockGhost"/>. See <see cref="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMU.Clip"/>.</remarks>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMUF">
            <summary>
            Interface intended for full parse of <see cref="T:GBX.NET.Engines.Game.CGameCtnReplayRecord"/> in TMUF.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMUF.Extras">
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullMP3">
            <summary>
            Interface intended for full parse of <see cref="T:GBX.NET.Engines.Game.CGameCtnReplayRecord"/> in MP3 (TM2/SM).
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTMTurbo">
            <summary>
            Interface intended for full parse of <see cref="T:GBX.NET.Engines.Game.CGameCtnReplayRecord"/> in TMTurbo.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullMP4">
            <summary>
            Interface intended for full parse of <see cref="T:GBX.NET.Engines.Game.CGameCtnReplayRecord"/> in MP4 (TM2/SM).
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullMP4.RecordData">
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFullTM2020">
            <summary>
            Interface intended for full parse of <see cref="T:GBX.NET.Engines.Game.CGameCtnReplayRecord"/> in TM2020.
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFull">
            <summary>
            Interface intended for full parse of <see cref="T:GBX.NET.Engines.Game.CGameCtnReplayRecord"/>.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IFull.EventsDuration">
            <summary>
            Duration of events in the replay (range of detected inputs). This can be <see cref="F:TmEssentials.TimeInt32.Zero"/> if the replay was driven in editor and null if driven in TMU, TMUF, TMTurbo, TM2 and TM2020.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderTMS.MapInfo">
            <summary>
            Map UID, environment, and author login of the map the replay orients in.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderTMS.Time">
            <summary>
            The record time.
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderTMS.PlayerNickname">
            <summary>
            Nickname of the record owner.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderTMS.XML">
            <summary>
            XML replay information.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderTMU.PlayerLogin">
            <summary>
            Login of the record owner.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderMP3.TitleID">
            <summary>
            Title pack the replay orients in.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderMP3.AuthorVersion">
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderMP3.AuthorLogin">
            <summary>
            Login of the replay creator.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderMP3.AuthorNickname">
            <summary>
            Nickname of the replay creator.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderMP3.AuthorZone">
            <summary>
            Zone of the replay creator.
            </summary>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeaderMP3.AuthorExtraInfo">
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"></exception>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameCtnReplayRecord.AsHeader">
            <summary>
            Gets the node casted to an interface that shows values used in the header.
            </summary>
            <returns>An <see cref="T:GBX.NET.Engines.Game.CGameCtnReplayRecord.IHeader"/> of the node.</returns>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnSolidDecals.Chunk03121001">
            <summary>
            CGameCtnSolidDecals 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnSolidDecals.Chunk03121002">
            <summary>
            CGameCtnSolidDecals 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnSolidDecals.Chunk03121003">
            <summary>
            CGameCtnSolidDecals 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnSolidDecals.Chunk03121004">
            <summary>
            CGameCtnSolidDecals 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnZone.Chunk0305C003">
            <summary>
            CGameCtnZone 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnZone.Chunk0305C004">
            <summary>
            CGameCtnZone 0x004 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnZone.Chunk0305C005">
            <summary>
            CGameCtnZone 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnZone.Chunk0305C006">
            <summary>
            CGameCtnZone 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnZoneFlat.Chunk0305D001">
            <summary>
            CGameCtnZoneFlat 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnZoneFlat.Chunk0305D002">
            <summary>
            CGameCtnZoneFlat 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnZoneFrontier.Chunk0305E001">
            <summary>
            CGameCtnZoneFrontier 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnZoneGenealogy">
            <summary>
            Zone genealogy.
            </summary>
            <remarks>ID: 0x0311D000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnZoneGenealogy.Chunk0311D001">
            <summary>
            CGameCtnZoneGenealogy 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameCtnZoneGenealogy.Chunk0311D002">
            <summary>
            CGameCtnZoneGenealogy 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameGhost">
            <summary>
            Ghost data.
            </summary>
            <remarks>ID: 0x0303F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameGhost.Chunk0303F003">
            <summary>
            CGameGhost 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameGhost.Chunk0303F004">
            <summary>
            CGameGhost 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameGhost.Chunk0303F005">
            <summary>
            CGameGhost 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameGhost.Chunk0303F006">
            <summary>
            CGameGhost 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameGhost.Chunk0303F007">
            <summary>
            CGameGhost 0x007 skippable chunk
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Game.CGameGhost.Data.SamplePeriod">
            <summary>
            How much time is between each sample.
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameGhost.Data.Read(System.IO.Stream,System.Boolean)">
            <summary>
            Read compressed or uncompressed ghost data from <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">Stream to read from.</param>
            <param name="compressed">If stream contains compressed data.</param>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameGhost.Data.Read(System.IO.Stream)">
            <summary>
            Read uncompressed ghost data from <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">Stream to read from.</param>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameGhost.Data.Read(GBX.NET.GameBoxReader)">
            <summary>
            Read uncompressed ghost data with <see cref="T:GBX.NET.GameBoxReader"/>.
            </summary>
            <param name="r">Reader.</param>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGameGhost.Data.GetSampleLerp(TmEssentials.TimeSingle)">
            <summary>
            Linearly interpolates <see cref="P:GBX.NET.Engines.Game.CGameGhost.Data.Sample.Position"/>, <see cref="P:GBX.NET.Engines.Game.CGameGhost.Data.Sample.Rotation"/>,
            <see cref="P:GBX.NET.Engines.Game.CGameGhost.Data.Sample.VelocitySpeed"/> and <see cref="P:GBX.NET.Engines.Game.CGameGhost.Data.Sample.Velocity"/> between two samples. Unknown data is taken from sample A.
            </summary>
            <param name="timestamp">Any timestamp between the range of samples.</param>
            <returns>A new instance of <see cref="T:GBX.NET.Engines.Game.CGameGhost.Data.Sample"/> that has been linearly interpolated (<see cref="P:GBX.NET.Engines.Game.CGameGhost.Data.Sample.Time"/> will be null)
            or a reference to an existing sample if <paramref name="timestamp"/> matches an existing sample timestamp.
            Also returns null if there are no samples, or if <paramref name="timestamp"/> is outside of the sample range,
            or <see cref="P:GBX.NET.Engines.Game.CGameGhost.Data.SamplePeriod"/> is lower or equal to 0.</returns>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameHighScore.Chunk03047002">
            <summary>
            CGameHighScore 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameLeague">
            <summary>
            League (or zone in other words).
            </summary>
            <remarks>ID: 0x0308E000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameLeague.Chunk0308E001">
            <summary>
            CGameLeague 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameNetOnlineMessage">
            <summary>
            An ingame mail.
            </summary>
            <remarks>ID: 0x03028000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameNetOnlineMessage.Chunk03028000">
            <summary>
            CGameNetOnlineMessage 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerOfficialScores.Chunk03095000">
            <summary>
            CGamePlayerOfficialScores 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerOfficialScores.Chunk03095001">
            <summary>
            CGamePlayerOfficialScores 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerProfile">
            <remarks>ID: 0x0308C000</remarks>
        </member>
        <member name="M:GBX.NET.Engines.Game.CGamePlayerProfile.AsHeader">
            <summary>
            Gets the node casted to an interface that shows values used in the header.
            </summary>
            <returns>An <see cref="T:GBX.NET.Engines.Game.CGamePlayerProfile.IHeader"/> of the node.</returns>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerScore">
            <remarks>ID: 0x0308D000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerScore.Chunk0308D004">
            <summary>
            CGamePlayerScore 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerScore.Chunk0308D006">
            <summary>
            CGamePlayerScore 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerScore.Chunk0308D008">
            <summary>
            CGamePlayerScore 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerScore.Chunk0308D00F">
            <summary>
            CGamePlayerScore 0x00F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerScore.Chunk0308D010">
            <summary>
            CGamePlayerScore 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerScore.Chunk0308D011">
            <summary>
            CGamePlayerScore 0x011 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGamePlayerScore.Chunk0308D012">
            <summary>
            CGamePlayerScore 0x012 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameUserFileList">
            <remarks>ID: 0x031B7000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameUserFileList.Chunk031B7000">
            <summary>
            CGameUserFileList 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Game.CGameUserProfile">
            <summary>
            User profile.
            </summary>
            <remarks>ID: 0x031CC000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLight">
            <remarks>ID: 0x04001000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLight.Chunk04001008">
            <summary>
            GxLight 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLight.Chunk04001009">
            <summary>
            GxLight 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightBall">
            <remarks>ID: 0x04002000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightBall.Chunk04002002">
            <summary>
            GxLightBall 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightBall.Chunk04002006">
            <summary>
            GxLightBall 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightFrustum">
            <remarks>ID: 0x0400A000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightFrustum.Chunk0400A004">
            <summary>
            GxLightFrustum 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightFrustum.Chunk0400A006">
            <summary>
            GxLightFrustum 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightNotAmbient">
            <remarks>ID: 0x04006000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightPoint">
            <remarks>ID: 0x04003000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightPoint.Chunk04003003">
            <summary>
            GxLightPoint 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightPoint.Chunk04003004">
            <summary>
            GxLightPoint 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightSpot">
            <remarks>ID: 0x0400B000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightSpot.Chunk0400B001">
            <summary>
            GxLightSpot 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Graphic.GxLightSpot.Chunk0400B002">
            <summary>
            GxLightSpot 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsItem">
            <remarks>ID: 0x06003000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsItem.Chunk06003001">
            <summary>
            CHmsItem 0x001 chunk (solid)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsItem.Chunk06003010">
            <summary>
            CHmsItem 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsItem.Chunk06003011">
            <summary>
            CHmsItem 0x011 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsLightMapCache">
            <summary>
            Lightmap cache.
            </summary>
            <remarks>ID: 0x06022000</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.Quality">
            <summary>
            Quality of the calculated shadows.
            </summary>
            <remarks>Exact name of this member is m_Quality.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.Collection">
            <remarks>Exact name of this member is m_Id_IdCollection.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.Decoration">
            <remarks>Exact name of this member is m_Id_IdDecoration.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.Version">
            <remarks>Exact name of this member is m_Version.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.Decal2d">
            <remarks>Exact name of this member is cDecal2d.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.Decal3d">
            <remarks>Exact name of this member is cDecal3d.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.QualityVer">
            <remarks>Exact name of this member is m_QualityVer.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.SortMode">
            <remarks>Exact name of this member is m_SortMode.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.AllocMode">
            <remarks>Exact name of this member is m_AllocMode.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.CompressMode">
            <remarks>Exact name of this member is m_CompressMode.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.Bump">
            <remarks>Exact name of this member is m_Bump.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.SpriteOriginYWasWronglyTop">
            <remarks>Exact name of this member is m_SpriteOriginY_WasWronglyTop.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.GpuPlatform">
            <remarks>Exact name of this member is m_GpuPlatform.</remarks>
        </member>
        <member name="P:GBX.NET.Engines.Hms.CHmsLightMapCache.AllocatedTexelByMeter">
            <remarks>Exact name of this member is m_AllocatedTexelByMeter.</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsLightMapCache.Chunk0602200B">
            <summary>
            CHmsLightMapCache 0x00B skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsLightMapCache.Chunk0602200F">
            <summary>
            CHmsLightMapCache 0x00F skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsLightMapCache.Chunk06022013">
            <summary>
            CHmsLightMapCache 0x013 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsLightMapCache.Chunk06022015">
            <summary>
            CHmsLightMapCache 0x015 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsLightMapCache.Chunk06022016">
            <summary>
            CHmsLightMapCache 0x016 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsLightMapCache.Chunk06022017">
            <summary>
            CHmsLightMapCache 0x017 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsLightMapCache.Chunk06022018">
            <summary>
            CHmsLightMapCache 0x018 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsLightMapCache.Chunk06022019">
            <summary>
            CHmsLightMapCache 0x019 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsLightMapCache.Chunk0602201A">
            <summary>
            CHmsLightMapCache 0x01A skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsSoundSource">
            <remarks>ID: 0x0600D000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsSoundSource.Chunk0600D000">
            <summary>
            CHmsSoundSource 0x000 chunk (AudioSound)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsSoundSource.Chunk0600D002">
            <summary>
            CHmsSoundSource 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsSoundSource.Chunk0600D003">
            <summary>
            CHmsSoundSource 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsSoundSource.Chunk0600D004">
            <summary>
            CHmsSoundSource 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Hms.CHmsSoundSource.Chunk0600D005">
            <summary>
            CHmsSoundSource 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Input.CInputBindingsConfig">
            <summary>
            Input bindings configuration.
            </summary>
            <remarks>ID: 0x13006000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Input.CInputBindingsConfig.Chunk13006000">
            <summary>
            CInputBindingsConfig 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Input.CInputBindingsConfig.Chunk13006001">
            <summary>
            CInputBindingsConfig 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Input.CInputReplay">
            <remarks>ID: 0x1300D000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Input.CInputReplay.Chunk1300D000">
            <summary>
            CInputReplay 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotion">
            <remarks>ID: 0x08001000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotion.Chunk08001000">
            <summary>
            CMotion 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionCmdBase">
            <remarks>ID: 0x08029000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionCmdBase.Chunk08029002">
            <summary>
            CMotionCmdBase 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionDayTime">
            <remarks>ID: 0x08055000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionDayTime.Chunk08055000">
            <summary>
            CMotionDayTime 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionEmitterLeaves.Chunk0804C001">
            <summary>
            CMotionEmitterLeaves 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionPlayer">
            <remarks>ID: 0x08034000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionPlayer.Chunk08034004">
            <summary>
            CMotionPlayer 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotions">
            <remarks>ID: 0x08028000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotions.Chunk08028001">
            <summary>
            CMotions 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionShader">
            <remarks>ID: 0x0802B000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionShader.Chunk0802B000">
            <summary>
            CMotionShader 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionTrack">
            <remarks>ID: 0x08033000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Motion.CMotionWeather">
            <remarks>ID: 0x08054000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.MwFoundations.CMwCmd">
            <remarks>ID: 0x01005000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.MwFoundations.CMwCmdContainer">
            <remarks>ID: 0x01093000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.MwFoundations.CMwNod">
            <summary>
            The base of every existing node.
            </summary>
            <remarks>ID: 0x01001000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.MwFoundations.CMwRefBuffer.Chunk01026000">
            <summary>
            CMwRefBuffer 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.MwFoundations.CMwRefBuffer.Chunk01026001">
            <summary>
            CMwRefBuffer 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlug">
            <remarks>ID: 0x0902B000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugAnimLocSimple">
            <remarks>ID: 0x090F8000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugAnimLocSimple.Chunk090F8000">
            <summary>
            CPlugAnimLocSimple 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap">
            <summary>
            A texture.
            </summary>
            <remarks>ID: 0x09011000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011015">
            <summary>
            CPlugBitmap 0x015 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011017">
            <summary>
            CPlugBitmap 0x017 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011018">
            <summary>
            CPlugBitmap 0x018 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011019">
            <summary>
            CPlugBitmap 0x019 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk0901101B">
            <summary>
            CPlugBitmap 0x01B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk0901101C">
            <summary>
            CPlugBitmap 0x01C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk0901101D">
            <summary>
            CPlugBitmap 0x01D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk0901101E">
            <summary>
            CPlugBitmap 0x01E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk0901101F">
            <summary>
            CPlugBitmap 0x01F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011020">
            <summary>
            CPlugBitmap 0x020 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011022">
            <summary>
            CPlugBitmap 0x022 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011023">
            <summary>
            CPlugBitmap 0x023 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011024">
            <summary>
            CPlugBitmap 0x024 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011025">
            <summary>
            CPlugBitmap 0x025 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011028">
            <summary>
            CPlugBitmap 0x028 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk0901102A">
            <summary>
            CPlugBitmap 0x02A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk0901102B">
            <summary>
            CPlugBitmap 0x02B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk0901102C">
            <summary>
            CPlugBitmap 0x02C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk0901102D">
            <summary>
            CPlugBitmap 0x02D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011030">
            <summary>
            CPlugBitmap 0x030 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmap.Chunk09011032">
            <summary>
            CPlugBitmap 0x032 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapAddress">
            <summary>
            Bitmap address.
            </summary>
            <remarks>ID: 0x09047000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapAddress.Chunk09047002">
            <summary>
            CPlugBitmapAddress 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapAddress.Chunk09047005">
            <summary>
            CPlugBitmapAddress 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapAddress.Chunk09047007">
            <summary>
            CPlugBitmapAddress 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapAddress.Chunk09047008">
            <summary>
            CPlugBitmapAddress 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapAddress.Chunk09047009">
            <summary>
            CPlugBitmapAddress 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapApply">
            <remarks>ID: 0x09012000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapApply.Chunk090120003">
            <summary>
            CPlugBitmapApply 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapApply.Chunk09012004">
            <summary>
            CPlugBitmapApply 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRender.Chunk09086003">
            <summary>
            CPlugBitmapRender 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRender.Chunk0908600A">
            <summary>
            CPlugBitmapRender 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRender.Chunk0908600B">
            <summary>
            CPlugBitmapRender 0x00B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRender.Chunk0908600C">
            <summary>
            CPlugBitmapRender 0x00C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRender.Chunk0908600D">
            <summary>
            CPlugBitmapRender 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRender.Chunk0908600E">
            <summary>
            CPlugBitmapRender 0x00E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRenderCubeMap.Chunk09088001">
            <summary>
            CPlugBitmapRenderCubeMap 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRenderCubeMap.Chunk09088002">
            <summary>
            CPlugBitmapRenderCubeMap 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRenderHemisphere.Chunk09058001">
            <summary>
            CPlugBitmapRenderHemisphere 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRenderLightFromMap.Chunk09021001">
            <summary>
            CPlugBitmapRenderLightFromMap 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRenderLightOcc.Chunk0909F000">
            <summary>
            CPlugBitmapRenderLightOcc 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapRenderSub.Chunk09091000">
            <summary>
            CPlugBitmapRenderSub 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapSampler">
            <summary>
            Bitmap sampler.
            </summary>
            <remarks>ID: 0x0907E000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapSampler.Chunk0907E002">
            <summary>
            CPlugBitmapSampler 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapSampler.Chunk0907E005">
            <summary>
            CPlugBitmapSampler 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapSampler.Chunk0907E006">
            <summary>
            CPlugBitmapSampler 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugBitmapSampler.Chunk0907E008">
            <summary>
            CPlugBitmapSampler 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCamControlModel">
            <remarks>ID: 0x0910C000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCamControlModel.Chunk0910C000">
            <summary>
            CPlugCamControlModel 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCamShakeModel">
            <remarks>ID: 0x0910B000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCamShakeModel.Chunk0910B000">
            <summary>
            CPlugCamShakeModel 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCloudsParam">
            <remarks>ID: 0x09182000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCloudsParam.Chunk09182001">
            <summary>
            CPlugCloudsParam 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCloudsParam.Chunk09182002">
            <summary>
            CPlugCloudsParam 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCrystal">
            <summary>
            A custom mesh or model with materials.
            </summary>
            <remarks>ID: 0x09003000</remarks>
        </member>
        <member name="M:GBX.NET.Engines.Plug.CPlugCrystal.ExportToObj(System.IO.Stream,System.IO.Stream,System.Nullable{System.Int32},System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Exports the crystal to .obj file.
            </summary>
            <param name="objStream">Stream to write OBJ content into.</param>
            <param name="mtlStream">Stream to write MTL content into.</param>
            <param name="mergeVerticesDigitThreshold">If set, overlapping vertices (usually between the mesh groups) will be merged. 3 or 4 give the best accuracy.</param>
            <param name="gameDataFolderPath">Folder for the Material.Gbx, Texture.Gbx, and .dds lookup.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="leaveOpen">If to keep the streams open.</param>
        </member>
        <member name="M:GBX.NET.Engines.Plug.CPlugCrystal.ExportToObj(System.String,System.Nullable{System.Int32},System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Exports the crystal to .obj file.
            </summary>
            <param name="fileNameWithoutExtension">File name to write OBJ and MTL content into (separately). The files will be automatically suffixed with ".obj" and ".mtl".</param>
            <param name="mergeVerticesDigitThreshold">If set, overlapping vertices (usually between the mesh groups) will be merged. 3 or 4 give the best accuracy.</param>
            <param name="gameDataFolderPath">Folder for the Material.Gbx, Texture.Gbx, and .dds lookup.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="leaveOpen">If to keep the streams open.</param>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCrystal.Chunk09003000">
            <summary>
            CPlugCrystal 0x000 chunk (one layer only)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCrystal.Chunk09003003">
            <summary>
            CPlugCrystal 0x003 chunk (materials)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCrystal.Chunk09003004">
            <summary>
            CPlugCrystal 0x004 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCrystal.Chunk09003005">
            <summary>
            CPlugCrystal 0x005 chunk (layers)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCrystal.Chunk09003006">
            <summary>
            CPlugCrystal 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugCrystal.Chunk09003007">
            <summary>
            CPlugCrystal 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugDataTape">
            <summary>
            Data tape.
            </summary>
            <remarks>ID: 0x090CE000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugDataTape.Chunk090CE001">
            <summary>
            CPlugDataTape 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugEntRecordData">
            <summary>
            Entity data in a timeline.
            </summary>
            <remarks>ID: 0x0911F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugEntRecordData.Chunk0911F000">
            <summary>
            CPlugEntRecordData 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugFile">
            <summary>
            A file.
            </summary>
            <remarks>ID: 0x09020000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugFileGen">
            <remarks>ID: 0x0902F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugFileImg">
            <remarks>ID: 0x09025000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugFileSnd">
            <remarks>ID: 0x09030000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugGameSkin">
            <remarks>ID: 0x090F4000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugGameSkin.Chunk090F4000">
            <summary>
            CPlugGameSkin 0x000 header chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugGameSkin.Chunk090F4003">
            <summary>
            CPlugGameSkin 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugGameSkin.Chunk090F4004">
            <summary>
            CPlugGameSkin 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugIndexBuffer">
            <remarks>ID: 0x09057000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugIndexBuffer.Chunk09057000">
            <summary>
            CPlugIndexBuffer 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugIndexBuffer.Chunk09057001">
            <summary>
            CPlugIndexBuffer 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugLight">
            <remarks>ID: 0x0901D000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugLight.Chunk0901D000">
            <summary>
            CPlugLight 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugLight.Chunk0901D002">
            <summary>
            CPlugLight 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugLightUserModel">
            <remarks>ID: 0x090F9000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugLightUserModel.Chunk090F9000">
            <summary>
            CPlugLightUserModel 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial">
            <remarks>ID: 0x09079000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk09079001">
            <summary>
            CPlugMaterial 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk09079002">
            <summary>
            CPlugMaterial 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk09079004">
            <summary>
            CPlugMaterial 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk09079007">
            <summary>
            CPlugMaterial 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk09079009">
            <summary>
            CPlugMaterial 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk0907900A">
            <summary>
            CPlugMaterial 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk0907900D">
            <summary>
            CPlugMaterial 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk0907900E">
            <summary>
            CPlugMaterial 0x00E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk0907900F">
            <summary>
            CPlugMaterial 0x00F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk09079010">
            <summary>
            CPlugMaterial 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk09079011">
            <summary>
            CPlugMaterial 0x011 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk09079012">
            <summary>
            CPlugMaterial 0x012 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk09079013">
            <summary>
            CPlugMaterial 0x013 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterial.Chunk09079014">
            <summary>
            CPlugMaterial 0x014 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom">
            <summary>
            Custom material.
            </summary>
            <remarks>ID: 0x0903A000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A004">
            <summary>
            CPlugMaterialCustom 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A006">
            <summary>
            CPlugMaterialCustom 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A00A">
            <summary>
            CPlugMaterialCustom 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A00B">
            <summary>
            CPlugMaterialCustom 0x00B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A00C">
            <summary>
            CPlugMaterialCustom 0x00C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A00D">
            <summary>
            CPlugMaterialCustom 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A00F">
            <summary>
            CPlugMaterialCustom 0x00F skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A010">
            <summary>
            CPlugMaterialCustom 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A011">
            <summary>
            CPlugMaterialCustom 0x011 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A012">
            <summary>
            CPlugMaterialCustom 0x012 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A013">
            <summary>
            CPlugMaterialCustom 0x013 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A014">
            <summary>
            CPlugMaterialCustom 0x014 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialCustom.Chunk0903A015">
            <summary>
            CPlugMaterialCustom 0x015 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialUserInst">
            <summary>
            Material referenced in user creation.
            </summary>
            <remarks>ID: 0x090FD000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialUserInst.Chunk090FD000">
            <summary>
            CPlugMaterialUserInst 0x000 chunk
            </summary>
        </member>
        <member name="P:GBX.NET.Engines.Plug.CPlugMaterialUserInst.Chunk090FD000.Version">
            <summary>
            Version 10: TM®, version 9: ManiaPlanet 2019.11.19.1850
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialUserInst.Chunk090FD001">
            <summary>
            CPlugMaterialUserInst 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMaterialUserInst.Chunk090FD002">
            <summary>
            CPlugMaterialUserInst 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMediaClipList">
            <remarks>ID: 0x09189000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugMediaClipList.Chunk09189000">
            <summary>
            CPlugMediaClipList 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugParticleEmitterModel">
            <remarks>ID: 0x090B3000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugPlacementPatch">
            <remarks>ID: 0x09160000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugRoadChunk">
            <remarks>ID: 0x09128000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugRoadChunk.Chunk09128000">
            <summary>
            CPlugRoadChunk 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader">
            <summary>
            Shader.
            </summary>
            <remarks>ID: 0x09002000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk09002007">
            <summary>
            CPlugShader 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk0900200E">
            <summary>
            CPlugShader 0x00E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk09002010">
            <summary>
            CPlugShader 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk09002014">
            <summary>
            CPlugShader 0x014 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk09002015">
            <summary>
            CPlugShader 0x015 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk09002016">
            <summary>
            CPlugShader 0x016 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk09002018">
            <summary>
            CPlugShader 0x018 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk0900201B">
            <summary>
            CPlugShader 0x01B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk0900201C">
            <summary>
            CPlugShader 0x01C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk0900201D">
            <summary>
            CPlugShader 0x01D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk0900201E">
            <summary>
            CPlugShader 0x01E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk0900201F">
            <summary>
            CPlugShader 0x01F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShader.Chunk09002020">
            <summary>
            CPlugShader 0x020 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply">
            <remarks>ID: 0x09026000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply.Chunk09026001">
            <summary>
            CPlugShaderApply 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply.Chunk09026002">
            <summary>
            CPlugShaderApply 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply.Chunk09026004">
            <summary>
            CPlugShaderApply 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply.Chunk09026006">
            <summary>
            CPlugShaderApply 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply.Chunk09026008">
            <summary>
            CPlugShaderApply 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply.Chunk0902600A">
            <summary>
            CPlugShaderApply 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply.Chunk0902600C">
            <summary>
            CPlugShaderApply 0x00C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply.Chunk09026010">
            <summary>
            CPlugShaderApply 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply.Chunk09026011">
            <summary>
            CPlugShaderApply 0x011 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderApply.Chunk09063002">
            <summary>
            CPlugShaderApply 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderGeneric">
            <remarks>ID: 0x09004000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderGeneric.Chunk09004001">
            <summary>
            CPlugShaderGeneric 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderGeneric.Chunk09004003">
            <summary>
            CPlugShaderGeneric 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderPass.Chunk09067006">
            <summary>
            CPlugShaderPass 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderPass.Chunk09067007">
            <summary>
            CPlugShaderPass 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderPass.Chunk09067008">
            <summary>
            CPlugShaderPass 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugShaderPass.Chunk0906700A">
            <summary>
            CPlugShaderPass 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSkel">
            <remarks>ID: 0x090BA000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSkel.Chunk090BA000">
            <summary>
            CPlugSkel 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid">
            <summary>
            An official mesh or model.
            </summary>
            <remarks>ID: 0x09005000</remarks>
        </member>
        <member name="M:GBX.NET.Engines.Plug.CPlugSolid.ExportToObj(System.String,System.String,System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Exports the solid to .obj file.
            </summary>
            <param name="fileNameWithoutExtension">File name to write OBJ and MTL content into (separately). The files will be automatically suffixed with ".obj" and ".mtl".</param>
            <param name="gameDataFolderPath">Folder for the Material.Gbx, Texture.Gbx, and .dds lookup.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="leaveOpen">If to keep the streams open.</param>
            <param name="corruptedMaterials">If to use a different way to handle corrupted material files (via header reference table, to avoid body parse). Exists due to TMTurbo problems. Can give much less accurate results.</param>
        </member>
        <member name="M:GBX.NET.Engines.Plug.CPlugSolid.ExportToObj(System.IO.Stream,System.IO.Stream,System.String,System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Exports the solid to .obj file.
            </summary>
            <param name="objStream">Stream to write OBJ content into.</param>
            <param name="mtlStream">Stream to write MTL content into.</param>
            <param name="gameDataFolderPath">Folder for the Material.Gbx, Texture.Gbx, and .dds lookup.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="leaveOpen">If to keep the streams open.</param>
            <param name="corruptedMaterials">If to use a different way to handle corrupted material files (via header reference table, to avoid body parse). Exists due to TMTurbo problems. Can give much less accurate results.</param>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk09005000">
            <summary>
            CPlugSolid 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk09005006">
            <summary>
            CPlugSolid 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk09005007">
            <summary>
            CPlugSolid 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk0900500B">
            <summary>
            CPlugSolid 0x00B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk0900500C">
            <summary>
            CPlugSolid 0x00C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk0900500D">
            <summary>
            CPlugSolid 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk0900500E">
            <summary>
            CPlugSolid 0x00E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk0900500F">
            <summary>
            CPlugSolid 0x00F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk09005010">
            <summary>
            CPlugSolid 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk09005011">
            <summary>
            CPlugSolid 0x011 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk09005012">
            <summary>
            CPlugSolid 0x012 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk09005017">
            <summary>
            CPlugSolid 0x017 chunk (SolidPreLightGen)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk09005019">
            <summary>
            CPlugSolid 0x019 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid.Chunk0900501A">
            <summary>
            CPlugSolid 0x01A chunk (lod normal map)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid2Model">
            <remarks>ID: 0x090BB000</remarks>
        </member>
        <member name="M:GBX.NET.Engines.Plug.CPlugSolid2Model.ExportToObj(System.String,System.String,System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Exports the solid to .obj file.
            </summary>
            <param name="fileNameWithoutExtension">File name to write OBJ and MTL content into (separately). The files will be automatically suffixed with ".obj" and ".mtl".</param>
            <param name="gameDataFolderPath">Folder for the Material.Gbx, Texture.Gbx, and .dds lookup.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="leaveOpen">If to keep the streams open.</param>
            <param name="corruptedMaterials">If to use a different way to handle corrupted material files (via header reference table, to avoid body parse). Exists due to TMTurbo problems. Can give much less accurate results.</param>
        </member>
        <member name="M:GBX.NET.Engines.Plug.CPlugSolid2Model.ExportToObj(System.IO.Stream,System.IO.Stream,System.String,System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Exports the solid to .obj file.
            </summary>
            <param name="objStream">Stream to write OBJ content into.</param>
            <param name="mtlStream">Stream to write MTL content into.</param>
            <param name="gameDataFolderPath">Folder for the Material.Gbx, Texture.Gbx, and .dds lookup.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="leaveOpen">If to keep the streams open.</param>
            <param name="corruptedMaterials">If to use a different way to handle corrupted material files (via header reference table, to avoid body parse). Exists due to TMTurbo problems. Can give much less accurate results.</param>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSolid2Model.Chunk090BB000">
            <summary>
            CPlugSolid2Model 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSpriteParam.Chunk090AC000">
            <summary>
            CPlugSpriteParam 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSpriteParam.Chunk090AC001">
            <summary>
            CPlugSpriteParam 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugStaticObjectModel">
            <remarks>ID: 0x09159000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSurface">
            <remarks>ID: 0x0900C000</remarks>
        </member>
        <member name="M:GBX.NET.Engines.Plug.CPlugSurface.ExportToObj(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Exports the surface to .obj file.
            </summary>
            <param name="fileNameWithoutExtension">File name to write OBJ content into. It will be automatically suffixed with ".obj".</param>
            <param name="encoding">Encoding to use.</param>
            <param name="leaveOpen">If to keep the streams open.</param>
        </member>
        <member name="M:GBX.NET.Engines.Plug.CPlugSurface.ExportToObj(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Exports the surface to .obj file.
            </summary>
            <param name="objStream">Stream to write OBJ content into.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="leaveOpen">If to keep the streams open.</param>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSurface.Chunk0900C000">
            <summary>
            CPlugSurface 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSurface.Chunk0900C001">
            <summary>
            CPlugSurface 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSurface.Chunk0900C003">
            <summary>
            CPlugSurface 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSurfaceGeom">
            <remarks>ID: 0x0900F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSurfaceGeom.Chunk0900F002">
            <summary>
            CPlugSurfaceGeom 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSurfaceGeom.Chunk0900F004">
            <summary>
            CPlugSurfaceGeom 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugSurfaceGeom.Chunk0900D002">
            <summary>
            CPlugSurfaceGeom 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTree">
            <remarks>ID: 0x0904F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTree.Chunk0904F006">
            <summary>
            CPlugTree 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTree.Chunk0904F00C">
            <summary>
            CPlugTree 0x00C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTree.Chunk0904F00D">
            <summary>
            CPlugTree 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTree.Chunk0904F011">
            <summary>
            CPlugTree 0x011 chunk (FuncTree)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTree.Chunk0904F015">
            <summary>
            CPlugTree 0x015 chunk (translation)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTree.Chunk0904F016">
            <summary>
            CPlugTree 0x016 chunk (properties)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTree.Chunk0904F018">
            <summary>
            CPlugTree 0x018 chunk (translation)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTree.Chunk0904F019">
            <summary>
            CPlugTree 0x019 chunk (translation)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTree.Chunk0904F01A">
            <summary>
            CPlugTree 0x01A chunk (translation)
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTreeGenerator">
            <remarks>ID: 0x09051000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTreeGenerator.Chunk09051000">
            <summary>
            CPlugTreeGenerator 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTreeLight">
            <remarks>ID: 0x09062000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTreeLight.Chunk09062004">
            <summary>
            CPlugTreeLight 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTreeVisualMip">
            <summary>
            Level of detail for individual <see cref="T:GBX.NET.Engines.Plug.CPlugTree"/>s.
            </summary>
            <remarks>ID: 0x09015000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugTreeVisualMip.Chunk09015002">
            <summary>
            CPlugTreeVisualMip 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraInternalModel.Chunk090F7000">
            <summary>
            CPlugVehicleCameraInternalModel 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraRace2Model">
            <remarks>ID: 0x090F6000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraRace2Model.Chunk090F6000">
            <summary>
            CPlugVehicleCameraRace2Model 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraRace2Model.Chunk090F6001">
            <summary>
            CPlugVehicleCameraRace2Model 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraRace2Model.Chunk090F6002">
            <summary>
            CPlugVehicleCameraRace2Model 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraRace3Model">
            <remarks>ID: 0x090EF000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraRace3Model.Chunk090EF001">
            <summary>
            CPlugVehicleCameraRace3Model 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraRace3Model.Chunk090EF002">
            <summary>
            CPlugVehicleCameraRace3Model 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraRace3Model.Chunk090EF003">
            <summary>
            CPlugVehicleCameraRace3Model 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraRace3Model.Chunk090EF004">
            <summary>
            CPlugVehicleCameraRace3Model 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCameraRace3Model.Chunk090EF005">
            <summary>
            CPlugVehicleCameraRace3Model 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyShape.Chunk0910E000">
            <summary>
            CPlugVehicleCarPhyShape 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED000">
            <summary>
            CSceneVehicleCarTuning 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED001">
            <summary>
            CSceneVehicleCarTuning 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED002">
            <summary>
            CSceneVehicleCarTuning 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED004">
            <summary>
            CSceneVehicleCarTuning 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED005">
            <summary>
            CSceneVehicleCarTuning 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED007">
            <summary>
            CSceneVehicleCarTuning 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED009">
            <summary>
            CSceneVehicleCarTuning 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED00B">
            <summary>
            CSceneVehicleCarTuning 0x00B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED00D">
            <summary>
            CSceneVehicleCarTuning 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED00E">
            <summary>
            CSceneVehicleCarTuning 0x00E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED010">
            <summary>
            CSceneVehicleCarTuning 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED013">
            <summary>
            CSceneVehicleCarTuning 0x013 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED014">
            <summary>
            CSceneVehicleCarTuning 0x014 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED016">
            <summary>
            CSceneVehicleCarTuning 0x016 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED017">
            <summary>
            CSceneVehicleCarTuning 0x017 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED018">
            <summary>
            CSceneVehicleCarTuning 0x018 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED019">
            <summary>
            CSceneVehicleCarTuning 0x019 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED01A">
            <summary>
            CSceneVehicleCarTuning 0x01A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED01B">
            <summary>
            CSceneVehicleCarTuning 0x01B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED01D">
            <summary>
            CSceneVehicleCarTuning 0x01D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED01E">
            <summary>
            CSceneVehicleCarTuning 0x01E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED01F">
            <summary>
            CSceneVehicleCarTuning 0x01F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED020">
            <summary>
            CSceneVehicleCarTuning 0x020 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED023">
            <summary>
            CSceneVehicleCarTuning 0x023 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED024">
            <summary>
            CSceneVehicleCarTuning 0x024 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED026">
            <summary>
            CSceneVehicleCarTuning 0x026 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED027">
            <summary>
            CSceneVehicleCarTuning 0x027 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED028">
            <summary>
            CSceneVehicleCarTuning 0x028 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED029">
            <summary>
            CSceneVehicleCarTuning 0x029 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED02A">
            <summary>
            CSceneVehicleCarTuning 0x02A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED02B">
            <summary>
            CSceneVehicleCarTuning 0x02B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED02C">
            <summary>
            CSceneVehicleCarTuning 0x02C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED02D">
            <summary>
            CSceneVehicleCarTuning 0x02D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED02E">
            <summary>
            CSceneVehicleCarTuning 0x02E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED030">
            <summary>
            CSceneVehicleCarTuning 0x030 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED031">
            <summary>
            CSceneVehicleCarTuning 0x031 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED032">
            <summary>
            CSceneVehicleCarTuning 0x032 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED033">
            <summary>
            CSceneVehicleCarTuning 0x033 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED034">
            <summary>
            CSceneVehicleCarTuning 0x034 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED035">
            <summary>
            CSceneVehicleCarTuning 0x035 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED036">
            <summary>
            CSceneVehicleCarTuning 0x036 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED037">
            <summary>
            CSceneVehicleCarTuning 0x037 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED038">
            <summary>
            CSceneVehicleCarTuning 0x038 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED039">
            <summary>
            CSceneVehicleCarTuning 0x039 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED03A">
            <summary>
            CSceneVehicleCarTuning 0x03A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED03B">
            <summary>
            CSceneVehicleCarTuning 0x03B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED03C">
            <summary>
            CSceneVehicleCarTuning 0x03C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED03D">
            <summary>
            CSceneVehicleCarTuning 0x03D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED03E">
            <summary>
            CSceneVehicleCarTuning 0x03E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED03F">
            <summary>
            CSceneVehicleCarTuning 0x03F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED040">
            <summary>
            CSceneVehicleCarTuning 0x040 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED041">
            <summary>
            CSceneVehicleCarTuning 0x041 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED042">
            <summary>
            CSceneVehicleCarTuning 0x042 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED043">
            <summary>
            CSceneVehicleCarTuning 0x043 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED044">
            <summary>
            CSceneVehicleCarTuning 0x044 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED046">
            <summary>
            CSceneVehicleCarTuning 0x046 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED047">
            <summary>
            CSceneVehicleCarTuning 0x047 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED048">
            <summary>
            CSceneVehicleCarTuning 0x048 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED049">
            <summary>
            CSceneVehicleCarTuning 0x049 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED04D">
            <summary>
            CSceneVehicleCarTuning 0x04D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED04E">
            <summary>
            CSceneVehicleCarTuning 0x04E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED04F">
            <summary>
            CSceneVehicleCarTuning 0x04F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED051">
            <summary>
            CSceneVehicleCarTuning 0x051 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED052">
            <summary>
            CSceneVehicleCarTuning 0x052 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED053">
            <summary>
            CSceneVehicleCarTuning 0x053 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED056">
            <summary>
            CSceneVehicleCarTuning 0x056 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED057">
            <summary>
            CSceneVehicleCarTuning 0x057 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED058">
            <summary>
            CSceneVehicleCarTuning 0x058 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED059">
            <summary>
            CSceneVehicleCarTuning 0x059 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED05A">
            <summary>
            CSceneVehicleCarTuning 0x05A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED05B">
            <summary>
            CSceneVehicleCarTuning 0x05B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED05C">
            <summary>
            CSceneVehicleCarTuning 0x05C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED05D">
            <summary>
            CSceneVehicleCarTuning 0x05D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED05E">
            <summary>
            CSceneVehicleCarTuning 0x05E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED05F">
            <summary>
            CSceneVehicleCarTuning 0x05F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED060">
            <summary>
            CSceneVehicleCarTuning 0x060 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED061">
            <summary>
            CSceneVehicleCarTuning 0x061 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED062">
            <summary>
            CPlugVehicleCarPhyTuning 0x062 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED063">
            <summary>
            CPlugVehicleCarPhyTuning 0x063 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED064">
            <summary>
            CPlugVehicleCarPhyTuning 0x064 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED065">
            <summary>
            CPlugVehicleCarPhyTuning 0x065 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED066">
            <summary>
            CPlugVehicleCarPhyTuning 0x066 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED06A">
            <summary>
            CPlugVehicleCarPhyTuning 0x06A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED06E">
            <summary>
            CPlugVehicleCarPhyTuning 0x06E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED072">
            <summary>
            CPlugVehicleCarPhyTuning 0x072 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED077">
            <summary>
            CPlugVehicleCarPhyTuning 0x077 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED078">
            <summary>
            CPlugVehicleCarPhyTuning 0x078 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED079">
            <summary>
            CPlugVehicleCarPhyTuning 0x079 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED07D">
            <summary>
            CPlugVehicleCarPhyTuning 0x07D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED082">
            <summary>
            CPlugVehicleCarPhyTuning 0x082 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED084">
            <summary>
            CPlugVehicleCarPhyTuning 0x084 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED085">
            <summary>
            CPlugVehicleCarPhyTuning 0x085 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED086">
            <summary>
            CPlugVehicleCarPhyTuning 0x086 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED088">
            <summary>
            CPlugVehicleCarPhyTuning 0x088 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED089">
            <summary>
            CPlugVehicleCarPhyTuning 0x089 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED08A">
            <summary>
            CPlugVehicleCarPhyTuning 0x08A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED08B">
            <summary>
            CPlugVehicleCarPhyTuning 0x08B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED08C">
            <summary>
            CPlugVehicleCarPhyTuning 0x08C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED08D">
            <summary>
            CPlugVehicleCarPhyTuning 0x08D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED08E">
            <summary>
            CPlugVehicleCarPhyTuning 0x08E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED094">
            <summary>
            CPlugVehicleCarPhyTuning 0x094 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED095">
            <summary>
            CPlugVehicleCarPhyTuning 0x095 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED096">
            <summary>
            CPlugVehicleCarPhyTuning 0x096 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED097">
            <summary>
            CPlugVehicleCarPhyTuning 0x097 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED098">
            <summary>
            CPlugVehicleCarPhyTuning 0x098 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED099">
            <summary>
            CPlugVehicleCarPhyTuning 0x099 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED09A">
            <summary>
            CPlugVehicleCarPhyTuning 0x09A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED09B">
            <summary>
            CPlugVehicleCarPhyTuning 0x09B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED09C">
            <summary>
            CPlugVehicleCarPhyTuning 0x09C chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED09D">
            <summary>
            CPlugVehicleCarPhyTuning 0x09D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED09E">
            <summary>
            CPlugVehicleCarPhyTuning 0x09E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleCarPhyTuning.Chunk090ED09F">
            <summary>
            CPlugVehicleCarPhyTuning 0x09F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleGearBox.Chunk09094001">
            <summary>
            CPlugVehicleGearBox 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleMaterial.Chunk090F100F">
            <summary>
            CPlugVehicleMaterial 0x00F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehicleMaterial.Chunk090F1010">
            <summary>
            CPlugVehicleMaterial 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehiclePhyModel.Chunk090EA002">
            <summary>
            CPlugVehiclePhyModel 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehiclePhyModel.Chunk090EA003">
            <summary>
            CPlugVehiclePhyModel 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehiclePhyModel.Chunk090EA008">
            <summary>
            CPlugVehiclePhyModel 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehiclePhyModelCustom">
            <remarks>ID: 0x0911E000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehiclePhyModelCustom.Chunk0911E000">
            <summary>
            CPlugVehiclePhyModelCustom 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehiclePhyTuning.Chunk090EB000">
            <summary>
            CPlugVehiclePhyTuning 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehiclePhyTuning.Chunk090EB001">
            <summary>
            CPlugVehiclePhyTuning 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVehiclePhyTunings.Chunk090EC000">
            <summary>
            CPlugVehiclePhyTunings 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVertexStream">
            <remarks>ID: 0x09056000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVertexStream.Chunk09056000">
            <summary>
            CPlugVertexStream 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual">
            <remarks>ID: 0x09006000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk09006001">
            <summary>
            CPlugVisual 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk09006004">
            <summary>
            CPlugVisual 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk09006005">
            <summary>
            CPlugVisual 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk09006006">
            <summary>
            CPlugVisual 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk09006007">
            <summary>
            CPlugVisual 0x007 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk09006008">
            <summary>
            CPlugVisual 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk09006009">
            <summary>
            CPlugVisual 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk0900600A">
            <summary>
            CPlugVisual 0x00A chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk0900600B">
            <summary>
            CPlugVisual 0x00B chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk0900600D">
            <summary>
            CPlugVisual 0x00D chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk0900600E">
            <summary>
            CPlugVisual 0x00E chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk0900600F">
            <summary>
            CPlugVisual 0x00F chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual.Chunk09006010">
            <summary>
            CPlugVisual 0x010 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual2D">
            <remarks>ID: 0x09006000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual2D.Chunk0904A000">
            <summary>
            CPlugVisual2D 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual3D">
            <remarks>ID: 0x0902C000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual3D.Chunk0902C002">
            <summary>
            CPlugVisual3D 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual3D.Chunk0902C003">
            <summary>
            CPlugVisual3D 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisual3D.Chunk0902C004">
            <summary>
            CPlugVisual3D 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualGrid">
            <remarks>ID: 0x0903B000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualGrid.Chunk0903B000">
            <summary>
            CPlugVisualGrid 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualIndexed">
            <remarks>ID: 0x0906A000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualIndexed.Chunk0906A000">
            <summary>
            CPlugVisualIndexed 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualIndexed.Chunk0906A001">
            <summary>
            CPlugVisualIndexed 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualIndexedLines">
            <remarks>ID: 0x09009000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualIndexedLines.Chunk09009001">
            <summary>
            CPlugVisualIndexedLines 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualIndexedTriangles">
            <remarks>ID: 0x0901E000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualQuads2D">
            <remarks>ID: 0x0904B000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualSprite">
            <remarks>ID: 0x09010000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualSprite.Chunk09010005">
            <summary>
            CPlugVisualSprite 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualSprite.Chunk09010006">
            <summary>
            CPlugVisualSprite 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualSprite.Chunk09010008">
            <summary>
            CPlugVisualSprite 0x008 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Plug.CPlugVisualSprite.Chunk09010009">
            <summary>
            CPlugVisualSprite 0x009 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneConfig">
            <remarks>ID: 0x0A040000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneLayout">
            <remarks>ID: 0x0A003000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneLayout.Chunk0A001003">
            <summary>
            CScene 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneLayout.Chunk0A001004">
            <summary>
            CScene 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneLayout.Chunk0A001005">
            <summary>
            CScene 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneLayout.Chunk0A001006">
            <summary>
            CScene 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneMessageHandler">
            <remarks>ID: 0x0A01F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneMessageHandler.Chunk0A01F000">
            <summary>
            CSceneMessageHandler 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneMessageHandler.Chunk0A01F001">
            <summary>
            CSceneMessageHandler 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneMobil">
            <remarks>ID: 0x0A011000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneMobil.Chunk0A011003">
            <summary>
            CSceneMobil 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneMobil.Chunk0A011004">
            <summary>
            CSceneMobil 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneMobil.Chunk0A011005">
            <summary>
            CSceneMobil 0x005 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneMobil.Chunk0A011006">
            <summary>
            CSceneMobil 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneObject">
            <remarks>ID: 0x0A005000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneObject.Chunk0A005001">
            <summary>
            CSceneObject 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneObject.Chunk0A005002">
            <summary>
            CSceneObject 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneObject.Chunk0A005003">
            <summary>
            CSceneObject 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneObject.Chunk0A005004">
            <summary>
            CSceneObject 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneObjectLink.Chunk0A014001">
            <summary>
            CSceneObjectLink 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneObjectLink.Chunk0A00F001">
            <summary>
            CSceneObjectLink 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneObjectLink.Chunk0A014002">
            <summary>
            CSceneObjectLink 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneObjectLink.Chunk0A00F002">
            <summary>
            CSceneObjectLink 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneObjectLink.Chunk0A014003">
            <summary>
            CSceneObjectLink 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CScenePoc">
            <remarks>ID: 0x0A009000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CScenePoc.Chunk0A009000">
            <summary>
            CScenePoc 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneSoundSource">
            <remarks>ID: 0x0A00E000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneSoundSource.Chunk0A00E000">
            <summary>
            CSceneSoundSource 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneToy">
            <remarks>ID: 0x0A012000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneVehicleCarMarksSamples">
            <remarks>ID: 0x0A083000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneVehicleCarMarksSamples.Chunk0A083002">
            <summary>
            CSceneVehicleCarMarksSamples 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneVehicleCarMarksSamples.Chunk0A083003">
            <summary>
            CSceneVehicleCarMarksSamples 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneVehicleCarMarksSamples.Chunk0A083004">
            <summary>
            CSceneVehicleCarMarksSamples 0x004 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Scene.CSceneVehicleCarMarksSamples.Chunk0A083006">
            <summary>
            CSceneVehicleCarMarksSamples 0x006 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Script.CScriptTraitsMetadata">
            <remarks>ID: 0x11002000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.Script.CScriptTraitsMetadata.EScriptType">
            <summary>
            Type of the variable supported by ManiaScript.
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder)">
            <summary>
            Declares a metadata variable as <c>Struct</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="valueBuilder">A value of Struct builder.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait)">
            <summary>
            Declares a metadata variable as <c>Struct</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">A value of Struct.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IEnumerable{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait})">
            <summary>
            Declares a metadata array variable as <c>Struct[Void]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any enumerable of Struct. It is always reconstructed into a new list.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IEnumerable{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder})">
            <summary>
            Declares a metadata array variable as <c>Struct[Void]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any enumerable of Struct builder. It is always reconstructed into a new list.</param>
        </member>
        <member name="T:GBX.NET.Engines.Script.CScriptTraitsMetadata.Chunk11002000">
            <summary>
            CScriptTraitsMetadata 0x000 chunk
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Chunk11002000.ReadType(GBX.NET.GameBoxReader)">
            <summary>
            CScriptTraitsGenericContainer::ChunkType
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Chunk11002000.ReadContents(GBX.NET.GameBoxReader,GBX.NET.Engines.Script.CScriptTraitsMetadata.IScriptType,System.Boolean)">
            <summary>
            CScriptTraitsGenericContainer::ChunkContents
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptArrayTrait">
            <summary>
            A simplified variant of <c>ScriptTrait&lt;IList&lt;ScriptTrait&gt;&gt;</c>
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptDictionaryTrait">
            <summary>
            A simplified variant of <c>ScriptTrait&lt;IDictionary&lt;ScriptTrait, ScriptTrait&gt;&gt;</c>
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait">
            <summary>
            A simplified variant of <c>ScriptTrait&lt;IDictionary&lt;string, ScriptTrait&gt;&gt;</c>
            </summary>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Boolean)">
            <summary>
            Declares a metadata variable as <c>Boolean</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">A value of <see href="bool"/>.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Declares a metadata array variable as <c>Boolean[Void]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any enumerable of <see href="bool"/>. It is always reconstructed into a new list.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Boolean,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Boolean]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="bool"/> and value of Struct. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Boolean,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Boolean]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="bool"/> and value of Struct builder. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait,System.Boolean})">
            <summary>
            Declares a metadata associative array variable as <c>Boolean[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct and value of <see href="bool"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder,System.Boolean})">
            <summary>
            Declares a metadata associative array variable as <c>Boolean[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct builder and value of <see href="bool"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Int32)">
            <summary>
            Declares a metadata variable as <c>Integer</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">A value of <see href="int"/>.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Declares a metadata array variable as <c>Integer[Void]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any enumerable of <see href="int"/>. It is always reconstructed into a new list.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Int32,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Integer]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="int"/> and value of Struct. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Int32,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Integer]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="int"/> and value of Struct builder. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait,System.Int32})">
            <summary>
            Declares a metadata associative array variable as <c>Integer[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct and value of <see href="int"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder,System.Int32})">
            <summary>
            Declares a metadata associative array variable as <c>Integer[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct builder and value of <see href="int"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Single)">
            <summary>
            Declares a metadata variable as <c>Real</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">A value of <see href="float"/>.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Declares a metadata array variable as <c>Real[Void]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any enumerable of <see href="float"/>. It is always reconstructed into a new list.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Single,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Real]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="float"/> and value of Struct. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Single,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Real]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="float"/> and value of Struct builder. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait,System.Single})">
            <summary>
            Declares a metadata associative array variable as <c>Real[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct and value of <see href="float"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder,System.Single})">
            <summary>
            Declares a metadata associative array variable as <c>Real[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct builder and value of <see href="float"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.String)">
            <summary>
            Declares a metadata variable as <c>Text</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">A value of <see href="string"/>.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Declares a metadata array variable as <c>Text[Void]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any enumerable of <see href="string"/>. It is always reconstructed into a new list.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.String,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Text]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="string"/> and value of Struct. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.String,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Text]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="string"/> and value of Struct builder. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait,System.String})">
            <summary>
            Declares a metadata associative array variable as <c>Text[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct and value of <see href="string"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder,System.String})">
            <summary>
            Declares a metadata associative array variable as <c>Text[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct builder and value of <see href="string"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,GBX.NET.Vec2)">
            <summary>
            Declares a metadata variable as <c>Vec2</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">A value of <see href="Vec2"/>.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IEnumerable{GBX.NET.Vec2})">
            <summary>
            Declares a metadata array variable as <c>Vec2[Void]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any enumerable of <see href="Vec2"/>. It is always reconstructed into a new list.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec2,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Vec2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec2"/> and value of Struct. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec2,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Vec2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec2"/> and value of Struct builder. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait,GBX.NET.Vec2})">
            <summary>
            Declares a metadata associative array variable as <c>Vec2[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct and value of <see href="Vec2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder,GBX.NET.Vec2})">
            <summary>
            Declares a metadata associative array variable as <c>Vec2[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct builder and value of <see href="Vec2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,GBX.NET.Vec3)">
            <summary>
            Declares a metadata variable as <c>Vec3</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">A value of <see href="Vec3"/>.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IEnumerable{GBX.NET.Vec3})">
            <summary>
            Declares a metadata array variable as <c>Vec3[Void]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any enumerable of <see href="Vec3"/>. It is always reconstructed into a new list.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec3,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Vec3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec3"/> and value of Struct. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec3,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Vec3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec3"/> and value of Struct builder. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait,GBX.NET.Vec3})">
            <summary>
            Declares a metadata associative array variable as <c>Vec3[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct and value of <see href="Vec3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder,GBX.NET.Vec3})">
            <summary>
            Declares a metadata associative array variable as <c>Vec3[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct builder and value of <see href="Vec3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,GBX.NET.Int3)">
            <summary>
            Declares a metadata variable as <c>Int3</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">A value of <see href="Int3"/>.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IEnumerable{GBX.NET.Int3})">
            <summary>
            Declares a metadata array variable as <c>Int3[Void]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any enumerable of <see href="Int3"/>. It is always reconstructed into a new list.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int3,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Int3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int3"/> and value of Struct. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int3,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Int3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int3"/> and value of Struct builder. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait,GBX.NET.Int3})">
            <summary>
            Declares a metadata associative array variable as <c>Int3[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct and value of <see href="Int3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder,GBX.NET.Int3})">
            <summary>
            Declares a metadata associative array variable as <c>Int3[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct builder and value of <see href="Int3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,GBX.NET.Int2)">
            <summary>
            Declares a metadata variable as <c>Int2</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">A value of <see href="Int2"/>.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IEnumerable{GBX.NET.Int2})">
            <summary>
            Declares a metadata array variable as <c>Int2[Void]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any enumerable of <see href="Int2"/>. It is always reconstructed into a new list.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int2,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Int2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int2"/> and value of Struct. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int2,GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder})">
            <summary>
            Declares a metadata associative array variable as <c>Struct[Int2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int2"/> and value of Struct builder. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTrait,GBX.NET.Int2})">
            <summary>
            Declares a metadata associative array variable as <c>Int2[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct and value of <see href="Int2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Engines.Script.CScriptTraitsMetadata.ScriptStructTraitBuilder,GBX.NET.Int2})">
            <summary>
            Declares a metadata associative array variable as <c>Int2[Struct]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of Struct builder and value of <see href="Int2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Boolean,System.Boolean})">
            <summary>
            Declares a metadata associative array variable as <c>Boolean[Boolean]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="bool"/> and value of <see href="bool"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Boolean,System.Int32})">
            <summary>
            Declares a metadata associative array variable as <c>Integer[Boolean]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="bool"/> and value of <see href="int"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Boolean,System.Single})">
            <summary>
            Declares a metadata associative array variable as <c>Real[Boolean]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="bool"/> and value of <see href="float"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Boolean,System.String})">
            <summary>
            Declares a metadata associative array variable as <c>Text[Boolean]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="bool"/> and value of <see href="string"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Boolean,GBX.NET.Vec2})">
            <summary>
            Declares a metadata associative array variable as <c>Vec2[Boolean]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="bool"/> and value of <see href="Vec2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Boolean,GBX.NET.Vec3})">
            <summary>
            Declares a metadata associative array variable as <c>Vec3[Boolean]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="bool"/> and value of <see href="Vec3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Boolean,GBX.NET.Int3})">
            <summary>
            Declares a metadata associative array variable as <c>Int3[Boolean]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="bool"/> and value of <see href="Int3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Boolean,GBX.NET.Int2})">
            <summary>
            Declares a metadata associative array variable as <c>Int2[Boolean]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="bool"/> and value of <see href="Int2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Int32,System.Boolean})">
            <summary>
            Declares a metadata associative array variable as <c>Boolean[Integer]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="int"/> and value of <see href="bool"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
            <summary>
            Declares a metadata associative array variable as <c>Integer[Integer]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="int"/> and value of <see href="int"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Int32,System.Single})">
            <summary>
            Declares a metadata associative array variable as <c>Real[Integer]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="int"/> and value of <see href="float"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Int32,System.String})">
            <summary>
            Declares a metadata associative array variable as <c>Text[Integer]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="int"/> and value of <see href="string"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Int32,GBX.NET.Vec2})">
            <summary>
            Declares a metadata associative array variable as <c>Vec2[Integer]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="int"/> and value of <see href="Vec2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Int32,GBX.NET.Vec3})">
            <summary>
            Declares a metadata associative array variable as <c>Vec3[Integer]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="int"/> and value of <see href="Vec3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Int32,GBX.NET.Int3})">
            <summary>
            Declares a metadata associative array variable as <c>Int3[Integer]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="int"/> and value of <see href="Int3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Int32,GBX.NET.Int2})">
            <summary>
            Declares a metadata associative array variable as <c>Int2[Integer]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="int"/> and value of <see href="Int2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Single,System.Boolean})">
            <summary>
            Declares a metadata associative array variable as <c>Boolean[Real]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="float"/> and value of <see href="bool"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Single,System.Int32})">
            <summary>
            Declares a metadata associative array variable as <c>Integer[Real]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="float"/> and value of <see href="int"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Single,System.Single})">
            <summary>
            Declares a metadata associative array variable as <c>Real[Real]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="float"/> and value of <see href="float"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Single,System.String})">
            <summary>
            Declares a metadata associative array variable as <c>Text[Real]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="float"/> and value of <see href="string"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Single,GBX.NET.Vec2})">
            <summary>
            Declares a metadata associative array variable as <c>Vec2[Real]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="float"/> and value of <see href="Vec2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Single,GBX.NET.Vec3})">
            <summary>
            Declares a metadata associative array variable as <c>Vec3[Real]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="float"/> and value of <see href="Vec3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Single,GBX.NET.Int3})">
            <summary>
            Declares a metadata associative array variable as <c>Int3[Real]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="float"/> and value of <see href="Int3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.Single,GBX.NET.Int2})">
            <summary>
            Declares a metadata associative array variable as <c>Int2[Real]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="float"/> and value of <see href="Int2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.String,System.Boolean})">
            <summary>
            Declares a metadata associative array variable as <c>Boolean[Text]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="string"/> and value of <see href="bool"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Declares a metadata associative array variable as <c>Integer[Text]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="string"/> and value of <see href="int"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.String,System.Single})">
            <summary>
            Declares a metadata associative array variable as <c>Real[Text]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="string"/> and value of <see href="float"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Declares a metadata associative array variable as <c>Text[Text]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="string"/> and value of <see href="string"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.String,GBX.NET.Vec2})">
            <summary>
            Declares a metadata associative array variable as <c>Vec2[Text]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="string"/> and value of <see href="Vec2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.String,GBX.NET.Vec3})">
            <summary>
            Declares a metadata associative array variable as <c>Vec3[Text]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="string"/> and value of <see href="Vec3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.String,GBX.NET.Int3})">
            <summary>
            Declares a metadata associative array variable as <c>Int3[Text]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="string"/> and value of <see href="Int3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{System.String,GBX.NET.Int2})">
            <summary>
            Declares a metadata associative array variable as <c>Int2[Text]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="string"/> and value of <see href="Int2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec2,System.Boolean})">
            <summary>
            Declares a metadata associative array variable as <c>Boolean[Vec2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec2"/> and value of <see href="bool"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec2,System.Int32})">
            <summary>
            Declares a metadata associative array variable as <c>Integer[Vec2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec2"/> and value of <see href="int"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec2,System.Single})">
            <summary>
            Declares a metadata associative array variable as <c>Real[Vec2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec2"/> and value of <see href="float"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec2,System.String})">
            <summary>
            Declares a metadata associative array variable as <c>Text[Vec2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec2"/> and value of <see href="string"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec2,GBX.NET.Vec2})">
            <summary>
            Declares a metadata associative array variable as <c>Vec2[Vec2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec2"/> and value of <see href="Vec2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec2,GBX.NET.Vec3})">
            <summary>
            Declares a metadata associative array variable as <c>Vec3[Vec2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec2"/> and value of <see href="Vec3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec2,GBX.NET.Int3})">
            <summary>
            Declares a metadata associative array variable as <c>Int3[Vec2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec2"/> and value of <see href="Int3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec2,GBX.NET.Int2})">
            <summary>
            Declares a metadata associative array variable as <c>Int2[Vec2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec2"/> and value of <see href="Int2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec3,System.Boolean})">
            <summary>
            Declares a metadata associative array variable as <c>Boolean[Vec3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec3"/> and value of <see href="bool"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec3,System.Int32})">
            <summary>
            Declares a metadata associative array variable as <c>Integer[Vec3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec3"/> and value of <see href="int"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec3,System.Single})">
            <summary>
            Declares a metadata associative array variable as <c>Real[Vec3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec3"/> and value of <see href="float"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec3,System.String})">
            <summary>
            Declares a metadata associative array variable as <c>Text[Vec3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec3"/> and value of <see href="string"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec3,GBX.NET.Vec2})">
            <summary>
            Declares a metadata associative array variable as <c>Vec2[Vec3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec3"/> and value of <see href="Vec2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec3,GBX.NET.Vec3})">
            <summary>
            Declares a metadata associative array variable as <c>Vec3[Vec3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec3"/> and value of <see href="Vec3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec3,GBX.NET.Int3})">
            <summary>
            Declares a metadata associative array variable as <c>Int3[Vec3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec3"/> and value of <see href="Int3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Vec3,GBX.NET.Int2})">
            <summary>
            Declares a metadata associative array variable as <c>Int2[Vec3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Vec3"/> and value of <see href="Int2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int3,System.Boolean})">
            <summary>
            Declares a metadata associative array variable as <c>Boolean[Int3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int3"/> and value of <see href="bool"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int3,System.Int32})">
            <summary>
            Declares a metadata associative array variable as <c>Integer[Int3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int3"/> and value of <see href="int"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int3,System.Single})">
            <summary>
            Declares a metadata associative array variable as <c>Real[Int3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int3"/> and value of <see href="float"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int3,System.String})">
            <summary>
            Declares a metadata associative array variable as <c>Text[Int3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int3"/> and value of <see href="string"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int3,GBX.NET.Vec2})">
            <summary>
            Declares a metadata associative array variable as <c>Vec2[Int3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int3"/> and value of <see href="Vec2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int3,GBX.NET.Vec3})">
            <summary>
            Declares a metadata associative array variable as <c>Vec3[Int3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int3"/> and value of <see href="Vec3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int3,GBX.NET.Int3})">
            <summary>
            Declares a metadata associative array variable as <c>Int3[Int3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int3"/> and value of <see href="Int3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int3,GBX.NET.Int2})">
            <summary>
            Declares a metadata associative array variable as <c>Int2[Int3]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int3"/> and value of <see href="Int2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int2,System.Boolean})">
            <summary>
            Declares a metadata associative array variable as <c>Boolean[Int2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int2"/> and value of <see href="bool"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int2,System.Int32})">
            <summary>
            Declares a metadata associative array variable as <c>Integer[Int2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int2"/> and value of <see href="int"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int2,System.Single})">
            <summary>
            Declares a metadata associative array variable as <c>Real[Int2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int2"/> and value of <see href="float"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int2,System.String})">
            <summary>
            Declares a metadata associative array variable as <c>Text[Int2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int2"/> and value of <see href="string"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int2,GBX.NET.Vec2})">
            <summary>
            Declares a metadata associative array variable as <c>Vec2[Int2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int2"/> and value of <see href="Vec2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int2,GBX.NET.Vec3})">
            <summary>
            Declares a metadata associative array variable as <c>Vec3[Int2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int2"/> and value of <see href="Vec3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int2,GBX.NET.Int3})">
            <summary>
            Declares a metadata associative array variable as <c>Int3[Int2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int2"/> and value of <see href="Int3"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="M:GBX.NET.Engines.Script.CScriptTraitsMetadata.Declare(System.String,System.Collections.Generic.IDictionary{GBX.NET.Int2,GBX.NET.Int2})">
            <summary>
            Declares a metadata associative array variable as <c>Int2[Int2]</c>.
            </summary>
            <param name="name">The name of the variable.</param>
            <param name="value">Any dictionary with key of <see href="Int2"/> and value of <see href="Int2"/>. It is always reconstructed into a new dictionary.</param>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig">
            <summary>
            Handles all general game settings not related to a specific profile.
            </summary>
            <remarks>ID: 0x0B005000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005008">
            <summary>
            CSystemConfig 0x008 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B00502B">
            <summary>
            CSystemConfig 0x02B skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005034">
            <summary>
            CSystemConfig 0x034 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005035">
            <summary>
            CSystemConfig 0x035 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005039">
            <summary>
            CSystemConfig 0x039 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B00503D">
            <summary>
            CSystemConfig 0x03D skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005041">
            <summary>
            CSystemConfig 0x041 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005043">
            <summary>
            CSystemConfig 0x043 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005044">
            <summary>
            CSystemConfig 0x044 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005045">
            <summary>
            CSystemConfig 0x045 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005047">
            <summary>
            CSystemConfig 0x047 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005048">
            <summary>
            CSystemConfig 0x048 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B00504A">
            <summary>
            CSystemConfig 0x04A skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B00504F">
            <summary>
            CSystemConfig 0x04F skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005050">
            <summary>
            CSystemConfig 0x050 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005051">
            <summary>
            CSystemConfig 0x051 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005052">
            <summary>
            CSystemConfig 0x052 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005053">
            <summary>
            CSystemConfig 0x053 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005056">
            <summary>
            CSystemConfig 0x056 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.System.CSystemConfig.Chunk0B005059">
            <summary>
            CSystemConfig 0x059 skippable chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.TrackMania.CCtnMediaBlockEventTrackMania">
            <remarks>ID: 0x2407F000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.TrackMania.CCtnMediaBlockEventTrackMania.Chunk2407F000">
            <summary>
            CCtnMediaBlockEventTrackMania 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.TrackMania.CCtnMediaBlockEventTrackMania.Chunk2407F003">
            <summary>
            CCtnMediaBlockEventTrackMania 0x003 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.TrackMania.CCtnMediaBlockUiTMSimpleEvtsDisplay">
            <remarks>ID: 0x24092000</remarks>
        </member>
        <member name="T:GBX.NET.Engines.TrackMania.CCtnMediaBlockUiTMSimpleEvtsDisplay.Chunk24092000">
            <summary>
            CCtnMediaBlockUiTMSimpleEvtsDisplay 0x000 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.TrackMania.CCtnMediaBlockUiTMSimpleEvtsDisplay.Chunk24092001">
            <summary>
            CCtnMediaBlockUiTMSimpleEvtsDisplay 0x001 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Engines.TrackMania.CCtnMediaBlockUiTMSimpleEvtsDisplay.Chunk24092002">
            <summary>
            CCtnMediaBlockUiTMSimpleEvtsDisplay 0x002 chunk
            </summary>
        </member>
        <member name="T:GBX.NET.Exceptions.ChunkVersionNotSeenException">
            <summary>
            The exception that is thrown when a chunk version wasn't yet verified but shouldn't cause exceptions.
            </summary>
        </member>
        <member name="T:GBX.NET.Exceptions.ChunkVersionNotSupportedException">
            <summary>
            The exception that is thrown when a chunk version wasn't yet verified and could cause parsing exceptions.
            </summary>
        </member>
        <member name="T:GBX.NET.Exceptions.CorruptedIdException">
            <summary>
            The exception that is thrown when a read Id has not a valid index. 
            </summary>
        </member>
        <member name="T:GBX.NET.Exceptions.GameBoxParseException">
            <summary>
            The exception that is thrown when generic parse issue happens. This exception is temporary and will be obsolete soon.
            </summary>
        </member>
        <member name="T:GBX.NET.Exceptions.MemberNullException">
            <summary>
            The exception that is thrown when a node member is null when it shouldn't be.
            </summary>
        </member>
        <member name="T:GBX.NET.Exceptions.PrivateConstructorNotFoundException">
            <summary>
            The exception that is thrown when a private constructor is not found in GBX node classes.
            </summary>
        </member>
        <member name="T:GBX.NET.Exceptions.PropertyNullException">
            <summary>
            The exception that is thrown when an internal property of GBX.NET is null when it shouldn't be.
            </summary>
        </member>
        <member name="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">
            <summary>
            The exception that is thrown when a string length is outside of a valid range.
            </summary>
        </member>
        <member name="T:GBX.NET.Exceptions.ThisShouldNotHappenException">
            <summary>
            The exception that is thrown when a hypothetically impossible state is detected.
            </summary>
        </member>
        <member name="T:GBX.NET.Exceptions.VersionNotSupportedException">
            <summary>
            The exception that is thrown when a version of certain data wasn't yet verified and could cause parsing exceptions.
            </summary>
        </member>
        <member name="M:GBX.NET.Extensions.EnumerableExtensions.ToList``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.List`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> with predefiend capacity for little performance boost.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> to create a <see cref="T:System.Collections.Generic.List`1"/> from.</param>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> that contains elements from the input sequence.</returns>
        </member>
        <member name="M:GBX.NET.Extensions.ListExtensions.RemoveAll``1(System.Collections.Generic.IList{``0},System.Predicate{``0})">
            <summary>
            Removes all elements from the list based on a match.
            </summary>
            <typeparam name="T">List type.</typeparam>
            <param name="list">List.</param>
            <param name="match">Match.</param>
            <returns>Amount of removed objects.</returns>
            <exception cref="T:System.NotSupportedException">The list is read-only.</exception>
        </member>
        <member name="M:GBX.NET.Extensions.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.UInt32,System.String)">
            <summary>
            Formats and writes a debug log message.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="message">Format string of the log message in message template format. Example: "User {User} logged in from {Address}"</param>
            <param name="arg0"><see cref="T:System.UInt32"/> to format.</param>
            <param name="arg0ToStringFormat">Format to put on <paramref name="arg0"/>.</param>
        </member>
        <member name="M:GBX.NET.Extensions.LoggerExtensions.LogDebug``1(Microsoft.Extensions.Logging.ILogger,System.String,``0)">
            <summary>
            Formats and writes a debug log message.
            </summary>
            <typeparam name="T0">Type of the object to format.</typeparam>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="message">Format string of the log message in message template format. Example: "User {User} logged in from {Address}"</param>
            <param name="arg0">Object to format.</param>
        </member>
        <member name="M:GBX.NET.Extensions.LoggerExtensions.LogDebug``2(Microsoft.Extensions.Logging.ILogger,System.String,``0,``1)">
            <summary>
            Formats and writes a debug log message.
            </summary>
            <typeparam name="T0">Type of the object to format.</typeparam>
            <typeparam name="T1">Type of the object to format.</typeparam>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to write to.</param>
            <param name="message">Format string of the log message in message template format. Example: "User {User} logged in from {Address}"</param>
            <param name="arg0">Object to format.</param>
            <param name="arg1">Object to format.</param>
        </member>
        <member name="T:GBX.NET.FileRef">
            <summary>
            A file reference used for locating media.
            </summary>
        </member>
        <member name="P:GBX.NET.FileRef.Version">
            <summary>
            Version of the file reference.
            </summary>
        </member>
        <member name="P:GBX.NET.FileRef.Checksum">
            <summary>
            File checksum.
            </summary>
        </member>
        <member name="P:GBX.NET.FileRef.FilePath">
            <summary>
            File relative to user folder (or Skins folder if <c><see cref="P:GBX.NET.FileRef.Version"/> &lt;= 1</c>).
            </summary>
        </member>
        <member name="P:GBX.NET.FileRef.LocatorUrl">
            <summary>
            Url of the locator.
            </summary>
        </member>
        <member name="M:GBX.NET.FileRef.#ctor">
            <summary>
            Empty file reference version 3.
            </summary>
        </member>
        <member name="M:GBX.NET.FileRef.#ctor(System.Byte,System.Byte[],System.String,System.String)">
            <summary>
            File reference.
            </summary>
            <param name="version">Version of the file reference.</param>
            <param name="checksum">File checksum, should be null if <c><paramref name="version"/> &lt; 3</c>.</param>
            <param name="filePath">If <c><paramref name="version"/> &gt; 1</c>, relative to user folder, else relative to Skins folder.</param>
            <param name="locatorUrl">Url of the locator.</param>
        </member>
        <member name="M:GBX.NET.FileRef.ToString">
            <summary>
            Converts the file reference to a string using the <see cref="P:GBX.NET.FileRef.FilePath"/>.
            </summary>
            <returns>Returns <see cref="P:GBX.NET.FileRef.FilePath"/>.</returns>
        </member>
        <member name="T:GBX.NET.GameBox">
            <summary>
            An unknown serialized GameBox node with additional attributes. This class can represent deserialized .Gbx file.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBox.IgnoreUnseenVersions">
            <summary>
            If to ignore exceptions on certain chunk versions that are unknown, but shouldn't crash the reading/writing, however, could return unexpected values.
            </summary>
            <remarks>Example where this could happen is <see cref="M:GBX.NET.Engines.Game.CGameCtnMediaBlockCameraCustom.Key.ReadWrite(GBX.NET.GameBoxReaderWriter,System.Int32)"/>.</remarks>
        </member>
        <member name="P:GBX.NET.GameBox.StrictBooleans">
            <summary>
            If to strictly throw an exception when the supposedly-read boolean is not 0 or 1.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBox.SeekForRawChunkData">
            <summary>
            If to come back at the original position of an unskippable chunk, to read the pure data form without the usage of "double mode" <see cref="T:GBX.NET.GameBoxReaderWriter"/>. Doesn't work with "read uncompressed body directly" option.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBox.OpenPlanetHookExtractMode">
            <summary>
            Solves the occasional bug with OpenPlanet extraction where the header chunks are not properly written into the Gbx, while the length of this data section is still set to a non-zero value.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBox.FileName">
            <summary>
            File path of the Gbx.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBox.PakFileName">
            <summary>
            File path inside the Pak.
            </summary>
        </member>
        <member name="M:GBX.NET.GameBox.#ctor(System.UInt32)">
            <summary>
            Creates a new GameBox object with the most common parameters without the node (object).
            </summary>
            <param name="id">ID of the expected node - should be provided remapped to latest.</param>
        </member>
        <member name="M:GBX.NET.GameBox.#ctor(GBX.NET.Node)">
            <summary>
            Creates a new GameBox object with the most common parameters.
            </summary>
            <param name="node">Node to wrap in.</param>
        </member>
        <member name="M:GBX.NET.GameBox.TryNode``1(``0@)">
            <summary>
            Tries to get the <see cref="P:GBX.NET.GameBox.Node"/> of this GBX.
            </summary>
            <typeparam name="T">Type of the <see cref="P:GBX.NET.GameBox.Node"/> to look for.</typeparam>
            <param name="node">A node that is being extracted from this <see cref="T:GBX.NET.GameBox"/> object. Null if unsuccessful.</param>
            <returns>True if the type of this <see cref="T:GBX.NET.GameBox"/> is <see cref="T:GBX.NET.GameBox`1"/> and <typeparamref name="T"/> matches. Otherwise false.</returns>
        </member>
        <member name="M:GBX.NET.GameBox.Write(System.IO.Stream,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
            <exception cref="T:GBX.NET.Exceptions.HeaderOnlyParseLimitationException">Writing is not supported in <see cref="T:GBX.NET.GameBox"/> where only the header was parsed (without raw body being read).</exception>
        </member>
        <member name="M:GBX.NET.GameBox.WriteAsync(System.IO.Stream,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger,GBX.NET.GameBoxAsyncWriteAction,System.Threading.CancellationToken)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
            <exception cref="T:GBX.NET.Exceptions.HeaderOnlyParseLimitationException">Writing is not supported in <see cref="T:GBX.NET.GameBox"/> where only the header was parsed (without raw body being read).</exception>
        </member>
        <member name="M:GBX.NET.GameBox.Save(System.IO.Stream,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Saves the serialized <see cref="T:GBX.NET.GameBox`1"/> to a stream.
            </summary>
            <param name="stream">Any kind of stream that supports writing.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
            <exception cref="T:GBX.NET.Exceptions.HeaderOnlyParseLimitationException">Saving is not supported in <see cref="T:GBX.NET.GameBox"/> where only the header was parsed (without raw body being read).</exception>
        </member>
        <member name="M:GBX.NET.GameBox.Save(System.String,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Saves the serialized <see cref="T:GBX.NET.GameBox`1"/> on a disk.
            </summary>
            <param name="fileName">Relative or absolute file path. Null will pick the <see cref="P:GBX.NET.GameBox.FileName"/> value instead.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"><see cref="P:GBX.NET.GameBox.FileName"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="fileName"/> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by System.IO.Path.InvalidPathChars.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileName"/> is null.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive).</exception>
            <exception cref="T:System.UnauthorizedAccessException"><paramref name="fileName"/> specified a file that is read-only. -or- <paramref name="fileName"/> specified a file that is hidden. -or- This operation is not supported on the current platform. -or- <paramref name="fileName"/> specified a directory. -or- The caller does not have the required permission.</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="fileName"/> is in an invalid format.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
            <exception cref="T:GBX.NET.Exceptions.HeaderOnlyParseLimitationException">Saving is not supported in <see cref="T:GBX.NET.GameBox"/> where only the header was parsed (without raw body being read).</exception>
        </member>
        <member name="M:GBX.NET.GameBox.SaveAsync(System.IO.Stream,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger,GBX.NET.GameBoxAsyncWriteAction,System.Threading.CancellationToken)">
            <summary>
            Saves the serialized <see cref="T:GBX.NET.GameBox`1"/> to a stream.
            </summary>
            <param name="stream">Any kind of stream that supports writing.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
            <param name="asyncAction">Specialized executions during asynchronous writing.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
            <exception cref="T:GBX.NET.Exceptions.HeaderOnlyParseLimitationException">Saving is not supported in <see cref="T:GBX.NET.GameBox"/> where only the header was parsed (without raw body being read).</exception>
        </member>
        <member name="M:GBX.NET.GameBox.SaveAsync(System.String,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger,GBX.NET.GameBoxAsyncWriteAction,System.Threading.CancellationToken)">
            <summary>
            Saves the serialized <see cref="T:GBX.NET.GameBox`1"/> on a disk.
            </summary>
            <param name="fileName">Relative or absolute file path. Null will pick the <see cref="P:GBX.NET.GameBox.FileName"/> value instead.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
            <param name="asyncAction">Specialized executions during asynchronous writing.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException"><see cref="P:GBX.NET.GameBox.FileName"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="fileName"/> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by System.IO.Path.InvalidPathChars.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileName"/> is null.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive).</exception>
            <exception cref="T:System.UnauthorizedAccessException"><paramref name="fileName"/> specified a file that is read-only. -or- <paramref name="fileName"/> specified a file that is hidden. -or- This operation is not supported on the current platform. -or- <paramref name="fileName"/> specified a directory. -or- The caller does not have the required permission.</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="fileName"/> is in an invalid format.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
            <exception cref="T:GBX.NET.Exceptions.HeaderOnlyParseLimitationException">Saving is not supported in <see cref="T:GBX.NET.GameBox"/> where only the header was parsed (without raw body being read).</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ChangeBodyCompression(GBX.NET.GameBoxCompression)">
            <summary>
            Changes the compression of the body to apply on saving. This is not supported for header-only parses.
            </summary>
            <param name="compression">Compression type.</param>
            <exception cref="T:GBX.NET.Exceptions.HeaderOnlyParseLimitationException"></exception>
        </member>
        <member name="M:GBX.NET.GameBox.op_Implicit(GBX.NET.GameBox)~GBX.NET.Node">
            <summary>
            Implicitly casts <see cref="T:GBX.NET.GameBox"/> to its <see cref="P:GBX.NET.GameBox.Node"/>.
            </summary>
            <param name="gbx"></param>
        </member>
        <member name="M:GBX.NET.GameBox.ReadNodeID(System.IO.Stream)">
            <summary>
            Reads the GBX node ID the quickest possible way.
            </summary>
            <param name="stream">Stream to read from.</param>
            <returns>ID of the main node presented in GBX. Null if not a GBX stream.</returns>
        </member>
        <member name="M:GBX.NET.GameBox.ReadNodeID(System.String)">
            <summary>
            Reads the GBX node ID the quickest possible way.
            </summary>
            <param name="fileName">File to read from.</param>
            <returns>ID of the main node presented in GBX. Null if not a GBX stream.</returns>
        </member>
        <member name="M:GBX.NET.GameBox.ReadNodeType(System.String)">
            <summary>
            Reads the type of the main node from GBX file.
            </summary>
            <param name="fileName">File to read from.</param>
            <returns>Type of the main node.</returns>
        </member>
        <member name="M:GBX.NET.GameBox.ReadNodeType(System.IO.Stream)">
            <summary>
            Reads the type of the main node from GBX stream.
            </summary>
            <param name="stream">Stream to read from.</param>
            <returns>Type of the main node.</returns>
        </member>
        <member name="M:GBX.NET.GameBox.Decompress(System.IO.Stream,System.IO.Stream)">
            <summary>
            Decompresses the body part of the GBX file, also setting the header parameter so that the outputted GBX file is compatible with the game. If the file is already detected decompressed, the input is just copied over to the output and false is returned, otherwise true.
            </summary>
            <param name="input">GBX stream to decompress.</param>
            <param name="output">Output GBX stream in the decompressed form.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">One of the streams is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">GBX files below version 3 are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.Decompress(System.String,System.IO.Stream)">
            <summary>
            Decompresses the body part of the GBX file, also setting the header parameter so that the outputted GBX file is compatible with the game. If the file is already detected decompressed, the input is just copied over to the output and false is returned, otherwise true.
            </summary>
            <param name="inputFileName">GBX file to decompress.</param>
            <param name="output">Output GBX stream in the decompressed form.</param>
            <exception cref="T:System.ArgumentException"><paramref name="inputFileName"/> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="inputFileName"/> is null.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive).</exception>
            <exception cref="T:System.UnauthorizedAccessException"><paramref name="inputFileName"/> specified a directory. -or- The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.FileNotFoundException">The file specified in path was not found.</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="inputFileName"/> is in an invalid format.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">One of the streams is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">GBX files below version 3 are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.Decompress(System.IO.Stream,System.String)">
            <summary>
            Decompresses the body part of the GBX file, also setting the header parameter so that the outputted GBX file is compatible with the game. If the file is already detected decompressed, the input is just copied over to the output and false is returned, otherwise true.
            </summary>
            <param name="input">GBX stream to decompress.</param>
            <param name="outputFileName">Output GBX file in the decompressed form.</param>
            <exception cref="T:System.ArgumentException"><paramref name="outputFileName"/> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="outputFileName"/> is null.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. -or- path specified a file that is read-only.</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="outputFileName"/> is in an invalid format.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">One of the streams is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">GBX files below version 3 are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.Decompress(System.String,System.String)">
            <summary>
            Decompresses the body part of the GBX file, also setting the header parameter so that the outputted GBX file is compatible with the game. If the file is already detected decompressed, the input is just copied over to the output and false is returned, otherwise true.
            </summary>
            <param name="inputFileName">GBX file to decompress.</param>
            <param name="outputFileName">Output GBX file in the decompressed form.</param>
            <exception cref="T:System.ArgumentException"><paramref name="inputFileName"/> or <paramref name="outputFileName"/> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="inputFileName"/> or <paramref name="outputFileName"/> is null.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive).</exception>
            <exception cref="T:System.UnauthorizedAccessException"><paramref name="inputFileName"/> or <paramref name="outputFileName"/> specified a directory. -or- The caller does not have the required permission.  -or- path specified a file that is read-only.</exception>
            <exception cref="T:System.IO.FileNotFoundException">The file specified in path was not found.</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="inputFileName"/> is in an invalid format.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">One of the streams is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">GBX files below version 3 are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseHeaderWithoutProcessing(GBX.NET.GameBoxReader,System.Type@,System.Boolean@)">
            <exception cref="T:GBX.NET.Exceptions.NotAGbxException">The stream is not a Gbx stream nor starting at the correct position.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">Version of Gbx below 3 is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted Gbx is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.CompressedRefTableException">Compressed reference is not supported.</exception>
            <exception cref="T:System.IO.InvalidDataException">Number of reference files is below zero.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseHeader(System.IO.Stream,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses only the header of the GBX.
            </summary>
            <param name="stream">Stream to read GBX format from.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readRawBody">If the body should be read in raw bytes. True allows modification (write abilities) of GBX headers.</param>
            <param name="logger">Logger.</param>
            <returns>A GameBox with either basic information only (if unknown), or also with specified main node type (available by using an explicit <see cref="T:GBX.NET.GameBox`1"/> cast.</returns>
            <exception cref="T:GBX.NET.Exceptions.NotAGbxException">The stream is not a Gbx stream nor starting at the correct position.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">Version of Gbx below 3 is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted Gbx is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.CompressedRefTableException">Compressed reference is not supported.</exception>
            <exception cref="T:System.IO.InvalidDataException">Number of reference files is below zero.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseHeader(System.String,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses only the header of the GBX.
            </summary>
            <param name="fileName">Relative or absolute file path.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readRawBody">If the body should be read in raw bytes. True allows modification (write abilities) of GBX headers.</param>
            <param name="logger">Logger.</param>
            <returns>A GameBox with either basic information only (if unknown), or also with specified main node type (available by using an explicit <see cref="T:GBX.NET.GameBox`1"/> cast.</returns>
            <exception cref="T:GBX.NET.Exceptions.NotAGbxException">The stream is not a Gbx stream nor starting at the correct position.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">Version of Gbx below 3 is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted Gbx is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.CompressedRefTableException">Compressed reference is not supported.</exception>
            <exception cref="T:System.IO.InvalidDataException">Number of reference files is below zero.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseHeader``1(System.IO.Stream,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses only the header of the GBX.
            </summary>
            <typeparam name="T">Known node of the GBX file parsed. Unmatching node will throw an <see cref="T:System.InvalidCastException"/>. Nodes to use are located in the GBX.NET.Engines namespace.</typeparam>
            <param name="stream">Stream to read GBX format from.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readRawBody">If the body should be read in raw bytes. True allows modification (write abilities) of GBX headers.</param>
            <param name="logger">Logger.</param>
            <returns>A GameBox with specified main node type.</returns>
            <exception cref="T:GBX.NET.Exceptions.NotAGbxException">The stream is not a Gbx stream nor starting at the correct position.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">Version of Gbx below 3 is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted Gbx is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.CompressedRefTableException">Compressed reference is not supported.</exception>
            <exception cref="T:System.IO.InvalidDataException">Number of reference files is below zero.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.InvalidCastException">Instantiated <see cref="T:GBX.NET.GameBox"/> cannot be casted to <see cref="T:GBX.NET.GameBox`1"/>.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseHeader``1(System.String,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses only the header of the GBX.
            </summary>
            <typeparam name="T">Known node of the GBX file parsed. Unmatching node will throw an <see cref="T:System.InvalidCastException"/>. Nodes to use are located in the GBX.NET.Engines namespace.</typeparam>
            <param name="fileName">Relative or absolute file path.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readRawBody">If the body should be read in raw bytes. True allows modification (write abilities) of GBX headers.</param>
            <param name="logger">Logger.</param>
            <returns>A GameBox with specified main node type.</returns>
            <exception cref="T:GBX.NET.Exceptions.NotAGbxException">The stream is not a Gbx stream nor starting at the correct position.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">Version of Gbx below 3 is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted Gbx is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.CompressedRefTableException">Compressed reference is not supported.</exception>
            <exception cref="T:System.IO.InvalidDataException">Number of reference files is below zero.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.InvalidCastException">Instantiated <see cref="T:GBX.NET.GameBox"/> cannot be casted to <see cref="T:GBX.NET.GameBox`1"/>.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.Parse(System.IO.Stream,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Easily parses GBX format.
            </summary>
            <param name="stream">Stream to read GBX format from.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readUncompressedBodyDirectly">If the body (if presented uncompressed) should be parsed directly from the stream (true), or loaded to memory first (false).
            This set to true makes the parse slower with files and <see cref="T:System.IO.FileStream"/> but could potentially speed up direct parses from the internet. Use wisely!</param>
            <param name="logger">Logger.</param>
            <returns>A GameBox with either basic information only (if unknown), or also with specified main node type (available by using an explicit <see cref="T:GBX.NET.GameBox`1"/> cast).</returns>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException">LZO algorithm is missing.</exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
            <exception cref="T:GBX.NET.Exceptions.NotAGbxException">The stream is not a Gbx stream nor starting at the correct position.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">Version of Gbx below 3 is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted Gbx is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.CompressedRefTableException">Compressed reference is not supported.</exception>
            <exception cref="T:System.IO.InvalidDataException">Number of reference files is below zero.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.Parse(System.String,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Easily parses a GBX file.
            </summary>
            <param name="fileName">Relative or absolute file path.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readUncompressedBodyDirectly">If the body (if presented uncompressed) should be parsed directly from the stream (true), or loaded to memory first (false).
            This set to true makes the parse slower with files and <see cref="T:System.IO.FileStream"/> but could potentially speed up direct parses from the internet. Use wisely!</param>
            <param name="logger">Logger.</param>
            <returns>A GameBox with either basic information only (if unknown), or also with specified main node type (available by using an explicit <see cref="T:GBX.NET.GameBox`1"/> cast).</returns>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException">LZO algorithm is missing.</exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
            <exception cref="T:GBX.NET.Exceptions.NotAGbxException">The stream is not a Gbx stream nor starting at the correct position.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">Version of Gbx below 3 is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted Gbx is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.CompressedRefTableException">Compressed reference is not supported.</exception>
            <exception cref="T:System.IO.InvalidDataException">Number of reference files is below zero.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.Parse``1(System.IO.Stream,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Easily parses GBX format.
            </summary>
            <typeparam name="T">Known node of the GBX file parsed. Unmatching node will throw an <see cref="T:System.InvalidCastException"/>. Nodes to use are located in the GBX.NET.Engines namespace.</typeparam>
            <param name="stream">Stream to read GBX format from.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readUncompressedBodyDirectly">If the body (if presented uncompressed) should be parsed directly from the stream (true), or loaded to memory first (false).
            This set to true makes the parse slower with files and <see cref="T:System.IO.FileStream"/> but could potentially speed up direct parses from the internet. Use wisely!</param>
            <param name="logger">Logger.</param>
            <returns>A GameBox with specified main node type.</returns>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"/>
            <exception cref="T:System.InvalidCastException"/>
            <exception cref="T:System.NotSupportedException"/>
            <exception cref="T:GBX.NET.Exceptions.GameBoxParseException"/>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.Parse``1(System.String,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Easily parses a GBX file.
            </summary>
            <typeparam name="T">Known node of the GBX file parsed. Unmatching node will throw an <see cref="T:System.InvalidCastException"/>. Nodes to use are located in the GBX.NET.Engines namespace.</typeparam>
            <param name="fileName">Relative or absolute file path.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readUncompressedBodyDirectly">If the body (if presented uncompressed) should be parsed directly from the stream (true), or loaded to memory first (false).
            This set to true makes the parse slower with files and <see cref="T:System.IO.FileStream"/> but could potentially speed up direct parses from the internet. Use wisely!</param>
            <param name="logger">Logger.</param>
            <returns>A GameBox with specified main node type.</returns>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"/>
            <exception cref="T:System.InvalidCastException"/>
            <exception cref="T:System.NotSupportedException"/>
            <exception cref="T:GBX.NET.Exceptions.GameBoxParseException"/>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseNodeHeader(System.IO.Stream,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses only the header of the Gbx and returns the node of it.
            </summary>
            <param name="stream">Stream to read GBX format from.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readRawBody">If the body should be read in raw bytes. True allows modification (write abilities) of GBX headers.</param>
            <param name="logger">Logger.</param>
            <returns>A <see cref="T:GBX.NET.Node"/> with either basic information only (if unknown), or also with specified node information (available by using an explicit cast).</returns>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseNodeHeader(System.String,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses only the header of the GBX and returns the node of it.
            </summary>
            <param name="fileName">Relative or absolute file path.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readRawBody">If the body should be read in raw bytes. True allows modification (write abilities) of GBX headers.</param>
            <param name="logger">Logger.</param>
            <returns>A <see cref="T:GBX.NET.Node"/> with either basic information only (if unknown), or also with specified node information (available by using an explicit cast).</returns>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseNodeHeader``1(System.IO.Stream,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses only the header of the GBX and returns the node of it.
            </summary>
            <typeparam name="T">Known node of the GBX file parsed. Unmatching node will throw an <see cref="T:System.InvalidCastException"/>. Nodes to use are located in the GBX.NET.Engines namespace.</typeparam>
            <param name="stream">Stream to read GBX format from.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readRawBody">If the body should be read in raw bytes. True allows modification (write abilities) of GBX headers.</param>
            <param name="logger">Logger.</param>
            <returns>A <see cref="T:GBX.NET.Node"/> casted to <typeparamref name="T"/>.</returns>
            <exception cref="T:System.InvalidCastException"/>
            <exception cref="T:GBX.NET.Exceptions.GameBoxParseException"></exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseNodeHeader``1(System.String,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses only the header of the GBX and returns the node of it.
            </summary>
            <typeparam name="T">Known node of the GBX file parsed. Unmatching node will throw an <see cref="T:System.InvalidCastException"/>. Nodes to use are located in the GBX.NET.Engines namespace.</typeparam>
            <param name="fileName">Relative or absolute file path.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readRawBody">If the body should be read in raw bytes. True allows modification (write abilities) of GBX headers.</param>
            <param name="logger">Logger.</param>
            <returns>A <see cref="T:GBX.NET.Node"/> casted to <typeparamref name="T"/>.</returns>
            <exception cref="T:System.InvalidCastException"/>
            <exception cref="T:GBX.NET.Exceptions.GameBoxParseException"></exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseNode``1(System.IO.Stream,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Easily parses GBX format and returns the node of it.
            </summary>
            <typeparam name="T">Known node of the GBX file parsed. Unmatching node will throw an <see cref="T:System.InvalidCastException"/>. Nodes to use are located in the GBX.NET.Engines namespace.</typeparam>
            <param name="stream">Stream to read GBX format from.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readUncompressedBodyDirectly">If the body (if presented uncompressed) should be parsed directly from the stream (true), or loaded to memory first (false).
            This set to true makes the parse slower with files and <see cref="T:System.IO.FileStream"/> but could potentially speed up direct parses from the internet. Use wisely!</param>
            <param name="logger">Logger.</param>
            <returns>A <see cref="T:GBX.NET.Node"/> casted to <typeparamref name="T"/>.</returns>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"/>
            <exception cref="T:System.InvalidCastException"/>
            <exception cref="T:System.NotSupportedException"/>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseNode``1(System.String,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Easily parses a GBX file and returns the node of it.
            </summary>
            <typeparam name="T">Known node of the GBX file parsed. Unmatching node will throw an <see cref="T:System.InvalidCastException"/>. Nodes to use are located in the GBX.NET.Engines namespace.</typeparam>
            <param name="fileName">Relative or absolute file path.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readUncompressedBodyDirectly">If the body (if presented uncompressed) should be parsed directly from the stream (true), or loaded to memory first (false).
            This set to true makes the parse slower with files and <see cref="T:System.IO.FileStream"/> but could potentially speed up direct parses from the internet. Use wisely!</param>
            <param name="logger">Logger.</param>
            <returns>A <see cref="T:GBX.NET.Node"/> casted to <typeparamref name="T"/>.</returns>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"/>
            <exception cref="T:System.InvalidCastException"/>
            <exception cref="T:System.NotSupportedException"/>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseNode(System.String,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Easily parses a GBX file and returns the node of it.
            </summary>
            <param name="fileName">Relative or absolute file path.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readUncompressedBodyDirectly">If the body (if presented uncompressed) should be parsed directly from the stream (true), or loaded to memory first (false).
            This set to true makes the parse slower with files and <see cref="T:System.IO.FileStream"/> but could potentially speed up direct parses from the internet. Use wisely!</param>
            <param name="logger">Logger.</param>
            <returns>A <see cref="T:GBX.NET.Node"/> with either basic information only (if unknown), or also with specified node information (available by using an explicit cast).</returns>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"/>
            <exception cref="T:System.NotSupportedException"/>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBox.ParseNode(System.IO.Stream,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Easily parses GBX format and returns the node of it.
            </summary>
            <param name="stream">Stream to read GBX format from.</param>
            <param name="progress">Callback that reports any read progress.</param>
            <param name="readUncompressedBodyDirectly">If the body (if presented uncompressed) should be parsed directly from the stream (true), or loaded to memory first (false).
            This set to true makes the parse slower with files and <see cref="T:System.IO.FileStream"/> but could potentially speed up direct parses from the internet. Use wisely!</param>
            <param name="logger">Logger.</param>
            <returns>A <see cref="T:GBX.NET.Node"/> with either basic information only (if unknown), or also with specified node information (available by using an explicit cast).</returns>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"/>
            <exception cref="T:System.NotSupportedException"/>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="P:GBX.NET.GameBoxBody.RawData">
            <summary>
            Pure body data usually in compressed form. This property is used if GameBox's ParseHeader methods are used, otherwise null.
            </summary>
        </member>
        <member name="M:GBX.NET.GameBoxBody.Read(GBX.NET.Node,GBX.NET.GameBoxHeader,GBX.NET.GameBoxReader,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean)">
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxBody.ReadAsync(GBX.NET.Node,GBX.NET.GameBoxHeader,GBX.NET.GameBoxReader,System.Boolean,GBX.NET.GameBoxAsyncReadAction,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxBody.ReadMainNode(GBX.NET.Node,System.Byte[],System.Int32,System.IProgress{GBX.NET.GameBoxReadProgress},Microsoft.Extensions.Logging.ILogger,GBX.NET.GbxState)">
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxBody.ReadMainNode(GBX.NET.Node,System.Byte[],System.IProgress{GBX.NET.GameBoxReadProgress},Microsoft.Extensions.Logging.ILogger,GBX.NET.GbxState)">
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxBody.ReadMainNode(GBX.NET.Node,System.IO.Stream,System.IProgress{GBX.NET.GameBoxReadProgress},Microsoft.Extensions.Logging.ILogger,GBX.NET.GbxState)">
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxBody.ReadMainNode(GBX.NET.Node,GBX.NET.GameBoxReader,System.IProgress{GBX.NET.GameBoxReadProgress})">
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxBody.ReadMainNodeAsync(GBX.NET.Node,System.Byte[],System.Int32,Microsoft.Extensions.Logging.ILogger,GBX.NET.GameBoxAsyncReadAction,GBX.NET.GbxState,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxBody.ReadMainNodeAsync(GBX.NET.Node,System.IO.Stream,Microsoft.Extensions.Logging.ILogger,GBX.NET.GameBoxAsyncReadAction,GBX.NET.GbxState,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxBody.ReadMainNodeAsync(GBX.NET.Node,GBX.NET.GameBoxReader,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxBody.WriteMainNode(GBX.NET.Node,GBX.NET.GameBoxHeader,GBX.NET.GameBoxWriter)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
        </member>
        <member name="M:GBX.NET.GameBoxBody.WriteMainNodeAsync(GBX.NET.Node,GBX.NET.GameBoxHeader,GBX.NET.GameBoxWriter,System.Threading.CancellationToken)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
        </member>
        <member name="P:GBX.NET.GameBoxHeader.HeaderChunks">
            <summary>
            Header chunks that are part of an unknown node. For known node header chunks, see <see cref="P:GBX.NET.GameBox.Node"/> -> <see cref="P:GBX.NET.INodeHeader.HeaderChunks"/>.
            </summary>
        </member>
        <member name="M:GBX.NET.GameBoxHeader.Parse(GBX.NET.GameBoxReader)">
            <summary>
            Parses the common Gbx header.
            </summary>
            <param name="r">Reader.</param>
            <returns>An immutable <see cref="T:GBX.NET.GameBoxHeader"/> object.</returns>
            <exception cref="T:GBX.NET.Exceptions.NotAGbxException">The stream is not a Gbx stream nor starting at the correct position.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">Version of Gbx below 3 is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted Gbx is not supported.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxHeader.Parse(System.IO.Stream,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses the common Gbx header.
            </summary>
            <param name="stream">Stream.</param>
            <param name="logger">Logger.</param>
            <returns>An immutable <see cref="T:GBX.NET.GameBoxHeader"/> object.</returns>
            <exception cref="T:GBX.NET.Exceptions.NotAGbxException">The stream is not a Gbx stream or is not starting at the correct position.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">Version of Gbx below 3 is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted Gbx is not supported.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxHeader.Parse(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses the common Gbx header.
            </summary>
            <param name="fileName">File name.</param>
            <param name="logger">Logger.</param>
            <returns>An immutable <see cref="T:GBX.NET.GameBoxHeader"/> object.</returns>
            <exception cref="T:GBX.NET.Exceptions.NotAGbxException">The stream is not a Gbx stream or is not starting at the correct position.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">Version of Gbx below 3 is not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted Gbx is not supported.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="T:GBX.NET.GameBox`1">
            <summary>
            A known serialized GameBox node with additional attributes. This class can represent deserialized .Gbx file.
            </summary>
            <typeparam name="T">The main node of the GBX. Nodes to use are located in the GBX.NET.Engines namespace.</typeparam>
        </member>
        <member name="P:GBX.NET.GameBox`1.Node">
            <summary>
            Deserialized node from GBX.
            </summary>
        </member>
        <member name="M:GBX.NET.GameBox`1.CreateHeaderChunk``1">
            <summary>
            Creates a header chunk based on the attributes from <typeparamref name="TChunk"/>.
            </summary>
            <typeparam name="TChunk">A chunk type compatible with <see cref="T:GBX.NET.IHeaderChunk"/>.</typeparam>
            <returns>A newly created chunk.</returns>
        </member>
        <member name="M:GBX.NET.GameBox`1.RemoveAllHeaderChunks">
            <summary>
            Removes all header chunks.
            </summary>
        </member>
        <member name="M:GBX.NET.GameBox`1.RemoveHeaderChunk``1">
            <summary>
            Removes a header chunk based on the attributes from <typeparamref name="TChunk"/>.
            </summary>
            <typeparam name="TChunk">A chunk type compatible with <see cref="T:GBX.NET.IHeaderChunk"/>.</typeparam>
            <returns>True, if the chunk was removed, otherwise false.</returns>
        </member>
        <member name="M:GBX.NET.GameBox`1.CreateBodyChunk``1(System.Byte[])">
            <summary>
            Creates a body chunk based on the attributes from <typeparamref name="TChunk"/>.
            </summary>
            <typeparam name="TChunk">A chunk type that isn't a header chunk.</typeparam>
            <param name="data">If the chunk is <see cref="T:GBX.NET.ISkippableChunk"/>, the bytes to initiate the chunks with, unparsed. If it's not a skippable chunk, data is parsed immediately.</param>
            <returns>A newly created chunk.</returns>
        </member>
        <member name="M:GBX.NET.GameBox`1.CreateBodyChunk``1">
            <summary>
            Creates a body chunk based on the attributes from <typeparamref name="TChunk"/> with no inner data provided.
            </summary>
            <typeparam name="TChunk">A chunk type that isn't a header chunk.</typeparam>
            <returns>A newly created chunk.</returns>
        </member>
        <member name="M:GBX.NET.GameBox`1.RemoveAllBodyChunks">
            <summary>
            Removes all body chunks.
            </summary>
        </member>
        <member name="M:GBX.NET.GameBox`1.RemoveBodyChunk``1">
            <summary>
            Removes a body chunk based on the attributes from <typeparamref name="TChunk"/>.
            </summary>
            <typeparam name="TChunk">A chunk type that isn't a header chunk.</typeparam>
            <returns>True, if the chunk was removed, otherwise false.</returns>
        </member>
        <member name="M:GBX.NET.GameBox`1.DiscoverAllChunks">
            <summary>
            Discovers all chunks in the GBX.
            </summary>
            <exception cref="T:System.AggregateException"/>
        </member>
        <member name="M:GBX.NET.GameBox`1.op_Implicit(GBX.NET.GameBox{`0})~`0">
            <summary>
            Implicitly casts <see cref="T:GBX.NET.GameBox`1"/> to its <see cref="P:GBX.NET.GameBox`1.Node"/>.
            </summary>
            <param name="gbx"></param>
        </member>
        <member name="T:GBX.NET.GameBoxReader">
            <summary>
            Reads data types from GameBox serialization.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBoxReader.AsyncAction">
            <summary>
            A delegate collection that gets executed throughout the asynchronous reading.
            </summary>
        </member>
        <member name="M:GBX.NET.GameBoxReader.#ctor(System.IO.Stream,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Constructs a binary reader specialized for Gbx deserializing.
            </summary>
            <param name="input">The input stream.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:GBX.NET.GameBoxReader.#ctor(System.IO.Stream,GBX.NET.GameBox,GBX.NET.GameBoxAsyncReadAction,Microsoft.Extensions.Logging.ILogger,GBX.NET.GbxState)">
            <summary>
            Constructs a binary reader specialized for Gbx deserializing.
            </summary>
            <param name="input">The input stream.</param>
            <param name="gbx">Gbx for reference table and sending its object to all the nodes.</param>
            <param name="asyncAction">Specialized executions during asynchronous reading.</param>
            <param name="logger">Logger.</param>
            <param name="state">State of <see cref="T:GBX.NET.Id"/> and aux node write. Currently cannot be null.</param>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadBoolean">
            <summary>
            Reads the next <see cref="T:System.Int32"/> from the current stream, casts it as <see cref="T:System.Boolean"/> and advances the current position of the stream by 4 bytes.
            </summary>
            <returns>A boolean.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:GBX.NET.Exceptions.BooleanOutOfRangeException">Boolean is neither 0 or 1.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadBoolean(System.Boolean)">
            <summary>
            If <paramref name="asByte"/> is true, reads the next <see cref="T:System.Byte"/> from the current stream and casts it as <see cref="T:System.Boolean"/>. Otherwise <see cref="M:GBX.NET.GameBoxReader.ReadBoolean"/> is called.
            </summary>
            <param name="asByte">Read the boolean as <see cref="T:System.Byte"/> or <see cref="T:System.Int32"/>.</param>
            <returns>A boolean.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadString(GBX.NET.StringLengthPrefix)">
            <summary>
            Reads a <see cref="T:System.String"/> from the current stream with one of the prefix reading methods.
            </summary>
            <param name="readPrefix">The method to read the prefix.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="readPrefix"/> is <see cref="F:GBX.NET.StringLengthPrefix.None"/>.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is too big.</exception>
            <returns>The string being read.</returns>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadString">
            <summary>
            Reads a <see cref="T:System.String"/> from the current stream. The string is prefixed with the length, encoded as <see cref="T:System.Int32"/>.
            </summary>
            <returns>The string being read.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is too big.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadString(System.Int32)">
            <summary>
            Reads a <see cref="T:System.String"/> from the current stream using the <paramref name="length"/> parameter.
            </summary>
            <param name="length">Length of the bytes to read.</param>
            <returns>The string being read.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.LengthLimitException">String length is too big.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadBytes">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then reads the sequence of bytes.
            </summary>
            <exception cref="T:System.ArgumentException">The number of decoded characters to read is greater than count. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
            <returns>A byte array.</returns>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadId(System.Boolean)">
            <summary>
            First reads the <see cref="T:System.Int32"/> of the Id version, if not read yet, considering the information from state. Then reads an <see cref="T:System.Int32"/> (index) that holds the flags of the representing <see cref="T:System.String"/>. If the first 30 bits are 0, a fresh <see cref="T:System.String"/> is also read.
            </summary>
            <returns>A string.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">Gbx has the first Id presented without a version. Solution exists, but the stream does not support seeking.</exception>
            <exception cref="T:GBX.NET.Exceptions.LengthLimitException">String length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.CorruptedIdException">The Id index is not matching any known values.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadIdent">
            <summary>
            Reads an Id using <see cref="M:GBX.NET.GameBoxReader.ReadId(System.Boolean)"/> 3 times.
            </summary>
            <returns>An <see cref="T:GBX.NET.Ident"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">GBX has the first Id presented without a version. Solution exists, but the stream does not support seeking.</exception>
            <exception cref="T:GBX.NET.Exceptions.LengthLimitException">String length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.CorruptedIdException">The Id index is not matching any known values.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadFileRef">
            <summary>
            Reads the file reference data type - file path, checksum and locator URL.
            </summary>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:GBX.NET.Exceptions.LengthLimitException">String length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadVec2">
            <summary>
            Reads 2 <see cref="T:System.Single"/>s.
            </summary>
            <returns>A 2D vector.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadVec3">
            <summary>
            Reads 3 <see cref="T:System.Single"/>s.
            </summary>
            <returns>A 3D vector.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadVec4">
            <summary>
            Reads 4 <see cref="T:System.Single"/>s.
            </summary>
            <returns>A 4D vector.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadQuat">
            <summary>
            Reads 4 <see cref="T:System.Single"/>s.
            </summary>
            <returns>A 4D quaternion.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadInt3">
            <summary>
            Reads 3 <see cref="T:System.Int32"/>s.
            </summary>
            <returns>A 3-int.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadInt2">
            <summary>
            Reads 2 <see cref="T:System.Int32"/>s.
            </summary>
            <returns>A 2-int.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadByte3">
            <summary>
            Reads 3 <see cref="T:System.Byte"/>s.
            </summary>
            <returns>A 3-byte.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadBigInt(System.Int32)">
            <summary>
            Reads a <paramref name="byteLength"/> amount of bytes and converts them into <see cref="T:System.Numerics.BigInteger"/>.
            </summary>
            <returns>A big integer.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadRect">
            <summary>
            Reads a 2D rectangle.
            </summary>
            <returns>A rectangle.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadBox">
            <summary>
            Reads a 3D box.
            </summary>
            <returns>A box.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadTransform">
            <summary>
            Reads a common transform representation.
            </summary>
            <returns>3D position, quaternion rotation, speed, vector velocity.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadUntilUInt32(System.UInt32)">
            <summary>
            Continues reading the stream until a specific <paramref name="value"/> is reached.
            </summary>
            <returns>Enumeration of bytes.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadUntilFacade">
            <summary>
            Continues reading the stream until facade (<c>0xFACADE01</c>) is reached.
            </summary>
            <returns>Enumeration of bytes.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadToEnd(System.Boolean)">
            <summary>
            Continues reading the stream until the end of the is reached. The stream can use either seeking or non-seeking method, depends what works best for you.
            </summary>
            <param name="seek">If the method should use seeking features.</param>
            <returns>Array of bytes.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadStringUntilFacade">
            <summary>
            Continues reading the stream until facade (<c>0xFACADE01</c>) is reached and converts the result to string.
            </summary>
            <returns>A <see cref="T:System.String"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadUntilNextChunk(System.UInt32)">
            <summary>
            Continues reading the stream until a specific chunk ID with the base <paramref name="classId"/> is reached, using remapping and masking.
            </summary>
            <returns>Enumeration of bytes.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.PeekUInt32">
            <summary>
            Returns the next available <see cref="T:System.UInt32"/> but does not consume it.
            </summary>
            <returns>An <see cref="T:System.UInt32"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.HasMagic(System.String)">
            <summary>
            Compares the <paramref name="magic"/> with the string to be read, using its length.
            </summary>
            <returns>If the <see cref="T:System.String"/> inside the stream is equal to <paramref name="magic"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="magic"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.Read``1">
            <summary>
            A generic read method of parameterless types for the cost of performance loss. Prefer using the pre-defined data read methods.
            </summary>
            <typeparam name="T">Type of the variable to read. Supported types are <see cref="T:System.Byte"/>, <see cref="T:System.Int16"/>, <see cref="T:System.Int32"/>,
            <see cref="T:System.Int64"/>, <see cref="T:System.Single"/>, <see cref="T:System.Boolean"/>, <see cref="T:System.String"/>, <see cref="T:System.SByte"/>, <see cref="T:System.UInt16"/>,
            <see cref="T:System.UInt32"/>, <see cref="T:System.UInt64"/>, <see cref="T:GBX.NET.Byte3"/>, <see cref="T:GBX.NET.Vec2"/>, <see cref="T:GBX.NET.Vec3"/>,
            <see cref="T:GBX.NET.Vec4"/>, <see cref="T:GBX.NET.Int3"/>, and <see cref="T:GBX.NET.Ident"/>.</typeparam>
            <returns>Object read from the stream.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadNodeRef(GBX.NET.GameBoxRefTable.File@)">
            <summary>
            Reads an <see cref="T:System.Int32"/> containing the node reference index, then the node using the <see cref="T:GBX.NET.Node"/>'s Parse method. The index is also checked if it isn't a part of a reference table, which currently returns null.
            </summary>
            <param name="nodeRefFile">File reference to the node (if from reference table).</param>
            <returns>A node, or null if the index is -1 or the node is from reference table.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadNodeRef">
            <summary>
            Reads an <see cref="T:System.Int32"/> containing the node reference index, then the node using the <see cref="T:GBX.NET.Node"/>'s Parse method. The index is also checked if it isn't a part of a reference table, which currently returns null.
            </summary>
            <returns>A node, or null if the index is -1 or the node is from reference table.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadNodeRef``1(GBX.NET.GameBoxRefTable.File@)">
            <summary>
            Reads an <see cref="T:System.Int32"/> containing the node reference index, then the node using the <see cref="T:GBX.NET.Node"/>'s Parse method. The index is also checked if it isn't a part of a reference table, which currently returns null.
            </summary>
            <typeparam name="T">Type of node.</typeparam>
            <param name="nodeRefFile">File reference to the node (if from reference table).</param>
            <returns>A node, or null if the index is -1 or the node is from reference table.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadNodeRef``1">
            <summary>
            Reads an <see cref="T:System.Int32"/> containing the node reference index, then the node using the <see cref="T:GBX.NET.Node"/>'s Parse method. The index is also checked if it isn't a part of a reference table, which currently returns null.
            </summary>
            <typeparam name="T">Type of node.</typeparam>
            <returns>A node, or null if the index is -1 or the node is from reference table.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadNodeRefAsync(System.Threading.CancellationToken)">
            <summary>
            Reads an <see cref="T:System.Int32"/> containing the node reference index, then the node using the <see cref="T:GBX.NET.Node"/>'s ParseAsync method. The index is also checked if it isn't a part of a reference table, which currently returns null.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A node, or null if the index is -1 or the node is from reference table.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadNodeRefAsync``1(System.Threading.CancellationToken)">
            <summary>
            Reads an <see cref="T:System.Int32"/> containing the node reference index, then the node using the <see cref="T:GBX.NET.Node"/>'s ParseAsync method. The index is also checked if it isn't a part of a reference table, which currently returns null.
            </summary>
            <typeparam name="T">Type of node.</typeparam>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A node, or null if the index is -1 or the node is from reference table.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArray``1(System.Int32,System.Boolean)">
            <summary>
            Reads bytes into a stack-allocated area (decided by <paramref name="length"/>, where <paramref name="lengthInBytes"/> determines the format), then casts the data into <typeparamref name="T"/> structs by using <see cref="M:System.Runtime.InteropServices.MemoryMarshal.Cast``2(System.Span{``0})"/>, resulting in more optimized read of array for value types.
            </summary>
            <typeparam name="T">A struct type.</typeparam>
            <param name="length">Length of the array.</param>
            <param name="lengthInBytes">If to take length as the size of the byte array and not the <typeparamref name="T"/> array.</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is not valid.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArray``1(System.Boolean)">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then reads bytes into a stack-allocated area (decided by the length, where <paramref name="lengthInBytes"/> determines the format), then casts the data into <typeparamref name="T"/> structs by using <see cref="M:System.Runtime.InteropServices.MemoryMarshal.Cast``2(System.Span{``0})"/>, resulting in more optimized read of array for value types.
            </summary>
            <typeparam name="T">A struct type.</typeparam>
            <param name="lengthInBytes">If to take length as the size of the byte array and not the <see cref="T:GBX.NET.Vec3"/> array.</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArray``1(System.Int32,System.Func{System.Int32,``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="length">Length of the array.</param>
            <param name="forLoop">Each element with an index parameter.</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArray``1(System.Func{System.Int32,``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="forLoop">Each element with an index parameter.</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArray``1(System.Int32,System.Func{``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="length">Length of the array.</param>
            <param name="forLoop">Each element.</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArray``1(System.Func{``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="forLoop">Each element.</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArray``1(System.Int32,System.Func{System.Int32,GBX.NET.GameBoxReader,``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="length">Length of the array.</param>
            <param name="forLoop">Each element with an index parameter and this reader (to avoid closures).</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArray``1(System.Func{System.Int32,GBX.NET.GameBoxReader,``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="forLoop">Each element with an index parameter and this reader (to avoid closures).</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArray``1(System.Int32,System.Func{GBX.NET.GameBoxReader,``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="length">Length of the array.</param>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArray``1(System.Func{GBX.NET.GameBoxReader,``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArrayAsync``1(System.Int32,System.Func{GBX.NET.GameBoxReader,System.Threading.Tasks.Task{``0}})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="length">Length of the array.</param>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArrayAsync``1(System.Func{GBX.NET.GameBoxReader,System.Threading.Tasks.Task{``0}})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArrayUntilFacade``1">
            <summary>
            Continues reading the stream until facade (<c>0xFACADE01</c>) is reached and the result is converted into an array of <typeparamref name="T"/>.
            </summary>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArrayUntilFacade``2">
            <summary>
            Continues reading the stream until facade (<c>0xFACADE01</c>) is reached and the result is converted into an array of <typeparamref name="T1"/> and <typeparamref name="T2"/>.
            </summary>
            <returns>An tuple of arrays.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadArrayUntilFacade``3">
            <summary>
            Continues reading the stream until facade (<c>0xFACADE01</c>) is reached and the result is converted into an array of <typeparamref name="T1"/>, <typeparamref name="T2"/> and <typeparamref name="T3"/>.
            </summary>
            <returns>An tuple of arrays.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.PeekArray``1(System.Int32)">
            <summary>
            Returns the upcoming array but does not consume it.
            </summary>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.PeekArray``1(System.Int32,System.Func{System.Int32,``0})">
            <summary>
            Returns the upcoming array but does not consume it.
            </summary>
            <param name="length">Length of the array.</param>
            <param name="forLoop">Each element with an index parameter.</param>
            <returns>An array of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadEnumerable``1(System.Int32,System.Func{``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>. Instead of array allocation, elements are yielded one by one.
            </summary>
            <typeparam name="T">Type of the enumerable.</typeparam>
            <param name="length">Length of the enumerable.</param>
            <param name="forLoop">Each element.</param>
            <returns>Enumerable of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadEnumerable``1(System.Func{``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>. Instead of array allocation, elements are yielded one by one.
            </summary>
            <typeparam name="T">Type of the enumerable.</typeparam>
            <param name="forLoop">Each element.</param>
            <returns>Enumerable of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadEnumerable``1(System.Int32,System.Func{GBX.NET.GameBoxReader,``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>. Instead of array allocation, elements are yielded one by one.
            </summary>
            <typeparam name="T">Type of the enumerable.</typeparam>
            <param name="length">Length of the enumerable.</param>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>Enumerable of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadEnumerable``1(System.Func{GBX.NET.GameBoxReader,``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>. Instead of array allocation, elements are yielded one by one.
            </summary>
            <typeparam name="T">Type of the enumerable.</typeparam>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>Enumerable of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadEnumerable``1(System.Int32,System.Func{System.Int32,``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>. Instead of array allocation, elements are yielded one by one.
            </summary>
            <typeparam name="T">Type of the enumerable.</typeparam>
            <param name="length">Length of the enumerable.</param>
            <param name="forLoop">Each element with an index parameter.</param>
            <returns>Enumerable of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadEnumerable``1(System.Func{System.Int32,``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>. Instead of array allocation, elements are yielded one by one.
            </summary>
            <typeparam name="T">Type of the enumerable.</typeparam>
            <param name="forLoop">Each element with an index parameter.</param>
            <returns>Enumerable of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadEnumerable``1(System.Int32,System.Func{System.Int32,GBX.NET.GameBoxReader,``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>. Instead of array allocation, elements are yielded one by one.
            </summary>
            <typeparam name="T">Type of the enumerable.</typeparam>
            <param name="length">Length of the enumerable.</param>
            <param name="forLoop">Each element with an index parameter and this reader (to avoid closures).</param>
            <returns>Enumerable of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadEnumerable``1(System.Func{System.Int32,GBX.NET.GameBoxReader,``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>. Instead of array allocation, elements are yielded one by one.
            </summary>
            <typeparam name="T">Type of the enumerable.</typeparam>
            <param name="forLoop">Each element with an index parameter and this reader (to avoid closures).</param>
            <returns>Enumerable of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadEnumerableAsync``1(System.Int32,System.Func{GBX.NET.GameBoxReader,System.Threading.Tasks.Task{``0}})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>. Instead of array allocation, elements are yielded one by one.
            </summary>
            <typeparam name="T">Type of the enumerable.</typeparam>
            <param name="length">Length of the enumerable.</param>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>Enumerable of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadEnumerableAsync``1(System.Func{GBX.NET.GameBoxReader,System.Threading.Tasks.Task{``0}})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>. Instead of array allocation, elements are yielded one by one.
            </summary>
            <typeparam name="T">Type of the enumerable.</typeparam>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>Enumerable of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadList``1(System.Int32,System.Func{``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>. A list is allocated and elements are added via enumeration.
            </summary>
            <typeparam name="T">Type of the list.</typeparam>
            <param name="length">Length of the list.</param>
            <param name="forLoop">Each element.</param>
            <returns>List of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadList``1(System.Func{``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>. A list is allocated and elements are added via enumeration.
            </summary>
            <typeparam name="T">Type of the list.</typeparam>
            <param name="forLoop">Each element.</param>
            <returns>List of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadList``1(System.Int32,System.Func{GBX.NET.GameBoxReader,``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>. A list is allocated and elements are added via enumeration.
            </summary>
            <typeparam name="T">Type of the list.</typeparam>
            <param name="length">Length of the list.</param>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>List of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadList``1(System.Func{GBX.NET.GameBoxReader,``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>. A list is allocated and elements are added via enumeration.
            </summary>
            <typeparam name="T">Type of the list.</typeparam>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>List of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadList``1(System.Int32,System.Func{System.Int32,``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>. A list is allocated and elements are added via enumeration.
            </summary>
            <typeparam name="T">Type of the list.</typeparam>
            <param name="length">Length of the list.</param>
            <param name="forLoop">Each element with an index parameter.</param>
            <returns>List of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadList``1(System.Func{System.Int32,``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>. A list is allocated and elements are added via enumeration.
            </summary>
            <typeparam name="T">Type of the list.</typeparam>
            <param name="forLoop">Each element with an index parameter.</param>
            <returns>List of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadList``1(System.Int32,System.Func{System.Int32,GBX.NET.GameBoxReader,``0})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>. A list is allocated and elements are added via enumeration.
            </summary>
            <typeparam name="T">Type of the list.</typeparam>
            <param name="length">Length of the list.</param>
            <param name="forLoop">Each element with an index parameter and this reader (to avoid closures).</param>
            <returns>List of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadList``1(System.Func{System.Int32,GBX.NET.GameBoxReader,``0})">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each element requiring to return an instance of <typeparamref name="T"/>. A list is allocated and elements are added via enumeration.
            </summary>
            <typeparam name="T">Type of the list.</typeparam>
            <param name="forLoop">Each element with an index parameter and this reader (to avoid closures).</param>
            <returns>List of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadListAsync``1(System.Int32,System.Func{GBX.NET.GameBoxReader,System.Threading.Tasks.Task{``0}})">
            <summary>
            Does a for loop with <paramref name="length"/> parameter, each element requiring to return an instance of <typeparamref name="T"/>. A list is allocated and elements are added via enumeration.
            </summary>
            <typeparam name="T">Type of the list.</typeparam>
            <param name="length">Length of the list.</param>
            <param name="forLoop">Each element with this reader (to avoid closures).</param>
            <returns>List of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadDictionary``2(System.Boolean)">
            <summary>
            Reads values in a dictionary kind (first key, then value). For node dictionaries, use the <see cref="M:GBX.NET.GameBoxReader.ReadDictionaryNode``2(System.Boolean,System.Func{GBX.NET.GameBoxReader,``0})"/> method for better performance.
            </summary>
            <typeparam name="TKey">One of the supported types of <see cref="M:GBX.NET.GameBoxReader.Read``1"/>. Mustn't be null.</typeparam>
            <typeparam name="TValue">One of the supported types of <see cref="M:GBX.NET.GameBoxReader.Read``1"/>.</typeparam>
            <param name="overrideKey">If the pair in the dictionary should be overriden by the new value when a duplicate key is found. It is recommended to keep it false to easily spot errors.</param>
            <returns>A dictionary.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the dictionary.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadDictionaryNode``2(System.Boolean,System.Func{GBX.NET.GameBoxReader,``0})">
            <summary>
            Reads nodes in a dictionary kind (first key, then value).
            </summary>
            <typeparam name="TKey">Type of the key. Mustn't be nullable.</typeparam>
            <typeparam name="TValue">A node that is presented as node reference.</typeparam>
            <param name="overrideKey">If the pair in the dictionary should be overriden by the new value when a duplicate key is found. It is recommended to keep it false to easily spot errors.</param>
            <param name="keyReader">An optional way to read the key. Default is <see cref="M:GBX.NET.GameBoxReader.Read``1"/></param>
            <returns>A dictionary.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the dictionary.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadSpan``1(System.Int32,System.Boolean)">
            <summary>
            Reads a <typeparamref name="T"/> span with the <paramref name="length"/> (<paramref name="lengthInBytes"/> determines the format) by using <see cref="M:System.Runtime.InteropServices.MemoryMarshal.Cast``2(System.Span{``0})"/>, resulting in more optimized read of array for value types.
            </summary>
            <typeparam name="T">A struct type.</typeparam>
            <param name="length">Length of the array.</param>
            <param name="lengthInBytes">If to take length as the size of the byte array and not the <see cref="T:GBX.NET.Vec3"/> array.</param>
            <returns>A span of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadSpan``1(System.Boolean)">
            <summary>
            First reads an <see cref="T:System.Int32"/> representing the length, then reads a <typeparamref name="T"/> span with the length (<paramref name="lengthInBytes"/> determines the format) by using <see cref="M:System.Runtime.InteropServices.MemoryMarshal.Cast``2(System.Span{``0})"/>, resulting in more optimized read of array for value types.
            </summary>
            <typeparam name="T">A struct type.</typeparam>
            <param name="lengthInBytes">If to take length as the size of the byte array and not the <see cref="T:GBX.NET.Vec3"/> array.</param>
            <returns>A span of <typeparamref name="T"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadTimeInt32">
            <summary>
            Reads an <see cref="T:System.Int32"/>, which is then presented as time in milliseconds.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeInt32"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadTimeInt32Nullable">
            <summary>
            Reads an <see cref="T:System.Int32"/>, which is then presented as time in milliseconds. If value is -1, a null is returned instead.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeInt32"/>. Null if the read value is -1.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadTimeSingle">
            <summary>
            Reads a <see cref="T:System.Single"/>, which is then presented as time in seconds.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeSingle"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadTimeSingleNullable">
            <summary>
            Reads a <see cref="T:System.Single"/>, which is then presented as time in seconds. If value is -1, a null is returned instead.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeSingle"/>. Null if the read value is -1.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadInt32_s">
            <summary>
            Reads an <see cref="T:System.Int32"/>, which is then presented as time in seconds.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeInt32"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadInt32_ms">
            <summary>
            Reads an <see cref="T:System.Int32"/>, which is then presented as time in milliseconds.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeInt32"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadInt32_sn">
            <summary>
            Reads an <see cref="T:System.Int32"/>, which is then presented as time in seconds. If value is -1, a null is returned instead.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeInt32"/>. Null if the read value is -1.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadInt32_msn">
            <summary>
            Reads an <see cref="T:System.Int32"/>, which is then presented as time in milliseconds. If value is -1, a null is returned instead.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeInt32"/>. Null if the read value is -1.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadSingle_s">
            <summary>
            Reads a <see cref="T:System.Single"/>, which is then presented as time in seconds.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeSingle"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadSingle_ms">
            <summary>
            Reads a <see cref="T:System.Single"/>, which is then presented as time in milliseconds.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeSingle"/>.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadSingle_sn">
            <summary>
            Reads a <see cref="T:System.Single"/>, which is then presented as time in seconds. If value is -1, a null is returned instead.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeSingle"/>. Null if the read value is -1.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadSingle_msn">
            <summary>
            Reads a <see cref="T:System.Single"/>, which is then presented as time in milliseconds. If value is -1, a null is returned instead.
            </summary>
            <returns>A <see cref="T:TmEssentials.TimeSingle"/>. Null if the read value is -1.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadVec3Unit2">
            <summary>
            Reads a 2-byte <see cref="T:GBX.NET.Vec3"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadVec3Unit4">
            <summary>
            Reads a 4-byte <see cref="T:GBX.NET.Vec3"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GBX.NET.GameBoxReader.ReadQuat6">
            <summary>
            Reads a 6-byte <see cref="T:GBX.NET.Quat"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GBX.NET.GameBoxReaderWriter">
            <summary>
            Provides single-method reading and writing by wrapping <see cref="T:GBX.NET.GameBoxReader"/> and <see cref="T:GBX.NET.GameBoxWriter"/> depending on the mode.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBoxReaderWriter.Reader">
            <summary>
            Reader component of the reader-writer.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBoxReaderWriter.Writer">
            <summary>
            Writer component of the reader-writer.
            </summary>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.#ctor(GBX.NET.GameBoxReader)">
            <summary>
            Constructs a reader-writer in reader mode.
            </summary>
            <param name="reader">Reader to use.</param>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.#ctor(GBX.NET.GameBoxWriter)">
            <summary>
            Constructs a reader-writer in writer mode.
            </summary>
            <param name="writer">Writer to use.</param>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.#ctor(GBX.NET.GameBoxReader,GBX.NET.GameBoxWriter)">
            <summary>
            Constructs a reader-writer in reader and writer mode at the same time.
            </summary>
            <param name="reader">Reader to use.</param>
            <param name="writer">Writer to use.</param>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Boolean(System.Boolean,System.Boolean)">
            <summary>
            Reads or writes a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <param name="asByte">If the <see cref="T:System.Boolean"/> is going to be read/written as 1 byte instead of 4.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Boolean(System.Nullable{System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Boolean"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <param name="asByte">If the <see cref="T:System.Boolean"/> is going to be read/written as 1 byte instead of 4.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Boolean(System.Boolean@,System.Boolean)">
            <summary>
            Reads or writes a <see cref="T:System.Boolean"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <param name="asByte">If the <see cref="T:System.Boolean"/> is going to be read/written as 1 byte instead of 4.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Boolean(System.Nullable{System.Boolean}@,System.Boolean,System.Boolean)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Boolean"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <param name="asByte">If the <see cref="T:System.Boolean"/> is going to be read/written as 1 byte instead of 4.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte(System.Byte)">
            <summary>
            Reads or writes a <see cref="T:System.Byte"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte(System.Nullable{System.Byte},System.Byte)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Byte"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte(System.Byte@)">
            <summary>
            Reads or writes a <see cref="T:System.Byte"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte(System.Nullable{System.Byte}@,System.Byte)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Byte"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte(System.Int32)">
            <summary>
            Reads or writes a <see cref="T:System.Byte"/> from casted <see cref="T:System.Int32"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte(System.Nullable{System.Int32},System.Int32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Byte"/> from casted nullable <see cref="T:System.Int32"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte(System.Int32@)">
            <summary>
            Reads or writes a <see cref="T:System.Byte"/> from casted <see cref="T:System.Int32"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte(System.Nullable{System.Int32}@,System.Int32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Byte"/> from casted nullable <see cref="T:System.Int32"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int16(System.Int16)">
            <summary>
            Reads or writes a <see cref="T:System.Int16"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int16(System.Nullable{System.Int16},System.Int16)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int16"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int16(System.Int16@)">
            <summary>
            Reads or writes a <see cref="T:System.Int16"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int16(System.Nullable{System.Int16}@,System.Int16)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int16"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32(System.Int32)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32(System.Nullable{System.Int32},System.Int32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int32"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32(System.Int32@)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32(System.Nullable{System.Int32}@,System.Int32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int32"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int64(System.Int64)">
            <summary>
            Reads or writes a <see cref="T:System.Int64"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int64(System.Nullable{System.Int64},System.Int64)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int64"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int64(System.Int64@)">
            <summary>
            Reads or writes an <see cref="T:System.Int64"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int64(System.Nullable{System.Int64}@,System.Int64)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int32"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt16(System.UInt16)">
            <summary>
            Reads or writes a <see cref="T:System.UInt16"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt16(System.Nullable{System.UInt16},System.UInt16)">
            <summary>
            Reads or writes a nullable <see cref="T:System.UInt16"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt16(System.UInt16@)">
            <summary>
            Reads or writes an <see cref="T:System.UInt16"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt16(System.Nullable{System.UInt16}@,System.UInt16)">
            <summary>
            Reads or writes a nullable <see cref="T:System.UInt16"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt32(System.UInt32)">
            <summary>
            Reads or writes a <see cref="T:System.UInt32"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt32(System.Nullable{System.UInt32},System.UInt32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.UInt32"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt32(System.UInt32@)">
            <summary>
            Reads or writes an <see cref="T:System.UInt32"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt32(System.Nullable{System.UInt32}@,System.UInt32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.UInt32"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt64(System.UInt64)">
            <summary>
            Reads or writes a <see cref="T:System.UInt64"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt64(System.Nullable{System.UInt64},System.UInt64)">
            <summary>
            Reads or writes a nullable <see cref="T:System.UInt64"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt64(System.UInt64@)">
            <summary>
            Reads or writes an <see cref="T:System.UInt64"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UInt64(System.Nullable{System.UInt64}@,System.UInt64)">
            <summary>
            Reads or writes a nullable <see cref="T:System.UInt64"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single(System.Single)">
            <summary>
            Reads or writes a <see cref="T:System.Single"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single(System.Nullable{System.Single},System.Single)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Single"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single(System.Single@)">
            <summary>
            Reads or writes a <see cref="T:System.Single"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single(System.Nullable{System.Single}@,System.Single)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Single"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.BigInt(System.Numerics.BigInteger,System.Int32)">
            <summary>
            Reads or writes a <paramref name="byteLength"/> amount of bytes as a <see cref="T:System.Numerics.BigInteger"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <param name="byteLength">Amount of bytes to use for reading/writing.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.BigInt(System.Nullable{System.Numerics.BigInteger},System.Int32,System.Numerics.BigInteger)">
            <summary>
            Reads or writes a <paramref name="byteLength"/> amount of bytes as a nullable <see cref="T:System.Numerics.BigInteger"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="byteLength">Amount of bytes to use for reading/writing.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.BigInt(System.Numerics.BigInteger@,System.Int32)">
            <summary>
            Reads or writes a <paramref name="byteLength"/> amount of bytes as a <see cref="T:System.Numerics.BigInteger"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <param name="byteLength">Amount of bytes to use for reading/writing.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.BigInt(System.Nullable{System.Numerics.BigInteger}@,System.Int32,System.Numerics.BigInteger)">
            <summary>
            Reads or writes a <paramref name="byteLength"/> amount of bytes as a nullable <see cref="T:System.Numerics.BigInteger"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="byteLength">Amount of bytes to use for reading/writing.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int128(System.Numerics.BigInteger)">
            <summary>
            Reads or writes a number with a size of 16 bytes as a <see cref="T:System.Numerics.BigInteger"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int128(System.Nullable{System.Numerics.BigInteger},System.Numerics.BigInteger)">
            <summary>
            Reads or writes a number with a size of 16 bytes as a nullable <see cref="T:System.Numerics.BigInteger"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int128(System.Numerics.BigInteger@)">
            <summary>
            Reads or writes a number with a size of 16 bytes as a <see cref="T:System.Numerics.BigInteger"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int128(System.Nullable{System.Numerics.BigInteger}@,System.Numerics.BigInteger)">
            <summary>
            Reads or writes a number with a size of 16 bytes as a nullable <see cref="T:System.Numerics.BigInteger"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int2(GBX.NET.Int2)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Int2"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int2(System.Nullable{GBX.NET.Int2},GBX.NET.Int2)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Int2"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int2(GBX.NET.Int2@)">
            <summary>
            Reads or writes an <see cref="T:GBX.NET.Int2"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int2(System.Nullable{GBX.NET.Int2}@,GBX.NET.Int2)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Int2"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int3(GBX.NET.Int3)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Int3"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int3(System.Nullable{GBX.NET.Int3},GBX.NET.Int3)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Int3"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int3(GBX.NET.Int3@)">
            <summary>
            Reads or writes an <see cref="T:GBX.NET.Int3"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int3(System.Nullable{GBX.NET.Int3}@,GBX.NET.Int3)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Int3"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte3(GBX.NET.Byte3)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Byte3"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte3(System.Nullable{GBX.NET.Byte3},GBX.NET.Byte3)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Byte3"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte3(GBX.NET.Byte3@)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Byte3"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Byte3(System.Nullable{GBX.NET.Byte3}@,GBX.NET.Byte3)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Byte3"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec2(GBX.NET.Vec2)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Vec2"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec2(System.Nullable{GBX.NET.Vec2},GBX.NET.Vec2)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Vec2"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec2(GBX.NET.Vec2@)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Vec2"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec2(System.Nullable{GBX.NET.Vec2}@,GBX.NET.Vec2)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Vec2"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec3(GBX.NET.Vec3)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Vec3"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec3(System.Nullable{GBX.NET.Vec3},GBX.NET.Vec3)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Vec3"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec3(GBX.NET.Vec3@)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Vec3"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec3(System.Nullable{GBX.NET.Vec3}@,GBX.NET.Vec3)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Vec3"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec4(GBX.NET.Vec4)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Vec4"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec4(System.Nullable{GBX.NET.Vec4},GBX.NET.Vec4)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Vec4"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec4(GBX.NET.Vec4@)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Vec4"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Vec4(System.Nullable{GBX.NET.Vec4}@,GBX.NET.Vec4)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Vec4"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Rect(GBX.NET.Rect)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Rect"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Rect(System.Nullable{GBX.NET.Rect},GBX.NET.Rect)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Rect"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Rect(GBX.NET.Rect@)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Rect"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Rect(System.Nullable{GBX.NET.Rect}@,GBX.NET.Rect)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Rect"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Box(GBX.NET.Box)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Box"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Box(System.Nullable{GBX.NET.Box},GBX.NET.Box)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Box"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Box(GBX.NET.Box@)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Box"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Box(System.Nullable{GBX.NET.Box}@,GBX.NET.Box)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Box"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Quat(GBX.NET.Quat)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Quat"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Quat(System.Nullable{GBX.NET.Quat},GBX.NET.Quat)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Quat"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Quat(GBX.NET.Quat@)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.Quat"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Quat(System.Nullable{GBX.NET.Quat}@,GBX.NET.Quat)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Quat"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Iso4(GBX.NET.Iso4)">
            <summary>
            Reads or writes an <see cref="T:GBX.NET.Iso4"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Iso4(System.Nullable{GBX.NET.Iso4},GBX.NET.Iso4)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Iso4"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Iso4(GBX.NET.Iso4@)">
            <summary>
            Reads or writes an <see cref="T:GBX.NET.Iso4"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Iso4(System.Nullable{GBX.NET.Iso4}@,GBX.NET.Iso4)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Iso4"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Mat3(GBX.NET.Mat3)">
            <summary>
            Reads or writes an <see cref="T:GBX.NET.Mat3"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Mat3(System.Nullable{GBX.NET.Mat3},GBX.NET.Mat3)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Mat3"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Mat3(GBX.NET.Mat3@)">
            <summary>
            Reads or writes an <see cref="T:GBX.NET.Mat3"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Mat3(System.Nullable{GBX.NET.Mat3}@,GBX.NET.Mat3)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Mat3"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Mat4(GBX.NET.Mat4)">
            <summary>
            Reads or writes an <see cref="T:GBX.NET.Mat4"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Mat4(System.Nullable{GBX.NET.Mat4},GBX.NET.Mat4)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Mat4"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Mat4(GBX.NET.Mat4@)">
            <summary>
            Reads or writes an <see cref="T:GBX.NET.Mat4"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Mat4(System.Nullable{GBX.NET.Mat4}@,GBX.NET.Mat4)">
            <summary>
            Reads or writes a nullable <see cref="T:GBX.NET.Mat4"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeOfDay(System.Nullable{System.TimeSpan})">
            <summary>
            Reads or writes a nullable time of day using <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="variable">Variable to write.Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeOfDay(System.Nullable{System.TimeSpan}@)">
            <summary>
            Reads or writes a nullable time of day using <see cref="T:System.TimeSpan"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.FileTime(System.DateTime)">
            <summary>
            Reads or writes an <see cref="T:System.DateTime"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.FileTime(System.Nullable{System.DateTime},System.DateTime)">
            <summary>
            Reads or writes a nullable <see cref="T:System.DateTime"/>.
            </summary>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.FileTime(System.DateTime@)">
            <summary>
            Reads or writes an <see cref="T:System.DateTime"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.FileTime(System.Nullable{System.DateTime}@,System.DateTime)">
            <summary>
            Reads or writes a nullable <see cref="T:System.DateTime"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.FileRef(GBX.NET.FileRef)">
            <summary>
            Reads or writes a <see cref="T:GBX.NET.FileRef"/>.
            </summary>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.FileRef(GBX.NET.FileRef@)">
            <summary>
            Reads or writes an <see cref="T:GBX.NET.FileRef"/> through reference.
            </summary>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Id(System.String,System.Boolean)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">GBX has the first Id presented without a version. Solution exists, but the stream does not support seeking.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.CorruptedIdException">The Id index is not matching any known values.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Id(System.String@,System.Boolean)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">GBX has the first Id presented without a version. Solution exists, but the stream does not support seeking.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.CorruptedIdException">The Id index is not matching any known values.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Collection(System.Nullable{GBX.NET.Id})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">GBX has the first Id presented without a version. Solution exists, but the stream does not support seeking.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.CorruptedIdException">The Id index is not matching any known values.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Collection(System.Nullable{GBX.NET.Id}@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">GBX has the first Id presented without a version. Solution exists, but the stream does not support seeking.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.CorruptedIdException">The Id index is not matching any known values.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Ident(GBX.NET.Ident)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">GBX has the first Id presented without a version. Solution exists, but the stream does not support seeking.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.CorruptedIdException">The Id index is not matching any known values.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Ident(GBX.NET.Ident@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">GBX has the first Id presented without a version. Solution exists, but the stream does not support seeking.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.CorruptedIdException">The Id index is not matching any known values.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.EnumByte``1(``0@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.EnumByte``1(System.Nullable{``0}@,``0)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.EnumInt32``1(``0@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.EnumInt32``1(System.Nullable{``0}@,``0)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.String(System.String,GBX.NET.StringLengthPrefix)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="readPrefix"/> is <see cref="F:GBX.NET.StringLengthPrefix.None"/>.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.String(System.String@,GBX.NET.StringLengthPrefix)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="readPrefix"/> is <see cref="F:GBX.NET.StringLengthPrefix.None"/>.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Uri(System.Uri@,GBX.NET.StringLengthPrefix)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="readPrefix"/> is <see cref="F:GBX.NET.StringLengthPrefix.None"/>.</exception>
            <exception cref="T:GBX.NET.Exceptions.StringLengthOutOfRangeException">String length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Bytes(System.Byte[],System.Nullable{System.Int32})">
            <exception cref="T:System.ArgumentException">The number of decoded characters to read is greater than count. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="count"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Bytes(System.Byte[]@,System.Int32)">
            <exception cref="T:System.ArgumentException">The number of decoded characters to read is greater than count. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="count"/> is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Bytes(System.Byte[]@)">
            <exception cref="T:System.ArgumentException">The number of decoded characters to read is greater than count. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[],System.Nullable{System.Int32})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[]@,System.Int32)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[]@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[],System.Func{System.Int32,``0},System.Action{``0})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[]@,System.Func{System.Int32,``0},System.Action{``0})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[],System.Func{System.Int32,GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[]@,System.Func{System.Int32,GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[],System.Func{``0},System.Action{``0})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[]@,System.Func{``0},System.Action{``0})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[],System.Func{GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[]@,System.Func{GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Array``1(``0[],System.Action{GBX.NET.GameBoxReaderWriter,``0},System.Boolean)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopReadWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ArrayString(System.String[])">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ArrayString(System.String[]@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ArrayId(System.String[])">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ArrayId(System.String[]@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ArrayNode``1(``0[])">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException">Body of <see cref="P:GBX.NET.GameBoxReaderWriter.Reader"/> or <see cref="P:GBX.NET.GameBoxReaderWriter.Writer"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ArrayNode``1(``0[]@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException">Body of <see cref="P:GBX.NET.GameBoxReaderWriter.Reader"/> or <see cref="P:GBX.NET.GameBoxReaderWriter.Writer"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ArrayNode``1(GBX.NET.ExternalNode{``0}[])">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException">Body of <see cref="P:GBX.NET.GameBoxReaderWriter.Reader"/> or <see cref="P:GBX.NET.GameBoxReaderWriter.Writer"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ArrayNode``1(GBX.NET.ExternalNode{``0}[]@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException">Body of <see cref="P:GBX.NET.GameBoxReaderWriter.Reader"/> or <see cref="P:GBX.NET.GameBoxReaderWriter.Writer"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.List``1(System.Collections.Generic.IList{``0},System.Func{System.Int32,``0},System.Action{``0})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.List``1(System.Collections.Generic.IList{``0}@,System.Func{System.Int32,``0},System.Action{``0})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.List``1(System.Collections.Generic.IList{``0},System.Func{System.Int32,GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.List``1(System.Collections.Generic.IList{``0}@,System.Func{System.Int32,GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.List``1(System.Collections.Generic.IList{``0},System.Func{``0},System.Action{``0})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.List``1(System.Collections.Generic.IList{``0}@,System.Func{``0},System.Action{``0})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.List``1(System.Collections.Generic.IList{``0},System.Func{GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.List``1(System.Collections.Generic.IList{``0}@,System.Func{GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.List``1(System.Collections.Generic.IList{``0},System.Action{GBX.NET.GameBoxReaderWriter,``0})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopReadWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ListAsync``1(System.Collections.Generic.IList{``0},System.Func{GBX.NET.GameBoxReader,System.Threading.Tasks.Task{``0}},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoopRead"/> or <paramref name="forLoopWrite"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ListFileRef(System.Collections.Generic.IList{GBX.NET.FileRef})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ListFileRef(System.Collections.Generic.IList{GBX.NET.FileRef}@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ListNode``1(System.Collections.Generic.IList{``0})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException">Body of <see cref="P:GBX.NET.GameBoxReaderWriter.Reader"/> or <see cref="P:GBX.NET.GameBoxReaderWriter.Writer"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ListNode``1(System.Collections.Generic.IList{``0}@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException">Body of <see cref="P:GBX.NET.GameBoxReaderWriter.Reader"/> or <see cref="P:GBX.NET.GameBoxReaderWriter.Writer"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.ListNodeAsync``1(System.Collections.Generic.IList{``0},System.Threading.CancellationToken)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">List count is negative.</exception>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException">Body of <see cref="P:GBX.NET.GameBoxReaderWriter.Reader"/> or <see cref="P:GBX.NET.GameBoxReaderWriter.Writer"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Dictionary``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
            <param name="dictionary">Dictionary to write. Ignored in read mode.</param>
            <param name="overrideKey">Only affecting read mode: if the pair in the dictionary should be overriden by the new value when a duplicate key is read. It is recommended to keep it false to easily spot errors.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the dictionary.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Dictionary``2(System.Collections.Generic.IDictionary{``0,``1}@,System.Boolean)">
            <param name="dictionary">Dictionary to read or write. Read mode sets <paramref name="dictionary"/>, write mode uses <paramref name="dictionary"/> to write the value (keeping <paramref name="dictionary"/> unchanged).</param>
            <param name="overrideKey">Only affecting read mode: if the pair in the dictionary should be overriden by the new value when a duplicate key is read. It is recommended to keep it false to easily spot errors.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the dictionary.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.DictionaryNode``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean,System.Nullable{System.ValueTuple{System.Func{GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter}}})">
            <param name="dictionary">Dictionary of <see cref="T:GBX.NET.Node"/> values to write. Ignored in read mode.</param>
            <param name="overrideKey">Only affecting read mode: if the pair in the dictionary should be overriden by the new value when a duplicate key is read. It is recommended to keep it false to easily spot errors.</param>
            <param name="keyReaderWriter">A way to read and write the key. Null will use the <see cref="M:GBX.NET.GameBoxReader.Read``1"/> and <see cref="M:GBX.NET.GameBoxWriter.WriteAny(System.Object)"/>, which are slower.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the dictionary.</exception>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException">Body of <see cref="P:GBX.NET.GameBoxReaderWriter.Reader"/> or <see cref="P:GBX.NET.GameBoxReaderWriter.Writer"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.DictionaryNode``2(System.Collections.Generic.IDictionary{``0,``1}@,System.Boolean,System.Nullable{System.ValueTuple{System.Func{GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter}}})">
            <param name="dictionary">Dictionary of <see cref="T:GBX.NET.Node"/> values to read or write. Read mode sets <paramref name="dictionary"/>, write mode uses <paramref name="dictionary"/> to write the value (keeping <paramref name="dictionary"/> unchanged).</param>
            <param name="overrideKey">Only affecting read mode: if the pair in the dictionary should be overriden by the new value when a duplicate key is read. It is recommended to keep it false to easily spot errors.</param>
            <param name="keyReaderWriter">A way to read and write the key. Null will use the <see cref="M:GBX.NET.GameBoxReader.Read``1"/> and <see cref="M:GBX.NET.GameBoxWriter.WriteAny(System.Object)"/>, which are slower.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the dictionary.</exception>
            <exception cref="T:GBX.NET.Exceptions.PropertyNullException">Body of <see cref="P:GBX.NET.GameBoxReaderWriter.Reader"/> or <see cref="P:GBX.NET.GameBoxReaderWriter.Writer"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.DictionaryNodeAsync``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean,System.Nullable{System.ValueTuple{System.Func{GBX.NET.GameBoxReader,``0},System.Action{``0,GBX.NET.GameBoxWriter}}},System.Threading.CancellationToken)">
            <param name="dictionary">Dictionary of <see cref="T:GBX.NET.Node"/> values to read or write. Read mode sets <paramref name="dictionary"/>, write mode uses <paramref name="dictionary"/> to write the value (keeping <paramref name="dictionary"/> unchanged).</param>
            <param name="overrideKey">Only affecting read mode: if the pair in the dictionary should be overriden by the new value when a duplicate key is read. It is recommended to keep it false to easily spot errors.</param>
            <param name="keyReaderWriter">A way to read and write the key. Null will use the <see cref="M:GBX.NET.GameBoxReader.Read``1"/> and <see cref="M:GBX.NET.GameBoxWriter.WriteAny(System.Object)"/>, which are slower.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.NodeRef(GBX.NET.Node)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.NodeRef(GBX.NET.Node@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.NodeRef(GBX.NET.Node,GBX.NET.GameBoxRefTable.File@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.NodeRef(GBX.NET.Node@,GBX.NET.GameBoxRefTable.File@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.NodeRef``1(``0)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.NodeRef``1(``0@,System.Boolean)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.NodeRef``1(``0,GBX.NET.GameBoxRefTable.File@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.NodeRef``1(``0@,GBX.NET.GameBoxRefTable.File@)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.NodeRefAsync(GBX.NET.Node,System.Threading.CancellationToken)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.NodeRefAsync``1(``0,System.Threading.CancellationToken)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeInt32(TmEssentials.TimeInt32)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of milliseconds.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeInt32(System.Nullable{TmEssentials.TimeInt32},TmEssentials.TimeInt32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int32"/> as a nullable <see cref="T:TmEssentials.TimeInt32"/> of milliseconds.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeInt32(TmEssentials.TimeInt32@)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of milliseconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeInt32(System.Nullable{TmEssentials.TimeInt32}@,TmEssentials.TimeInt32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int32"/> as a nullable <see cref="T:TmEssentials.TimeInt32"/> of milliseconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeInt32Nullable(System.Nullable{TmEssentials.TimeInt32})">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of milliseconds. If the read value is -1, null is returned. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned. If the read value is -1, null is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeInt32Nullable(System.Nullable{TmEssentials.TimeInt32}@)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of milliseconds through reference. If the read value is -1, <paramref name="variable"/> is set to null. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeSingle(TmEssentials.TimeSingle)">
            <summary>
            Reads or writes a <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of seconds.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeSingle(System.Nullable{TmEssentials.TimeSingle},TmEssentials.TimeSingle)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Single"/> as a nullable <see cref="T:TmEssentials.TimeSingle"/> of seconds.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeSingle(TmEssentials.TimeSingle@)">
            <summary>
            Reads or writes a <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of seconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeSingle(System.Nullable{TmEssentials.TimeSingle}@,TmEssentials.TimeSingle)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Single"/> as a nullable <see cref="T:TmEssentials.TimeSingle"/> of seconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeSingleNullable(System.Nullable{TmEssentials.TimeSingle})">
            <summary>
            Reads or writes an <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of seconds. If the read value is -1, null is returned. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned. If the read value is -1, null is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.TimeSingleNullable(System.Nullable{TmEssentials.TimeSingle}@)">
            <summary>
            Reads or writes an <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of seconds through reference. If the read value is -1, <paramref name="variable"/> is set to null. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_s(TmEssentials.TimeInt32)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as an <see cref="T:TmEssentials.TimeInt32"/> of seconds.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_s(System.Nullable{TmEssentials.TimeInt32},TmEssentials.TimeInt32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int32"/> as a nullable <see cref="T:TmEssentials.TimeInt32"/> of seconds.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_s(TmEssentials.TimeInt32@)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of seconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_s(System.Nullable{TmEssentials.TimeInt32}@,TmEssentials.TimeInt32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int32"/> as a nullable <see cref="T:TmEssentials.TimeInt32"/> of seconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_ms(TmEssentials.TimeInt32)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of milliseconds.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_ms(System.Nullable{TmEssentials.TimeInt32},TmEssentials.TimeInt32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int32"/> as a nullable <see cref="T:TmEssentials.TimeInt32"/> of milliseconds.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_ms(TmEssentials.TimeInt32@)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of milliseconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_ms(System.Nullable{TmEssentials.TimeInt32}@,TmEssentials.TimeInt32)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Int32"/> as a nullable <see cref="T:TmEssentials.TimeInt32"/> of milliseconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_sn(System.Nullable{TmEssentials.TimeInt32})">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of seconds. If the read value is -1, null is returned. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromSeconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned. If the read value is -1, null is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_sn(System.Nullable{TmEssentials.TimeInt32}@)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of seconds through reference. If the read value is -1, <paramref name="variable"/> is set to null. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromSeconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_msn(System.Nullable{TmEssentials.TimeInt32})">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of milliseconds. If the read value is -1, null is returned. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned. If the read value is -1, null is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Int32_msn(System.Nullable{TmEssentials.TimeInt32}@)">
            <summary>
            Reads or writes an <see cref="T:System.Int32"/> as a <see cref="T:TmEssentials.TimeInt32"/> of milliseconds through reference. If the read value is -1, <paramref name="variable"/> is set to null. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Int32"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeInt32"/> using <see cref="M:TmEssentials.TimeInt32.FromMilliseconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_s(TmEssentials.TimeSingle)">
            <summary>
            Reads or writes a <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of seconds.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_s(System.Nullable{TmEssentials.TimeSingle},TmEssentials.TimeSingle)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Single"/> as a nullable <see cref="T:TmEssentials.TimeSingle"/> of seconds.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_s(TmEssentials.TimeSingle@)">
            <summary>
            Reads or writes a <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of seconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_s(System.Nullable{TmEssentials.TimeSingle}@,TmEssentials.TimeSingle)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Single"/> as a nullable <see cref="T:TmEssentials.TimeSingle"/> of seconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_ms(TmEssentials.TimeSingle)">
            <summary>
            Reads or writes an <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of milliseconds.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_ms(System.Nullable{TmEssentials.TimeSingle},TmEssentials.TimeSingle)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Single"/> as a nullable <see cref="T:TmEssentials.TimeSingle"/> of milliseconds.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to write. If null, <paramref name="defaultValue"/> is written. Ignored in read mode.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned (including null).</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_ms(TmEssentials.TimeSingle@)">
            <summary>
            Reads or writes an <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of milliseconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_ms(System.Nullable{TmEssentials.TimeSingle}@,TmEssentials.TimeSingle)">
            <summary>
            Reads or writes a nullable <see cref="T:System.Single"/> as a nullable <see cref="T:TmEssentials.TimeSingle"/> of milliseconds through reference.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromMilliseconds(System.Single)"/>.</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged). If <paramref name="variable"/> is null, <paramref name="defaultValue"/> is written instead.</param>
            <param name="defaultValue">Value written when <paramref name="variable"/> is null. Ignored in read mode.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_sn(System.Nullable{TmEssentials.TimeSingle})">
            <summary>
            Reads or writes an <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of seconds. If the read value is -1, null is returned. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned. If the read value is -1, null is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_sn(System.Nullable{TmEssentials.TimeSingle}@)">
            <summary>
            Reads or writes an <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of seconds through reference. If the read value is -1, <paramref name="variable"/> is set to null. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromSeconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_msn(System.Nullable{TmEssentials.TimeSingle})">
            <summary>
            Reads or writes an <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of milliseconds. If the read value is -1, null is returned. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromMilliseconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to write. Ignored in read mode.</param>
            <returns>Value read in read mode. In write mode, <paramref name="variable"/> is returned. If the read value is -1, null is returned.</returns>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Single_msn(System.Nullable{TmEssentials.TimeSingle}@)">
            <summary>
            Reads or writes an <see cref="T:System.Single"/> as a <see cref="T:TmEssentials.TimeSingle"/> of milliseconds through reference. If the read value is -1, <paramref name="variable"/> is set to null. If the written <paramref name="variable"/> is null, -1 value is written.
            </summary>
            <remarks>A regular <see cref="T:System.Single"/> is read/written but converted to/from <see cref="T:TmEssentials.TimeSingle"/> using <see cref="M:TmEssentials.TimeSingle.FromMilliseconds(System.Single)"/> (except for -1).</remarks>
            <param name="variable">Variable to read or write. Read mode sets <paramref name="variable"/>, write mode uses <paramref name="variable"/> to write the value (keeping <paramref name="variable"/> unchanged).</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.OptimizedInt(System.Int32,System.Int32)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.OptimizedInt(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.OptimizedInt(System.Int32@,System.Int32)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.OptimizedInt(System.Nullable{System.Int32}@,System.Int32)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.OptimizedIntArray(System.Int32[],System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.OptimizedIntArray(System.Int32[]@,System.Int32,System.Nullable{System.Int32})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.OptimizedIntArray(System.Int32[]@,System.Nullable{System.Int32})">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Array length is negative.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.UntilFacade(System.IO.MemoryStream)">
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxReaderWriter.Archive``1(``0@,System.Int32)">
            <summary>
            Reads or writes a comprehensive binary component, usually in a way it's defined in the game code.
            </summary>
            <remarks>Binary component has to be defined with the <see cref="T:GBX.NET.IReadableWritable"/> interface.</remarks>
        </member>
        <member name="T:GBX.NET.GameBoxReaderWriterMode">
            <summary>
            Reader-writer mode.
            </summary>
        </member>
        <member name="F:GBX.NET.GameBoxReaderWriterMode.Read">
            <summary>
            Read mode.
            </summary>
        </member>
        <member name="F:GBX.NET.GameBoxReaderWriterMode.Write">
            <summary>
            Write mode.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBoxReadProgress.Stage">
            <summary>
            Reading stage of GBX.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBoxReadProgress.Percentage">
            <summary>
            Progress in percentage of each stage.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBoxReadProgress.Gbx">
            <summary>
            Gradually updated GBX object.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBoxReadProgress.Chunk">
            <summary>
            Chunk that has been currently read. This is null in <see cref="F:GBX.NET.GameBoxReadProgressStage.Header"/> and <see cref="F:GBX.NET.GameBoxReadProgressStage.RefTable"/> stages.
            </summary>
        </member>
        <member name="T:GBX.NET.GameBoxReadProgressStage">
            <summary>
            Stage of the GBX parse.
            </summary>
        </member>
        <member name="F:GBX.NET.GameBoxReadProgressStage.Header">
            <summary>
            Parse of the most basic header information.
            </summary>
        </member>
        <member name="F:GBX.NET.GameBoxReadProgressStage.HeaderUserData">
            <summary>
            Parse of the user data chunks.
            </summary>
        </member>
        <member name="F:GBX.NET.GameBoxReadProgressStage.RefTable">
            <summary>
            Parse of the reference table.
            </summary>
        </member>
        <member name="F:GBX.NET.GameBoxReadProgressStage.Body">
            <summary>
            Parse of the body.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBoxRefTable.AncestorLevel">
            <summary>
            How many folder levels to go up in the .pak folder hierarchy to reach the base folder from which files will be referenced.
            </summary>
        </member>
        <member name="M:GBX.NET.GameBoxRefTable.Parse(GBX.NET.GameBoxHeader,GBX.NET.GameBoxReader,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Parses the reference table.
            </summary>
            <param name="header">Header used to read ref. table compression and version from.</param>
            <param name="r">Reader.</param>
            <param name="logger">Logger.</param>
            <returns>Reference table.</returns>
            <exception cref="T:GBX.NET.Exceptions.CompressedRefTableException">Compressed reference is not supported.</exception>
            <exception cref="T:System.IO.InvalidDataException">Number of reference files is below zero.</exception>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
        </member>
        <member name="T:GBX.NET.GameBoxWriter">
            <summary>
            Writes data types from GameBox serialization.
            </summary>
        </member>
        <member name="P:GBX.NET.GameBoxWriter.AsyncAction">
            <summary>
            A delegate collection that gets executed throughout the asynchronous writing.
            </summary>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.#ctor(System.IO.Stream,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Constructs a binary writer specialized for Gbx serializing.
            </summary>
            <param name="output">The output stream.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.#ctor(System.IO.Stream,GBX.NET.IDRemap,GBX.NET.GameBoxAsyncWriteAction,Microsoft.Extensions.Logging.ILogger,GBX.NET.GbxState)">
            <summary>
            Constructs a binary writer specialized for Gbx serializing.
            </summary>
            <param name="output">The output stream.</param>
            <param name="remap">Node ID remap mode.</param>
            <param name="asyncAction">Specialized executions during asynchronous writing.</param>
            <param name="logger">Logger.</param>
            <param name="state">State of <see cref="T:GBX.NET.Id"/> and aux node write. Currently cannot be null.</param>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(System.Byte[])">
            <summary>
            Writes a byte array to the underlying stream.
            </summary>
            <param name="buffer">A byte array containing the data to write.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(System.String,GBX.NET.StringLengthPrefix)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(System.String)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(System.Boolean,System.Boolean)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(System.Boolean)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Vec2)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Vec3)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Vec4)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Quat)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Rect)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Box)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Iso4)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Mat3)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Mat4)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Int3)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Int2)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Byte3)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.FileRef)">
            <exception cref="T:System.ArgumentNullException"><paramref name="fileRef"/> is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteId(System.String,System.Boolean)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteId(GBX.NET.Id)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Ident)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.Write(GBX.NET.Node,GBX.NET.GameBoxRefTable.File)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteBigInt(System.Numerics.BigInteger,System.Int32)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteInt32_s(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteInt32_ms(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteInt32_sn(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteInt32_msn(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteSingle_s(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteSingle_ms(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteSingle_sn(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteSingle_msn(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteTimeInt32(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteTimeInt32Nullable(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteTimeSingle(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteTimeSingleNullable(TmEssentials.ITime)">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteNodeArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Writes the node array that are presented directly and not as a node reference.
            </summary>
            <typeparam name="T">Type of the node.</typeparam>
            <param name="nodes">Node array.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.OverflowException">There's more nodes than <see cref="F:System.Int32.MaxValue"/>.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteDictionaryNode``2(System.Collections.Generic.IDictionary{``0,``1},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.ArgumentNullException">Key in dictionary is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteAny(System.Object)">
            <summary>
            Writes any kind of value. Prefer using specified methods for better performance. Supported types are <see cref="T:System.Byte"/>, <see cref="T:System.Int16"/>, <see cref="T:System.Int32"/>,
            <see cref="T:System.Int64"/>, <see cref="T:System.Single"/>, <see cref="T:System.Boolean"/>, <see cref="T:System.String"/>, <see cref="T:System.SByte"/>, <see cref="T:System.UInt16"/>,
            <see cref="T:System.UInt32"/>, <see cref="T:System.UInt64"/>, <see cref="T:GBX.NET.Byte3"/>, <see cref="T:GBX.NET.Vec2"/>, <see cref="T:GBX.NET.Vec3"/>,
            <see cref="T:GBX.NET.Vec4"/>, <see cref="T:GBX.NET.Int3"/>, <see cref="T:GBX.NET.Id"/>, and <see cref="T:GBX.NET.Ident"/>.
            </summary>
            <param name="any">Any supported object.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="any"/> is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteArray``1(``0[])">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteArray_NoPrefix``1(``0[])">
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteByteArray(System.Byte[])">
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteArray``1(``0[],System.Action{``0})">
            <summary>
            First writes an <see cref="T:System.Int32"/> representing the length, then does a for loop with this length, each yield having an option to write something from <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the array.</typeparam>
            <param name="array">An array.</param>
            <param name="forLoop">Each element.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteArray``1(``0[],System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteList``1(System.Collections.Generic.IList{``0},System.Action{``0})">
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteList``1(System.Collections.Generic.IList{``0},System.Action{``0,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteList``1(System.Collections.Generic.IList{``0},System.Action{``0,System.Int32,GBX.NET.GameBoxWriter})">
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <exception cref="T:System.ArgumentNullException"><paramref name="forLoop"/> is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
            <exception cref="T:System.OverflowException">The number of elements in source is larger than <see cref="F:System.Int32.MaxValue"/>.</exception>
        </member>
        <member name="M:GBX.NET.GameBoxWriter.WriteDictionary``2(System.Collections.Generic.IDictionary{``0,``1})">
            <exception cref="T:System.ArgumentNullException">Key or value in dictionary is null.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed.</exception>
        </member>
        <member name="M:GBX.NET.GbxCompressor.Decompress(System.IO.Stream,System.IO.Stream)">
            <summary>
            Decompresses the body part of the GBX file, also setting the header parameter so that the outputted GBX file is compatible with the game. If the file is already detected decompressed, the input is just copied over to the output and false is returned, otherwise true.
            </summary>
            <param name="input">GBX stream to decompress.</param>
            <param name="output">Output GBX stream in the decompressed form.</param>
            <exception cref="T:System.IO.EndOfStreamException">The end of the stream is reached.</exception>
            <exception cref="T:System.ObjectDisposedException">One of the streams is closed.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:GBX.NET.Exceptions.VersionNotSupportedException">GBX files below version 3 are not supported.</exception>
            <exception cref="T:GBX.NET.Exceptions.TextFormatNotSupportedException">Text-formatted GBX files are not supported.</exception>
        </member>
        <member name="M:GBX.NET.HeaderChunk`1.ReadWrite(`0,GBX.NET.GameBoxReaderWriter)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="T:GBX.NET.Id">
            <summary>
            A struct that handles Id (lookback string) by either a string or an index.
            </summary>
        </member>
        <member name="P:GBX.NET.Id.Index">
            <summary>
            Represents an ID of the collection. Null if the <see cref="T:GBX.NET.Id"/> is string-defined.
            </summary>
        </member>
        <member name="P:GBX.NET.Id.String">
            <summary>
            Represents the string of the <see cref="T:GBX.NET.Id"/>. Null if the <see cref="T:GBX.NET.Id"/> is presented as a collection ID.
            </summary>
        </member>
        <member name="M:GBX.NET.Id.#ctor(System.String)">
            <summary>
            Constructs an <see cref="T:GBX.NET.Id"/> struct from a string representation.
            </summary>
            <param name="str">An Id string.</param>
        </member>
        <member name="M:GBX.NET.Id.#ctor(System.Int32)">
            <summary>
            Constructs an <see cref="T:GBX.NET.Id"/> struct from an ID reprentation.
            </summary>
            <param name="collectionId">A collection ID from the collection ID list (specified ID doesn't have to be available in the list).</param>
        </member>
        <member name="M:GBX.NET.Id.ToString">
            <summary>
            Converts the <see cref="T:GBX.NET.Id"/> to string, also into its readable form if the <see cref="T:GBX.NET.Id"/> is presented by collection ID.
            </summary>
            <returns>If collection is ID-represented, the ID is converted to <see cref="T:System.String"/> based from the collection ID list. If it's string-represented, <see cref="P:GBX.NET.Id.String"/> is returned instead.</returns>
        </member>
        <member name="T:GBX.NET.Ident">
            <summary>
            Identifier defined by ID, collection and author. Also known as "meta".
            </summary>
        </member>
        <member name="M:GBX.NET.Ident.#ctor(System.String,GBX.NET.Id,System.String)">
            <summary>
            Identifier defined by ID, collection and author. Also known as "meta".
            </summary>
        </member>
        <member name="T:GBX.NET.IDRemap">
            <summary>
            Tells the library to save a GBX file with correct IDs related to the game version.
            </summary>
        </member>
        <member name="F:GBX.NET.IDRemap.Latest">
            <summary>
            ID system used since TMUF until today.
            </summary>
        </member>
        <member name="F:GBX.NET.IDRemap.TrackMania2006">
            <summary>
            ID system used in TMU and older TM games.
            </summary>
        </member>
        <member name="F:GBX.NET.IDRemap.VirtualSkipper">
            <summary>
            ID system used in Virtual Skipper.
            </summary>
        </member>
        <member name="M:GBX.NET.INodeFull.GetGbx">
            <summary>
            Gets the <see cref="T:GBX.NET.GameBox"/> object holding the main node.
            </summary>
            <returns>The holding <see cref="T:GBX.NET.GameBox"/> object, if THIS node is the main node, otherwise null.</returns>
        </member>
        <member name="M:GBX.NET.INodeFull.Save(System.String,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Saves the serialized node on a disk in a Gbx form.
            </summary>
            <param name="fileName">Relative or absolute file path. Null will pick the <see cref="P:GBX.NET.GameBox.FileName"/> value from <see cref="N:GBX"/> object instead.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:GBX.NET.INodeFull.Save(System.IO.Stream,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Saves the serialized node to a stream in a Gbx form.
            </summary>
            <param name="stream">Any kind of stream that supports writing.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:GBX.NET.INodeFull.SaveAsync(System.String,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger,GBX.NET.GameBoxAsyncWriteAction,System.Threading.CancellationToken)">
            <summary>
            Saves the serialized node on a disk in a Gbx form.
            </summary>
            <param name="fileName">Relative or absolute file path. Null will pick the <see cref="P:GBX.NET.GameBox.FileName"/> value from <see cref="N:GBX"/> object instead.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
            <param name="asyncAction">Specialized executions during asynchronous writing.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="M:GBX.NET.INodeFull.SaveAsync(System.IO.Stream,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger,GBX.NET.GameBoxAsyncWriteAction,System.Threading.CancellationToken)">
            <summary>
            Saves the serialized node to a stream in a Gbx form.
            </summary>
            <param name="stream">Any kind of stream that supports writing.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
            <param name="asyncAction">Specialized executions during asynchronous writing.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="T:GBX.NET.INodeHeader">
            <summary>
            Identifies that the node can include user data in the serialized form.
            </summary>
        </member>
        <member name="T:GBX.NET.INodeHeader`1">
            <summary>
            Identifies that the node can include user data in the serialized form.
            </summary>
        </member>
        <member name="M:GBX.NET.Inputs.IInput.WithTime(TmEssentials.TimeInt32)">
            <summary>
            Recreates the input with a new timestamp and returns it.
            </summary>
            <param name="time">New time.</param>
            <returns>Recreated input.</returns>
        </member>
        <member name="T:GBX.NET.Inputs.Menu">
            <summary>
            Special input case. <paramref name="Pressed"/> indicates state of the menu, not the key press.
            </summary>
            <param name="Time"></param>
            <param name="Pressed"></param>
        </member>
        <member name="M:GBX.NET.Inputs.Menu.#ctor(TmEssentials.TimeInt32,System.Boolean)">
            <summary>
            Special input case. <paramref name="Pressed"/> indicates state of the menu, not the key press.
            </summary>
            <param name="Time"></param>
            <param name="Pressed"></param>
        </member>
        <member name="P:GBX.NET.Inputs.Menu.Time">
            <summary></summary>
        </member>
        <member name="P:GBX.NET.Inputs.Menu.Pressed">
            <summary></summary>
        </member>
        <member name="M:GBX.NET.IReadableWritableChunk.Read(GBX.NET.Node,GBX.NET.GameBoxReader)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
        </member>
        <member name="M:GBX.NET.IReadableWritableChunk.Write(GBX.NET.Node,GBX.NET.GameBoxWriter)">
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.IReadableWritableChunk.ReadWrite(GBX.NET.Node,GBX.NET.GameBoxReaderWriter)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.IReadableWritableChunk.ReadAsync(GBX.NET.Node,GBX.NET.GameBoxReader,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
        </member>
        <member name="M:GBX.NET.IReadableWritableChunk.WriteAsync(GBX.NET.Node,GBX.NET.GameBoxWriter,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="M:GBX.NET.IReadableWritableChunk.ReadWriteAsync(GBX.NET.Node,GBX.NET.GameBoxReaderWriter,System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkWriteNotImplementedException">Chunk does not support writing.</exception>
        </member>
        <member name="T:GBX.NET.IVec">
            <summary>
            A vector.
            </summary>
        </member>
        <member name="M:GBX.NET.Lzo.CheckForLzo">
            <exception cref="T:GBX.NET.Exceptions.MissingLzoException"></exception>
        </member>
        <member name="T:GBX.NET.Node">
            <summary>
            The skeleton of the Gbx object and representation of the <see cref="T:GBX.NET.Engines.MwFoundations.CMwNod"/>.
            </summary>
            <remarks>You shouldn't inherit this class unless <see cref="T:GBX.NET.Engines.MwFoundations.CMwNod"/> cannot be inherited instead.</remarks>
        </member>
        <member name="M:GBX.NET.Node.GetGbx">
            <summary>
            Gets the <see cref="T:GBX.NET.GameBox"/> object holding the main node.
            </summary>
            <returns>The holding <see cref="T:GBX.NET.GameBox"/> object, if THIS node is the main node, otherwise null.</returns>
        </member>
        <member name="M:GBX.NET.Node.ToString">
            <summary>
            Returns the name of the class formatted as <c>[engine]::[class]</c>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GBX.NET.Node.Parse(GBX.NET.GameBoxReader,System.Nullable{System.UInt32},System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean)">
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.Node.Parse(GBX.NET.Node,GBX.NET.GameBoxReader,System.IProgress{GBX.NET.GameBoxReadProgress},System.Boolean)">
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.Node.ParseAsync(GBX.NET.GameBoxReader,System.Nullable{System.UInt32},System.Threading.CancellationToken)">
            <exception cref="T:GBX.NET.Exceptions.NodeNotImplementedException">Auxiliary node is not implemented and is not parseable.</exception>
            <exception cref="T:GBX.NET.Exceptions.ChunkReadNotImplementedException">Chunk does not support reading.</exception>
            <exception cref="T:GBX.NET.Exceptions.IgnoredUnskippableChunkException">Chunk is known but its content is unknown to read.</exception>
        </member>
        <member name="M:GBX.NET.Node.DiscoverAllChunks">
            <summary>
            Discovers all chunks in the node.
            </summary>
            <exception cref="T:System.AggregateException"/>
        </member>
        <member name="M:GBX.NET.Node.ToGbx(System.Boolean)">
            <summary>
            Wraps this node into <see cref="T:GBX.NET.GameBox"/> object.
            </summary>
            <param name="nonGeneric">If to instantiate a <see cref="T:GBX.NET.GameBox"/> object instead of the generic <see cref="T:GBX.NET.GameBox`1"/>, where comparing of the node type has to be done on <see cref="P:GBX.NET.GameBox.Node"/> level, but the method executes faster.</param>
            <returns>A <see cref="T:GBX.NET.GameBox"/> or <see cref="T:GBX.NET.GameBox`1"/> depending on the <paramref name="nonGeneric"/> parameter.</returns>
        </member>
        <member name="M:GBX.NET.Node.ToGbx``1">
            <summary>
            Wraps this node into <see cref="T:GBX.NET.GameBox`1"/> object with explicit conversion.
            </summary>
            <typeparam name="T">Type of the node to use on <see cref="T:GBX.NET.GameBox`1"/>.</typeparam>
            <returns>A <see cref="T:GBX.NET.GameBox`1"/>.</returns>
        </member>
        <member name="M:GBX.NET.Node.Save(System.String,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Saves the serialized node on a disk in a Gbx form.
            </summary>
            <param name="fileName">Relative or absolute file path. Null will pick the <see cref="P:GBX.NET.GameBox.FileName"/> value from <see cref="N:GBX"/> object instead.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:GBX.NET.Node.Save(System.IO.Stream,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Saves the serialized node to a stream in a Gbx form.
            </summary>
            <param name="stream">Any kind of stream that supports writing.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:GBX.NET.Node.SaveAsync(System.String,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger,GBX.NET.GameBoxAsyncWriteAction,System.Threading.CancellationToken)">
            <summary>
            Saves the serialized node on a disk in a Gbx form.
            </summary>
            <param name="fileName">Relative or absolute file path. Null will pick the <see cref="P:GBX.NET.GameBox.FileName"/> value from <see cref="N:GBX"/> object instead.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
            <param name="asyncAction">Specialized executions during asynchronous writing.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="M:GBX.NET.Node.SaveAsync(System.IO.Stream,GBX.NET.IDRemap,Microsoft.Extensions.Logging.ILogger,GBX.NET.GameBoxAsyncWriteAction,System.Threading.CancellationToken)">
            <summary>
            Saves the serialized node to a stream in a GBX form.
            </summary>
            <param name="stream">Any kind of stream that supports writing.</param>
            <param name="remap">What to remap the newest node IDs to. Used for older games.</param>
            <param name="logger">Logger.</param>
            <param name="asyncAction">Specialized executions during asynchronous writing.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="T:GBX.NET.Rect">
            <summary>
            GmRectAligned.
            </summary>
        </member>
        <member name="M:GBX.NET.Rect.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            GmRectAligned.
            </summary>
        </member>
        <member name="M:GBX.NET.Utils.ObjFileExporter.#ctor(System.IO.Stream,System.IO.Stream,System.Nullable{System.Int32},System.String,System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Creates an exporter to .obj file.
            </summary>
            <param name="objStream">Stream to write OBJ content into.</param>
            <param name="mtlStream">Stream to write MTL content into.</param>
            <param name="mergeVerticesDigitThreshold">If set, overlapping vertices (usually between the mesh groups) will be merged. 3 or 4 give the best accuracy.</param>
            <param name="gameDataFolderPath">Folder for the Material.Gbx, Texture.Gbx, and .dds lookup.</param>
            <param name="encoding">Encoding to use.</param>
            <param name="leaveOpen">If to keep the streams open.</param>
            <param name="corruptedMaterials">If to use a different way to handle corrupted material files (via header reference table, to avoid body parse). Exists due to TMTurbo problems. Can give much less accurate results.</param>
        </member>
    </members>
</doc>
